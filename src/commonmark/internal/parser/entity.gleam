////
//// WARNING: This file is autogenerated. Modifications to this file will not persist.
////
//// You can run `gleam run -m codegen` to update it if you think there are entities missing.
////
//// Data sourced from https://html.spec.whatwg.org/entities.json
////

// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

import gleam/list
import gleam/string

pub fn match_html_entity(
  input: List(String),
) -> Result(#(List(String), String, String), Nil) {
  let entity = input |> list.take(40) |> string.join("")
  case list.first(input) {
    Ok("A") -> match_upper_a
    Ok("B") -> match_upper_b
    Ok("C") -> match_upper_c
    Ok("D") -> match_upper_d
    Ok("E") -> match_upper_e
    Ok("F") -> match_upper_f
    Ok("G") -> match_upper_g
    Ok("H") -> match_upper_h
    Ok("I") -> match_upper_i
    Ok("J") -> match_upper_j
    Ok("K") -> match_upper_k
    Ok("L") -> match_upper_l
    Ok("M") -> match_upper_m
    Ok("N") -> match_upper_n
    Ok("O") -> match_upper_o
    Ok("P") -> match_upper_p
    Ok("Q") -> match_upper_q
    Ok("R") -> match_upper_r
    Ok("S") -> match_upper_s
    Ok("T") -> match_upper_t
    Ok("U") -> match_upper_u
    Ok("V") -> match_upper_v
    Ok("W") -> match_upper_w
    Ok("X") -> match_upper_x
    Ok("Y") -> match_upper_y
    Ok("Z") -> match_upper_z
    Ok("a") -> match_a
    Ok("b") -> match_b
    Ok("c") -> match_c
    Ok("d") -> match_d
    Ok("e") -> match_e
    Ok("f") -> match_f
    Ok("g") -> match_g
    Ok("h") -> match_h
    Ok("i") -> match_i
    Ok("j") -> match_j
    Ok("k") -> match_k
    Ok("l") -> match_l
    Ok("m") -> match_m
    Ok("n") -> match_n
    Ok("o") -> match_o
    Ok("p") -> match_p
    Ok("q") -> match_q
    Ok("r") -> match_r
    Ok("s") -> match_s
    Ok("t") -> match_t
    Ok("u") -> match_u
    Ok("v") -> match_v
    Ok("w") -> match_w
    Ok("x") -> match_x
    Ok("y") -> match_y
    Ok("z") -> match_z
    _ -> fn(_, _) { Error(Nil) }
  }(entity, input)
}

fn match_upper_a(entity: String, input: List(String)) {
  case entity {
    "AElig;" <> _ -> Ok(#(list.drop(input, 6), "AElig;", "\u{C6}"))
    "AMP;" <> _ -> Ok(#(list.drop(input, 4), "AMP;", "\u{26}"))
    "Aacute;" <> _ -> Ok(#(list.drop(input, 7), "Aacute;", "\u{C1}"))
    "Abreve;" <> _ -> Ok(#(list.drop(input, 7), "Abreve;", "\u{102}"))
    "Acirc;" <> _ -> Ok(#(list.drop(input, 6), "Acirc;", "\u{C2}"))
    "Acy;" <> _ -> Ok(#(list.drop(input, 4), "Acy;", "\u{410}"))
    "Afr;" <> _ -> Ok(#(list.drop(input, 4), "Afr;", "\u{1D504}"))
    "Agrave;" <> _ -> Ok(#(list.drop(input, 7), "Agrave;", "\u{C0}"))
    "Alpha;" <> _ -> Ok(#(list.drop(input, 6), "Alpha;", "\u{391}"))
    "Amacr;" <> _ -> Ok(#(list.drop(input, 6), "Amacr;", "\u{100}"))
    "And;" <> _ -> Ok(#(list.drop(input, 4), "And;", "\u{2A53}"))
    "Aogon;" <> _ -> Ok(#(list.drop(input, 6), "Aogon;", "\u{104}"))
    "Aopf;" <> _ -> Ok(#(list.drop(input, 5), "Aopf;", "\u{1D538}"))
    "ApplyFunction;" <> _ ->
      Ok(#(list.drop(input, 14), "ApplyFunction;", "\u{2061}"))
    "Aring;" <> _ -> Ok(#(list.drop(input, 6), "Aring;", "\u{C5}"))
    "Ascr;" <> _ -> Ok(#(list.drop(input, 5), "Ascr;", "\u{1D49C}"))
    "Assign;" <> _ -> Ok(#(list.drop(input, 7), "Assign;", "\u{2254}"))
    "Atilde;" <> _ -> Ok(#(list.drop(input, 7), "Atilde;", "\u{C3}"))
    "Auml;" <> _ -> Ok(#(list.drop(input, 5), "Auml;", "\u{C4}"))
    _ -> Error(Nil)
  }
}

fn match_upper_b(entity: String, input: List(String)) {
  case entity {
    "Backslash;" <> _ -> Ok(#(list.drop(input, 10), "Backslash;", "\u{2216}"))
    "Barv;" <> _ -> Ok(#(list.drop(input, 5), "Barv;", "\u{2AE7}"))
    "Barwed;" <> _ -> Ok(#(list.drop(input, 7), "Barwed;", "\u{2306}"))
    "Bcy;" <> _ -> Ok(#(list.drop(input, 4), "Bcy;", "\u{411}"))
    "Because;" <> _ -> Ok(#(list.drop(input, 8), "Because;", "\u{2235}"))
    "Bernoullis;" <> _ -> Ok(#(list.drop(input, 11), "Bernoullis;", "\u{212C}"))
    "Beta;" <> _ -> Ok(#(list.drop(input, 5), "Beta;", "\u{392}"))
    "Bfr;" <> _ -> Ok(#(list.drop(input, 4), "Bfr;", "\u{1D505}"))
    "Bopf;" <> _ -> Ok(#(list.drop(input, 5), "Bopf;", "\u{1D539}"))
    "Breve;" <> _ -> Ok(#(list.drop(input, 6), "Breve;", "\u{2D8}"))
    "Bscr;" <> _ -> Ok(#(list.drop(input, 5), "Bscr;", "\u{212C}"))
    "Bumpeq;" <> _ -> Ok(#(list.drop(input, 7), "Bumpeq;", "\u{224E}"))
    _ -> Error(Nil)
  }
}

fn match_upper_c(entity: String, input: List(String)) {
  case entity {
    "CHcy;" <> _ -> Ok(#(list.drop(input, 5), "CHcy;", "\u{427}"))
    "COPY;" <> _ -> Ok(#(list.drop(input, 5), "COPY;", "\u{A9}"))
    "Cacute;" <> _ -> Ok(#(list.drop(input, 7), "Cacute;", "\u{106}"))
    "Cap;" <> _ -> Ok(#(list.drop(input, 4), "Cap;", "\u{22D2}"))
    "CapitalDifferentialD;" <> _ ->
      Ok(#(list.drop(input, 21), "CapitalDifferentialD;", "\u{2145}"))
    "Cayleys;" <> _ -> Ok(#(list.drop(input, 8), "Cayleys;", "\u{212D}"))
    "Ccaron;" <> _ -> Ok(#(list.drop(input, 7), "Ccaron;", "\u{10C}"))
    "Ccedil;" <> _ -> Ok(#(list.drop(input, 7), "Ccedil;", "\u{C7}"))
    "Ccirc;" <> _ -> Ok(#(list.drop(input, 6), "Ccirc;", "\u{108}"))
    "Cconint;" <> _ -> Ok(#(list.drop(input, 8), "Cconint;", "\u{2230}"))
    "Cdot;" <> _ -> Ok(#(list.drop(input, 5), "Cdot;", "\u{10A}"))
    "Cedilla;" <> _ -> Ok(#(list.drop(input, 8), "Cedilla;", "\u{B8}"))
    "CenterDot;" <> _ -> Ok(#(list.drop(input, 10), "CenterDot;", "\u{B7}"))
    "Cfr;" <> _ -> Ok(#(list.drop(input, 4), "Cfr;", "\u{212D}"))
    "Chi;" <> _ -> Ok(#(list.drop(input, 4), "Chi;", "\u{3A7}"))
    "CircleDot;" <> _ -> Ok(#(list.drop(input, 10), "CircleDot;", "\u{2299}"))
    "CircleMinus;" <> _ ->
      Ok(#(list.drop(input, 12), "CircleMinus;", "\u{2296}"))
    "CirclePlus;" <> _ -> Ok(#(list.drop(input, 11), "CirclePlus;", "\u{2295}"))
    "CircleTimes;" <> _ ->
      Ok(#(list.drop(input, 12), "CircleTimes;", "\u{2297}"))
    "ClockwiseContourIntegral;" <> _ ->
      Ok(#(list.drop(input, 25), "ClockwiseContourIntegral;", "\u{2232}"))
    "CloseCurlyDoubleQuote;" <> _ ->
      Ok(#(list.drop(input, 22), "CloseCurlyDoubleQuote;", "\u{201D}"))
    "CloseCurlyQuote;" <> _ ->
      Ok(#(list.drop(input, 16), "CloseCurlyQuote;", "\u{2019}"))
    "Colon;" <> _ -> Ok(#(list.drop(input, 6), "Colon;", "\u{2237}"))
    "Colone;" <> _ -> Ok(#(list.drop(input, 7), "Colone;", "\u{2A74}"))
    "Congruent;" <> _ -> Ok(#(list.drop(input, 10), "Congruent;", "\u{2261}"))
    "Conint;" <> _ -> Ok(#(list.drop(input, 7), "Conint;", "\u{222F}"))
    "ContourIntegral;" <> _ ->
      Ok(#(list.drop(input, 16), "ContourIntegral;", "\u{222E}"))
    "Copf;" <> _ -> Ok(#(list.drop(input, 5), "Copf;", "\u{2102}"))
    "Coproduct;" <> _ -> Ok(#(list.drop(input, 10), "Coproduct;", "\u{2210}"))
    "CounterClockwiseContourIntegral;" <> _ ->
      Ok(#(list.drop(input, 32), "CounterClockwiseContourIntegral;", "\u{2233}"))
    "Cross;" <> _ -> Ok(#(list.drop(input, 6), "Cross;", "\u{2A2F}"))
    "Cscr;" <> _ -> Ok(#(list.drop(input, 5), "Cscr;", "\u{1D49E}"))
    "Cup;" <> _ -> Ok(#(list.drop(input, 4), "Cup;", "\u{22D3}"))
    "CupCap;" <> _ -> Ok(#(list.drop(input, 7), "CupCap;", "\u{224D}"))
    _ -> Error(Nil)
  }
}

fn match_upper_d(entity: String, input: List(String)) {
  case entity {
    "DD;" <> _ -> Ok(#(list.drop(input, 3), "DD;", "\u{2145}"))
    "DDotrahd;" <> _ -> Ok(#(list.drop(input, 9), "DDotrahd;", "\u{2911}"))
    "DJcy;" <> _ -> Ok(#(list.drop(input, 5), "DJcy;", "\u{402}"))
    "DScy;" <> _ -> Ok(#(list.drop(input, 5), "DScy;", "\u{405}"))
    "DZcy;" <> _ -> Ok(#(list.drop(input, 5), "DZcy;", "\u{40F}"))
    "Dagger;" <> _ -> Ok(#(list.drop(input, 7), "Dagger;", "\u{2021}"))
    "Darr;" <> _ -> Ok(#(list.drop(input, 5), "Darr;", "\u{21A1}"))
    "Dashv;" <> _ -> Ok(#(list.drop(input, 6), "Dashv;", "\u{2AE4}"))
    "Dcaron;" <> _ -> Ok(#(list.drop(input, 7), "Dcaron;", "\u{10E}"))
    "Dcy;" <> _ -> Ok(#(list.drop(input, 4), "Dcy;", "\u{414}"))
    "Del;" <> _ -> Ok(#(list.drop(input, 4), "Del;", "\u{2207}"))
    "Delta;" <> _ -> Ok(#(list.drop(input, 6), "Delta;", "\u{394}"))
    "Dfr;" <> _ -> Ok(#(list.drop(input, 4), "Dfr;", "\u{1D507}"))
    "DiacriticalAcute;" <> _ ->
      Ok(#(list.drop(input, 17), "DiacriticalAcute;", "\u{B4}"))
    "DiacriticalDot;" <> _ ->
      Ok(#(list.drop(input, 15), "DiacriticalDot;", "\u{2D9}"))
    "DiacriticalDoubleAcute;" <> _ ->
      Ok(#(list.drop(input, 23), "DiacriticalDoubleAcute;", "\u{2DD}"))
    "DiacriticalGrave;" <> _ ->
      Ok(#(list.drop(input, 17), "DiacriticalGrave;", "\u{60}"))
    "DiacriticalTilde;" <> _ ->
      Ok(#(list.drop(input, 17), "DiacriticalTilde;", "\u{2DC}"))
    "Diamond;" <> _ -> Ok(#(list.drop(input, 8), "Diamond;", "\u{22C4}"))
    "DifferentialD;" <> _ ->
      Ok(#(list.drop(input, 14), "DifferentialD;", "\u{2146}"))
    "Dopf;" <> _ -> Ok(#(list.drop(input, 5), "Dopf;", "\u{1D53B}"))
    "Dot;" <> _ -> Ok(#(list.drop(input, 4), "Dot;", "\u{A8}"))
    "DotDot;" <> _ -> Ok(#(list.drop(input, 7), "DotDot;", "\u{20DC}"))
    "DotEqual;" <> _ -> Ok(#(list.drop(input, 9), "DotEqual;", "\u{2250}"))
    "DoubleContourIntegral;" <> _ ->
      Ok(#(list.drop(input, 22), "DoubleContourIntegral;", "\u{222F}"))
    "DoubleDot;" <> _ -> Ok(#(list.drop(input, 10), "DoubleDot;", "\u{A8}"))
    "DoubleDownArrow;" <> _ ->
      Ok(#(list.drop(input, 16), "DoubleDownArrow;", "\u{21D3}"))
    "DoubleLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 16), "DoubleLeftArrow;", "\u{21D0}"))
    "DoubleLeftRightArrow;" <> _ ->
      Ok(#(list.drop(input, 21), "DoubleLeftRightArrow;", "\u{21D4}"))
    "DoubleLeftTee;" <> _ ->
      Ok(#(list.drop(input, 14), "DoubleLeftTee;", "\u{2AE4}"))
    "DoubleLongLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 20), "DoubleLongLeftArrow;", "\u{27F8}"))
    "DoubleLongLeftRightArrow;" <> _ ->
      Ok(#(list.drop(input, 25), "DoubleLongLeftRightArrow;", "\u{27FA}"))
    "DoubleLongRightArrow;" <> _ ->
      Ok(#(list.drop(input, 21), "DoubleLongRightArrow;", "\u{27F9}"))
    "DoubleRightArrow;" <> _ ->
      Ok(#(list.drop(input, 17), "DoubleRightArrow;", "\u{21D2}"))
    "DoubleRightTee;" <> _ ->
      Ok(#(list.drop(input, 15), "DoubleRightTee;", "\u{22A8}"))
    "DoubleUpArrow;" <> _ ->
      Ok(#(list.drop(input, 14), "DoubleUpArrow;", "\u{21D1}"))
    "DoubleUpDownArrow;" <> _ ->
      Ok(#(list.drop(input, 18), "DoubleUpDownArrow;", "\u{21D5}"))
    "DoubleVerticalBar;" <> _ ->
      Ok(#(list.drop(input, 18), "DoubleVerticalBar;", "\u{2225}"))
    "DownArrow;" <> _ -> Ok(#(list.drop(input, 10), "DownArrow;", "\u{2193}"))
    "DownArrowBar;" <> _ ->
      Ok(#(list.drop(input, 13), "DownArrowBar;", "\u{2913}"))
    "DownArrowUpArrow;" <> _ ->
      Ok(#(list.drop(input, 17), "DownArrowUpArrow;", "\u{21F5}"))
    "DownBreve;" <> _ -> Ok(#(list.drop(input, 10), "DownBreve;", "\u{311}"))
    "DownLeftRightVector;" <> _ ->
      Ok(#(list.drop(input, 20), "DownLeftRightVector;", "\u{2950}"))
    "DownLeftTeeVector;" <> _ ->
      Ok(#(list.drop(input, 18), "DownLeftTeeVector;", "\u{295E}"))
    "DownLeftVector;" <> _ ->
      Ok(#(list.drop(input, 15), "DownLeftVector;", "\u{21BD}"))
    "DownLeftVectorBar;" <> _ ->
      Ok(#(list.drop(input, 18), "DownLeftVectorBar;", "\u{2956}"))
    "DownRightTeeVector;" <> _ ->
      Ok(#(list.drop(input, 19), "DownRightTeeVector;", "\u{295F}"))
    "DownRightVector;" <> _ ->
      Ok(#(list.drop(input, 16), "DownRightVector;", "\u{21C1}"))
    "DownRightVectorBar;" <> _ ->
      Ok(#(list.drop(input, 19), "DownRightVectorBar;", "\u{2957}"))
    "DownTee;" <> _ -> Ok(#(list.drop(input, 8), "DownTee;", "\u{22A4}"))
    "DownTeeArrow;" <> _ ->
      Ok(#(list.drop(input, 13), "DownTeeArrow;", "\u{21A7}"))
    "Downarrow;" <> _ -> Ok(#(list.drop(input, 10), "Downarrow;", "\u{21D3}"))
    "Dscr;" <> _ -> Ok(#(list.drop(input, 5), "Dscr;", "\u{1D49F}"))
    "Dstrok;" <> _ -> Ok(#(list.drop(input, 7), "Dstrok;", "\u{110}"))
    _ -> Error(Nil)
  }
}

fn match_upper_e(entity: String, input: List(String)) {
  case entity {
    "ENG;" <> _ -> Ok(#(list.drop(input, 4), "ENG;", "\u{14A}"))
    "ETH;" <> _ -> Ok(#(list.drop(input, 4), "ETH;", "\u{D0}"))
    "Eacute;" <> _ -> Ok(#(list.drop(input, 7), "Eacute;", "\u{C9}"))
    "Ecaron;" <> _ -> Ok(#(list.drop(input, 7), "Ecaron;", "\u{11A}"))
    "Ecirc;" <> _ -> Ok(#(list.drop(input, 6), "Ecirc;", "\u{CA}"))
    "Ecy;" <> _ -> Ok(#(list.drop(input, 4), "Ecy;", "\u{42D}"))
    "Edot;" <> _ -> Ok(#(list.drop(input, 5), "Edot;", "\u{116}"))
    "Efr;" <> _ -> Ok(#(list.drop(input, 4), "Efr;", "\u{1D508}"))
    "Egrave;" <> _ -> Ok(#(list.drop(input, 7), "Egrave;", "\u{C8}"))
    "Element;" <> _ -> Ok(#(list.drop(input, 8), "Element;", "\u{2208}"))
    "Emacr;" <> _ -> Ok(#(list.drop(input, 6), "Emacr;", "\u{112}"))
    "EmptySmallSquare;" <> _ ->
      Ok(#(list.drop(input, 17), "EmptySmallSquare;", "\u{25FB}"))
    "EmptyVerySmallSquare;" <> _ ->
      Ok(#(list.drop(input, 21), "EmptyVerySmallSquare;", "\u{25AB}"))
    "Eogon;" <> _ -> Ok(#(list.drop(input, 6), "Eogon;", "\u{118}"))
    "Eopf;" <> _ -> Ok(#(list.drop(input, 5), "Eopf;", "\u{1D53C}"))
    "Epsilon;" <> _ -> Ok(#(list.drop(input, 8), "Epsilon;", "\u{395}"))
    "Equal;" <> _ -> Ok(#(list.drop(input, 6), "Equal;", "\u{2A75}"))
    "EqualTilde;" <> _ -> Ok(#(list.drop(input, 11), "EqualTilde;", "\u{2242}"))
    "Equilibrium;" <> _ ->
      Ok(#(list.drop(input, 12), "Equilibrium;", "\u{21CC}"))
    "Escr;" <> _ -> Ok(#(list.drop(input, 5), "Escr;", "\u{2130}"))
    "Esim;" <> _ -> Ok(#(list.drop(input, 5), "Esim;", "\u{2A73}"))
    "Eta;" <> _ -> Ok(#(list.drop(input, 4), "Eta;", "\u{397}"))
    "Euml;" <> _ -> Ok(#(list.drop(input, 5), "Euml;", "\u{CB}"))
    "Exists;" <> _ -> Ok(#(list.drop(input, 7), "Exists;", "\u{2203}"))
    "ExponentialE;" <> _ ->
      Ok(#(list.drop(input, 13), "ExponentialE;", "\u{2147}"))
    _ -> Error(Nil)
  }
}

fn match_upper_f(entity: String, input: List(String)) {
  case entity {
    "Fcy;" <> _ -> Ok(#(list.drop(input, 4), "Fcy;", "\u{424}"))
    "Ffr;" <> _ -> Ok(#(list.drop(input, 4), "Ffr;", "\u{1D509}"))
    "FilledSmallSquare;" <> _ ->
      Ok(#(list.drop(input, 18), "FilledSmallSquare;", "\u{25FC}"))
    "FilledVerySmallSquare;" <> _ ->
      Ok(#(list.drop(input, 22), "FilledVerySmallSquare;", "\u{25AA}"))
    "Fopf;" <> _ -> Ok(#(list.drop(input, 5), "Fopf;", "\u{1D53D}"))
    "ForAll;" <> _ -> Ok(#(list.drop(input, 7), "ForAll;", "\u{2200}"))
    "Fouriertrf;" <> _ -> Ok(#(list.drop(input, 11), "Fouriertrf;", "\u{2131}"))
    "Fscr;" <> _ -> Ok(#(list.drop(input, 5), "Fscr;", "\u{2131}"))
    _ -> Error(Nil)
  }
}

fn match_upper_g(entity: String, input: List(String)) {
  case entity {
    "GJcy;" <> _ -> Ok(#(list.drop(input, 5), "GJcy;", "\u{403}"))
    "GT;" <> _ -> Ok(#(list.drop(input, 3), "GT;", "\u{3E}"))
    "Gamma;" <> _ -> Ok(#(list.drop(input, 6), "Gamma;", "\u{393}"))
    "Gammad;" <> _ -> Ok(#(list.drop(input, 7), "Gammad;", "\u{3DC}"))
    "Gbreve;" <> _ -> Ok(#(list.drop(input, 7), "Gbreve;", "\u{11E}"))
    "Gcedil;" <> _ -> Ok(#(list.drop(input, 7), "Gcedil;", "\u{122}"))
    "Gcirc;" <> _ -> Ok(#(list.drop(input, 6), "Gcirc;", "\u{11C}"))
    "Gcy;" <> _ -> Ok(#(list.drop(input, 4), "Gcy;", "\u{413}"))
    "Gdot;" <> _ -> Ok(#(list.drop(input, 5), "Gdot;", "\u{120}"))
    "Gfr;" <> _ -> Ok(#(list.drop(input, 4), "Gfr;", "\u{1D50A}"))
    "Gg;" <> _ -> Ok(#(list.drop(input, 3), "Gg;", "\u{22D9}"))
    "Gopf;" <> _ -> Ok(#(list.drop(input, 5), "Gopf;", "\u{1D53E}"))
    "GreaterEqual;" <> _ ->
      Ok(#(list.drop(input, 13), "GreaterEqual;", "\u{2265}"))
    "GreaterEqualLess;" <> _ ->
      Ok(#(list.drop(input, 17), "GreaterEqualLess;", "\u{22DB}"))
    "GreaterFullEqual;" <> _ ->
      Ok(#(list.drop(input, 17), "GreaterFullEqual;", "\u{2267}"))
    "GreaterGreater;" <> _ ->
      Ok(#(list.drop(input, 15), "GreaterGreater;", "\u{2AA2}"))
    "GreaterLess;" <> _ ->
      Ok(#(list.drop(input, 12), "GreaterLess;", "\u{2277}"))
    "GreaterSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 18), "GreaterSlantEqual;", "\u{2A7E}"))
    "GreaterTilde;" <> _ ->
      Ok(#(list.drop(input, 13), "GreaterTilde;", "\u{2273}"))
    "Gscr;" <> _ -> Ok(#(list.drop(input, 5), "Gscr;", "\u{1D4A2}"))
    "Gt;" <> _ -> Ok(#(list.drop(input, 3), "Gt;", "\u{226B}"))
    _ -> Error(Nil)
  }
}

fn match_upper_h(entity: String, input: List(String)) {
  case entity {
    "HARDcy;" <> _ -> Ok(#(list.drop(input, 7), "HARDcy;", "\u{42A}"))
    "Hacek;" <> _ -> Ok(#(list.drop(input, 6), "Hacek;", "\u{2C7}"))
    "Hat;" <> _ -> Ok(#(list.drop(input, 4), "Hat;", "\u{5E}"))
    "Hcirc;" <> _ -> Ok(#(list.drop(input, 6), "Hcirc;", "\u{124}"))
    "Hfr;" <> _ -> Ok(#(list.drop(input, 4), "Hfr;", "\u{210C}"))
    "HilbertSpace;" <> _ ->
      Ok(#(list.drop(input, 13), "HilbertSpace;", "\u{210B}"))
    "Hopf;" <> _ -> Ok(#(list.drop(input, 5), "Hopf;", "\u{210D}"))
    "HorizontalLine;" <> _ ->
      Ok(#(list.drop(input, 15), "HorizontalLine;", "\u{2500}"))
    "Hscr;" <> _ -> Ok(#(list.drop(input, 5), "Hscr;", "\u{210B}"))
    "Hstrok;" <> _ -> Ok(#(list.drop(input, 7), "Hstrok;", "\u{126}"))
    "HumpDownHump;" <> _ ->
      Ok(#(list.drop(input, 13), "HumpDownHump;", "\u{224E}"))
    "HumpEqual;" <> _ -> Ok(#(list.drop(input, 10), "HumpEqual;", "\u{224F}"))
    _ -> Error(Nil)
  }
}

fn match_upper_i(entity: String, input: List(String)) {
  case entity {
    "IEcy;" <> _ -> Ok(#(list.drop(input, 5), "IEcy;", "\u{415}"))
    "IJlig;" <> _ -> Ok(#(list.drop(input, 6), "IJlig;", "\u{132}"))
    "IOcy;" <> _ -> Ok(#(list.drop(input, 5), "IOcy;", "\u{401}"))
    "Iacute;" <> _ -> Ok(#(list.drop(input, 7), "Iacute;", "\u{CD}"))
    "Icirc;" <> _ -> Ok(#(list.drop(input, 6), "Icirc;", "\u{CE}"))
    "Icy;" <> _ -> Ok(#(list.drop(input, 4), "Icy;", "\u{418}"))
    "Idot;" <> _ -> Ok(#(list.drop(input, 5), "Idot;", "\u{130}"))
    "Ifr;" <> _ -> Ok(#(list.drop(input, 4), "Ifr;", "\u{2111}"))
    "Igrave;" <> _ -> Ok(#(list.drop(input, 7), "Igrave;", "\u{CC}"))
    "Im;" <> _ -> Ok(#(list.drop(input, 3), "Im;", "\u{2111}"))
    "Imacr;" <> _ -> Ok(#(list.drop(input, 6), "Imacr;", "\u{12A}"))
    "ImaginaryI;" <> _ -> Ok(#(list.drop(input, 11), "ImaginaryI;", "\u{2148}"))
    "Implies;" <> _ -> Ok(#(list.drop(input, 8), "Implies;", "\u{21D2}"))
    "Int;" <> _ -> Ok(#(list.drop(input, 4), "Int;", "\u{222C}"))
    "Integral;" <> _ -> Ok(#(list.drop(input, 9), "Integral;", "\u{222B}"))
    "Intersection;" <> _ ->
      Ok(#(list.drop(input, 13), "Intersection;", "\u{22C2}"))
    "InvisibleComma;" <> _ ->
      Ok(#(list.drop(input, 15), "InvisibleComma;", "\u{2063}"))
    "InvisibleTimes;" <> _ ->
      Ok(#(list.drop(input, 15), "InvisibleTimes;", "\u{2062}"))
    "Iogon;" <> _ -> Ok(#(list.drop(input, 6), "Iogon;", "\u{12E}"))
    "Iopf;" <> _ -> Ok(#(list.drop(input, 5), "Iopf;", "\u{1D540}"))
    "Iota;" <> _ -> Ok(#(list.drop(input, 5), "Iota;", "\u{399}"))
    "Iscr;" <> _ -> Ok(#(list.drop(input, 5), "Iscr;", "\u{2110}"))
    "Itilde;" <> _ -> Ok(#(list.drop(input, 7), "Itilde;", "\u{128}"))
    "Iukcy;" <> _ -> Ok(#(list.drop(input, 6), "Iukcy;", "\u{406}"))
    "Iuml;" <> _ -> Ok(#(list.drop(input, 5), "Iuml;", "\u{CF}"))
    _ -> Error(Nil)
  }
}

fn match_upper_j(entity: String, input: List(String)) {
  case entity {
    "Jcirc;" <> _ -> Ok(#(list.drop(input, 6), "Jcirc;", "\u{134}"))
    "Jcy;" <> _ -> Ok(#(list.drop(input, 4), "Jcy;", "\u{419}"))
    "Jfr;" <> _ -> Ok(#(list.drop(input, 4), "Jfr;", "\u{1D50D}"))
    "Jopf;" <> _ -> Ok(#(list.drop(input, 5), "Jopf;", "\u{1D541}"))
    "Jscr;" <> _ -> Ok(#(list.drop(input, 5), "Jscr;", "\u{1D4A5}"))
    "Jsercy;" <> _ -> Ok(#(list.drop(input, 7), "Jsercy;", "\u{408}"))
    "Jukcy;" <> _ -> Ok(#(list.drop(input, 6), "Jukcy;", "\u{404}"))
    _ -> Error(Nil)
  }
}

fn match_upper_k(entity: String, input: List(String)) {
  case entity {
    "KHcy;" <> _ -> Ok(#(list.drop(input, 5), "KHcy;", "\u{425}"))
    "KJcy;" <> _ -> Ok(#(list.drop(input, 5), "KJcy;", "\u{40C}"))
    "Kappa;" <> _ -> Ok(#(list.drop(input, 6), "Kappa;", "\u{39A}"))
    "Kcedil;" <> _ -> Ok(#(list.drop(input, 7), "Kcedil;", "\u{136}"))
    "Kcy;" <> _ -> Ok(#(list.drop(input, 4), "Kcy;", "\u{41A}"))
    "Kfr;" <> _ -> Ok(#(list.drop(input, 4), "Kfr;", "\u{1D50E}"))
    "Kopf;" <> _ -> Ok(#(list.drop(input, 5), "Kopf;", "\u{1D542}"))
    "Kscr;" <> _ -> Ok(#(list.drop(input, 5), "Kscr;", "\u{1D4A6}"))
    _ -> Error(Nil)
  }
}

fn match_upper_l(entity: String, input: List(String)) {
  case entity {
    "LJcy;" <> _ -> Ok(#(list.drop(input, 5), "LJcy;", "\u{409}"))
    "LT;" <> _ -> Ok(#(list.drop(input, 3), "LT;", "\u{3C}"))
    "Lacute;" <> _ -> Ok(#(list.drop(input, 7), "Lacute;", "\u{139}"))
    "Lambda;" <> _ -> Ok(#(list.drop(input, 7), "Lambda;", "\u{39B}"))
    "Lang;" <> _ -> Ok(#(list.drop(input, 5), "Lang;", "\u{27EA}"))
    "Laplacetrf;" <> _ -> Ok(#(list.drop(input, 11), "Laplacetrf;", "\u{2112}"))
    "Larr;" <> _ -> Ok(#(list.drop(input, 5), "Larr;", "\u{219E}"))
    "Lcaron;" <> _ -> Ok(#(list.drop(input, 7), "Lcaron;", "\u{13D}"))
    "Lcedil;" <> _ -> Ok(#(list.drop(input, 7), "Lcedil;", "\u{13B}"))
    "Lcy;" <> _ -> Ok(#(list.drop(input, 4), "Lcy;", "\u{41B}"))
    "LeftAngleBracket;" <> _ ->
      Ok(#(list.drop(input, 17), "LeftAngleBracket;", "\u{27E8}"))
    "LeftArrow;" <> _ -> Ok(#(list.drop(input, 10), "LeftArrow;", "\u{2190}"))
    "LeftArrowBar;" <> _ ->
      Ok(#(list.drop(input, 13), "LeftArrowBar;", "\u{21E4}"))
    "LeftArrowRightArrow;" <> _ ->
      Ok(#(list.drop(input, 20), "LeftArrowRightArrow;", "\u{21C6}"))
    "LeftCeiling;" <> _ ->
      Ok(#(list.drop(input, 12), "LeftCeiling;", "\u{2308}"))
    "LeftDoubleBracket;" <> _ ->
      Ok(#(list.drop(input, 18), "LeftDoubleBracket;", "\u{27E6}"))
    "LeftDownTeeVector;" <> _ ->
      Ok(#(list.drop(input, 18), "LeftDownTeeVector;", "\u{2961}"))
    "LeftDownVector;" <> _ ->
      Ok(#(list.drop(input, 15), "LeftDownVector;", "\u{21C3}"))
    "LeftDownVectorBar;" <> _ ->
      Ok(#(list.drop(input, 18), "LeftDownVectorBar;", "\u{2959}"))
    "LeftFloor;" <> _ -> Ok(#(list.drop(input, 10), "LeftFloor;", "\u{230A}"))
    "LeftRightArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "LeftRightArrow;", "\u{2194}"))
    "LeftRightVector;" <> _ ->
      Ok(#(list.drop(input, 16), "LeftRightVector;", "\u{294E}"))
    "LeftTee;" <> _ -> Ok(#(list.drop(input, 8), "LeftTee;", "\u{22A3}"))
    "LeftTeeArrow;" <> _ ->
      Ok(#(list.drop(input, 13), "LeftTeeArrow;", "\u{21A4}"))
    "LeftTeeVector;" <> _ ->
      Ok(#(list.drop(input, 14), "LeftTeeVector;", "\u{295A}"))
    "LeftTriangle;" <> _ ->
      Ok(#(list.drop(input, 13), "LeftTriangle;", "\u{22B2}"))
    "LeftTriangleBar;" <> _ ->
      Ok(#(list.drop(input, 16), "LeftTriangleBar;", "\u{29CF}"))
    "LeftTriangleEqual;" <> _ ->
      Ok(#(list.drop(input, 18), "LeftTriangleEqual;", "\u{22B4}"))
    "LeftUpDownVector;" <> _ ->
      Ok(#(list.drop(input, 17), "LeftUpDownVector;", "\u{2951}"))
    "LeftUpTeeVector;" <> _ ->
      Ok(#(list.drop(input, 16), "LeftUpTeeVector;", "\u{2960}"))
    "LeftUpVector;" <> _ ->
      Ok(#(list.drop(input, 13), "LeftUpVector;", "\u{21BF}"))
    "LeftUpVectorBar;" <> _ ->
      Ok(#(list.drop(input, 16), "LeftUpVectorBar;", "\u{2958}"))
    "LeftVector;" <> _ -> Ok(#(list.drop(input, 11), "LeftVector;", "\u{21BC}"))
    "LeftVectorBar;" <> _ ->
      Ok(#(list.drop(input, 14), "LeftVectorBar;", "\u{2952}"))
    "Leftarrow;" <> _ -> Ok(#(list.drop(input, 10), "Leftarrow;", "\u{21D0}"))
    "Leftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 15), "Leftrightarrow;", "\u{21D4}"))
    "LessEqualGreater;" <> _ ->
      Ok(#(list.drop(input, 17), "LessEqualGreater;", "\u{22DA}"))
    "LessFullEqual;" <> _ ->
      Ok(#(list.drop(input, 14), "LessFullEqual;", "\u{2266}"))
    "LessGreater;" <> _ ->
      Ok(#(list.drop(input, 12), "LessGreater;", "\u{2276}"))
    "LessLess;" <> _ -> Ok(#(list.drop(input, 9), "LessLess;", "\u{2AA1}"))
    "LessSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 15), "LessSlantEqual;", "\u{2A7D}"))
    "LessTilde;" <> _ -> Ok(#(list.drop(input, 10), "LessTilde;", "\u{2272}"))
    "Lfr;" <> _ -> Ok(#(list.drop(input, 4), "Lfr;", "\u{1D50F}"))
    "Ll;" <> _ -> Ok(#(list.drop(input, 3), "Ll;", "\u{22D8}"))
    "Lleftarrow;" <> _ -> Ok(#(list.drop(input, 11), "Lleftarrow;", "\u{21DA}"))
    "Lmidot;" <> _ -> Ok(#(list.drop(input, 7), "Lmidot;", "\u{13F}"))
    "LongLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 14), "LongLeftArrow;", "\u{27F5}"))
    "LongLeftRightArrow;" <> _ ->
      Ok(#(list.drop(input, 19), "LongLeftRightArrow;", "\u{27F7}"))
    "LongRightArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "LongRightArrow;", "\u{27F6}"))
    "Longleftarrow;" <> _ ->
      Ok(#(list.drop(input, 14), "Longleftarrow;", "\u{27F8}"))
    "Longleftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 19), "Longleftrightarrow;", "\u{27FA}"))
    "Longrightarrow;" <> _ ->
      Ok(#(list.drop(input, 15), "Longrightarrow;", "\u{27F9}"))
    "Lopf;" <> _ -> Ok(#(list.drop(input, 5), "Lopf;", "\u{1D543}"))
    "LowerLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "LowerLeftArrow;", "\u{2199}"))
    "LowerRightArrow;" <> _ ->
      Ok(#(list.drop(input, 16), "LowerRightArrow;", "\u{2198}"))
    "Lscr;" <> _ -> Ok(#(list.drop(input, 5), "Lscr;", "\u{2112}"))
    "Lsh;" <> _ -> Ok(#(list.drop(input, 4), "Lsh;", "\u{21B0}"))
    "Lstrok;" <> _ -> Ok(#(list.drop(input, 7), "Lstrok;", "\u{141}"))
    "Lt;" <> _ -> Ok(#(list.drop(input, 3), "Lt;", "\u{226A}"))
    _ -> Error(Nil)
  }
}

fn match_upper_m(entity: String, input: List(String)) {
  case entity {
    "Map;" <> _ -> Ok(#(list.drop(input, 4), "Map;", "\u{2905}"))
    "Mcy;" <> _ -> Ok(#(list.drop(input, 4), "Mcy;", "\u{41C}"))
    "MediumSpace;" <> _ ->
      Ok(#(list.drop(input, 12), "MediumSpace;", "\u{205F}"))
    "Mellintrf;" <> _ -> Ok(#(list.drop(input, 10), "Mellintrf;", "\u{2133}"))
    "Mfr;" <> _ -> Ok(#(list.drop(input, 4), "Mfr;", "\u{1D510}"))
    "MinusPlus;" <> _ -> Ok(#(list.drop(input, 10), "MinusPlus;", "\u{2213}"))
    "Mopf;" <> _ -> Ok(#(list.drop(input, 5), "Mopf;", "\u{1D544}"))
    "Mscr;" <> _ -> Ok(#(list.drop(input, 5), "Mscr;", "\u{2133}"))
    "Mu;" <> _ -> Ok(#(list.drop(input, 3), "Mu;", "\u{39C}"))
    _ -> Error(Nil)
  }
}

fn match_upper_n(entity: String, input: List(String)) {
  case entity {
    "NJcy;" <> _ -> Ok(#(list.drop(input, 5), "NJcy;", "\u{40A}"))
    "Nacute;" <> _ -> Ok(#(list.drop(input, 7), "Nacute;", "\u{143}"))
    "Ncaron;" <> _ -> Ok(#(list.drop(input, 7), "Ncaron;", "\u{147}"))
    "Ncedil;" <> _ -> Ok(#(list.drop(input, 7), "Ncedil;", "\u{145}"))
    "Ncy;" <> _ -> Ok(#(list.drop(input, 4), "Ncy;", "\u{41D}"))
    "NegativeMediumSpace;" <> _ ->
      Ok(#(list.drop(input, 20), "NegativeMediumSpace;", "\u{200B}"))
    "NegativeThickSpace;" <> _ ->
      Ok(#(list.drop(input, 19), "NegativeThickSpace;", "\u{200B}"))
    "NegativeThinSpace;" <> _ ->
      Ok(#(list.drop(input, 18), "NegativeThinSpace;", "\u{200B}"))
    "NegativeVeryThinSpace;" <> _ ->
      Ok(#(list.drop(input, 22), "NegativeVeryThinSpace;", "\u{200B}"))
    "NestedGreaterGreater;" <> _ ->
      Ok(#(list.drop(input, 21), "NestedGreaterGreater;", "\u{226B}"))
    "NestedLessLess;" <> _ ->
      Ok(#(list.drop(input, 15), "NestedLessLess;", "\u{226A}"))
    "NewLine;" <> _ -> Ok(#(list.drop(input, 8), "NewLine;", "\u{A}"))
    "Nfr;" <> _ -> Ok(#(list.drop(input, 4), "Nfr;", "\u{1D511}"))
    "NoBreak;" <> _ -> Ok(#(list.drop(input, 8), "NoBreak;", "\u{2060}"))
    "NonBreakingSpace;" <> _ ->
      Ok(#(list.drop(input, 17), "NonBreakingSpace;", "\u{A0}"))
    "Nopf;" <> _ -> Ok(#(list.drop(input, 5), "Nopf;", "\u{2115}"))
    "Not;" <> _ -> Ok(#(list.drop(input, 4), "Not;", "\u{2AEC}"))
    "NotCongruent;" <> _ ->
      Ok(#(list.drop(input, 13), "NotCongruent;", "\u{2262}"))
    "NotCupCap;" <> _ -> Ok(#(list.drop(input, 10), "NotCupCap;", "\u{226D}"))
    "NotDoubleVerticalBar;" <> _ ->
      Ok(#(list.drop(input, 21), "NotDoubleVerticalBar;", "\u{2226}"))
    "NotElement;" <> _ -> Ok(#(list.drop(input, 11), "NotElement;", "\u{2209}"))
    "NotEqual;" <> _ -> Ok(#(list.drop(input, 9), "NotEqual;", "\u{2260}"))
    "NotEqualTilde;" <> _ ->
      Ok(#(list.drop(input, 14), "NotEqualTilde;", "\u{2242}\u{338}"))
    "NotExists;" <> _ -> Ok(#(list.drop(input, 10), "NotExists;", "\u{2204}"))
    "NotGreater;" <> _ -> Ok(#(list.drop(input, 11), "NotGreater;", "\u{226F}"))
    "NotGreaterEqual;" <> _ ->
      Ok(#(list.drop(input, 16), "NotGreaterEqual;", "\u{2271}"))
    "NotGreaterFullEqual;" <> _ ->
      Ok(#(list.drop(input, 20), "NotGreaterFullEqual;", "\u{2267}\u{338}"))
    "NotGreaterGreater;" <> _ ->
      Ok(#(list.drop(input, 18), "NotGreaterGreater;", "\u{226B}\u{338}"))
    "NotGreaterLess;" <> _ ->
      Ok(#(list.drop(input, 15), "NotGreaterLess;", "\u{2279}"))
    "NotGreaterSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 21), "NotGreaterSlantEqual;", "\u{2A7E}\u{338}"))
    "NotGreaterTilde;" <> _ ->
      Ok(#(list.drop(input, 16), "NotGreaterTilde;", "\u{2275}"))
    "NotHumpDownHump;" <> _ ->
      Ok(#(list.drop(input, 16), "NotHumpDownHump;", "\u{224E}\u{338}"))
    "NotHumpEqual;" <> _ ->
      Ok(#(list.drop(input, 13), "NotHumpEqual;", "\u{224F}\u{338}"))
    "NotLeftTriangle;" <> _ ->
      Ok(#(list.drop(input, 16), "NotLeftTriangle;", "\u{22EA}"))
    "NotLeftTriangleBar;" <> _ ->
      Ok(#(list.drop(input, 19), "NotLeftTriangleBar;", "\u{29CF}\u{338}"))
    "NotLeftTriangleEqual;" <> _ ->
      Ok(#(list.drop(input, 21), "NotLeftTriangleEqual;", "\u{22EC}"))
    "NotLess;" <> _ -> Ok(#(list.drop(input, 8), "NotLess;", "\u{226E}"))
    "NotLessEqual;" <> _ ->
      Ok(#(list.drop(input, 13), "NotLessEqual;", "\u{2270}"))
    "NotLessGreater;" <> _ ->
      Ok(#(list.drop(input, 15), "NotLessGreater;", "\u{2278}"))
    "NotLessLess;" <> _ ->
      Ok(#(list.drop(input, 12), "NotLessLess;", "\u{226A}\u{338}"))
    "NotLessSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 18), "NotLessSlantEqual;", "\u{2A7D}\u{338}"))
    "NotLessTilde;" <> _ ->
      Ok(#(list.drop(input, 13), "NotLessTilde;", "\u{2274}"))
    "NotNestedGreaterGreater;" <> _ ->
      Ok(#(list.drop(input, 24), "NotNestedGreaterGreater;", "\u{2AA2}\u{338}"))
    "NotNestedLessLess;" <> _ ->
      Ok(#(list.drop(input, 18), "NotNestedLessLess;", "\u{2AA1}\u{338}"))
    "NotPrecedes;" <> _ ->
      Ok(#(list.drop(input, 12), "NotPrecedes;", "\u{2280}"))
    "NotPrecedesEqual;" <> _ ->
      Ok(#(list.drop(input, 17), "NotPrecedesEqual;", "\u{2AAF}\u{338}"))
    "NotPrecedesSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 22), "NotPrecedesSlantEqual;", "\u{22E0}"))
    "NotReverseElement;" <> _ ->
      Ok(#(list.drop(input, 18), "NotReverseElement;", "\u{220C}"))
    "NotRightTriangle;" <> _ ->
      Ok(#(list.drop(input, 17), "NotRightTriangle;", "\u{22EB}"))
    "NotRightTriangleBar;" <> _ ->
      Ok(#(list.drop(input, 20), "NotRightTriangleBar;", "\u{29D0}\u{338}"))
    "NotRightTriangleEqual;" <> _ ->
      Ok(#(list.drop(input, 22), "NotRightTriangleEqual;", "\u{22ED}"))
    "NotSquareSubset;" <> _ ->
      Ok(#(list.drop(input, 16), "NotSquareSubset;", "\u{228F}\u{338}"))
    "NotSquareSubsetEqual;" <> _ ->
      Ok(#(list.drop(input, 21), "NotSquareSubsetEqual;", "\u{22E2}"))
    "NotSquareSuperset;" <> _ ->
      Ok(#(list.drop(input, 18), "NotSquareSuperset;", "\u{2290}\u{338}"))
    "NotSquareSupersetEqual;" <> _ ->
      Ok(#(list.drop(input, 23), "NotSquareSupersetEqual;", "\u{22E3}"))
    "NotSubset;" <> _ ->
      Ok(#(list.drop(input, 10), "NotSubset;", "\u{2282}\u{20D2}"))
    "NotSubsetEqual;" <> _ ->
      Ok(#(list.drop(input, 15), "NotSubsetEqual;", "\u{2288}"))
    "NotSucceeds;" <> _ ->
      Ok(#(list.drop(input, 12), "NotSucceeds;", "\u{2281}"))
    "NotSucceedsEqual;" <> _ ->
      Ok(#(list.drop(input, 17), "NotSucceedsEqual;", "\u{2AB0}\u{338}"))
    "NotSucceedsSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 22), "NotSucceedsSlantEqual;", "\u{22E1}"))
    "NotSucceedsTilde;" <> _ ->
      Ok(#(list.drop(input, 17), "NotSucceedsTilde;", "\u{227F}\u{338}"))
    "NotSuperset;" <> _ ->
      Ok(#(list.drop(input, 12), "NotSuperset;", "\u{2283}\u{20D2}"))
    "NotSupersetEqual;" <> _ ->
      Ok(#(list.drop(input, 17), "NotSupersetEqual;", "\u{2289}"))
    "NotTilde;" <> _ -> Ok(#(list.drop(input, 9), "NotTilde;", "\u{2241}"))
    "NotTildeEqual;" <> _ ->
      Ok(#(list.drop(input, 14), "NotTildeEqual;", "\u{2244}"))
    "NotTildeFullEqual;" <> _ ->
      Ok(#(list.drop(input, 18), "NotTildeFullEqual;", "\u{2247}"))
    "NotTildeTilde;" <> _ ->
      Ok(#(list.drop(input, 14), "NotTildeTilde;", "\u{2249}"))
    "NotVerticalBar;" <> _ ->
      Ok(#(list.drop(input, 15), "NotVerticalBar;", "\u{2224}"))
    "Nscr;" <> _ -> Ok(#(list.drop(input, 5), "Nscr;", "\u{1D4A9}"))
    "Ntilde;" <> _ -> Ok(#(list.drop(input, 7), "Ntilde;", "\u{D1}"))
    "Nu;" <> _ -> Ok(#(list.drop(input, 3), "Nu;", "\u{39D}"))
    _ -> Error(Nil)
  }
}

fn match_upper_o(entity: String, input: List(String)) {
  case entity {
    "OElig;" <> _ -> Ok(#(list.drop(input, 6), "OElig;", "\u{152}"))
    "Oacute;" <> _ -> Ok(#(list.drop(input, 7), "Oacute;", "\u{D3}"))
    "Ocirc;" <> _ -> Ok(#(list.drop(input, 6), "Ocirc;", "\u{D4}"))
    "Ocy;" <> _ -> Ok(#(list.drop(input, 4), "Ocy;", "\u{41E}"))
    "Odblac;" <> _ -> Ok(#(list.drop(input, 7), "Odblac;", "\u{150}"))
    "Ofr;" <> _ -> Ok(#(list.drop(input, 4), "Ofr;", "\u{1D512}"))
    "Ograve;" <> _ -> Ok(#(list.drop(input, 7), "Ograve;", "\u{D2}"))
    "Omacr;" <> _ -> Ok(#(list.drop(input, 6), "Omacr;", "\u{14C}"))
    "Omega;" <> _ -> Ok(#(list.drop(input, 6), "Omega;", "\u{3A9}"))
    "Omicron;" <> _ -> Ok(#(list.drop(input, 8), "Omicron;", "\u{39F}"))
    "Oopf;" <> _ -> Ok(#(list.drop(input, 5), "Oopf;", "\u{1D546}"))
    "OpenCurlyDoubleQuote;" <> _ ->
      Ok(#(list.drop(input, 21), "OpenCurlyDoubleQuote;", "\u{201C}"))
    "OpenCurlyQuote;" <> _ ->
      Ok(#(list.drop(input, 15), "OpenCurlyQuote;", "\u{2018}"))
    "Or;" <> _ -> Ok(#(list.drop(input, 3), "Or;", "\u{2A54}"))
    "Oscr;" <> _ -> Ok(#(list.drop(input, 5), "Oscr;", "\u{1D4AA}"))
    "Oslash;" <> _ -> Ok(#(list.drop(input, 7), "Oslash;", "\u{D8}"))
    "Otilde;" <> _ -> Ok(#(list.drop(input, 7), "Otilde;", "\u{D5}"))
    "Otimes;" <> _ -> Ok(#(list.drop(input, 7), "Otimes;", "\u{2A37}"))
    "Ouml;" <> _ -> Ok(#(list.drop(input, 5), "Ouml;", "\u{D6}"))
    "OverBar;" <> _ -> Ok(#(list.drop(input, 8), "OverBar;", "\u{203E}"))
    "OverBrace;" <> _ -> Ok(#(list.drop(input, 10), "OverBrace;", "\u{23DE}"))
    "OverBracket;" <> _ ->
      Ok(#(list.drop(input, 12), "OverBracket;", "\u{23B4}"))
    "OverParenthesis;" <> _ ->
      Ok(#(list.drop(input, 16), "OverParenthesis;", "\u{23DC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_p(entity: String, input: List(String)) {
  case entity {
    "PartialD;" <> _ -> Ok(#(list.drop(input, 9), "PartialD;", "\u{2202}"))
    "Pcy;" <> _ -> Ok(#(list.drop(input, 4), "Pcy;", "\u{41F}"))
    "Pfr;" <> _ -> Ok(#(list.drop(input, 4), "Pfr;", "\u{1D513}"))
    "Phi;" <> _ -> Ok(#(list.drop(input, 4), "Phi;", "\u{3A6}"))
    "Pi;" <> _ -> Ok(#(list.drop(input, 3), "Pi;", "\u{3A0}"))
    "PlusMinus;" <> _ -> Ok(#(list.drop(input, 10), "PlusMinus;", "\u{B1}"))
    "Poincareplane;" <> _ ->
      Ok(#(list.drop(input, 14), "Poincareplane;", "\u{210C}"))
    "Popf;" <> _ -> Ok(#(list.drop(input, 5), "Popf;", "\u{2119}"))
    "Pr;" <> _ -> Ok(#(list.drop(input, 3), "Pr;", "\u{2ABB}"))
    "Precedes;" <> _ -> Ok(#(list.drop(input, 9), "Precedes;", "\u{227A}"))
    "PrecedesEqual;" <> _ ->
      Ok(#(list.drop(input, 14), "PrecedesEqual;", "\u{2AAF}"))
    "PrecedesSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 19), "PrecedesSlantEqual;", "\u{227C}"))
    "PrecedesTilde;" <> _ ->
      Ok(#(list.drop(input, 14), "PrecedesTilde;", "\u{227E}"))
    "Prime;" <> _ -> Ok(#(list.drop(input, 6), "Prime;", "\u{2033}"))
    "Product;" <> _ -> Ok(#(list.drop(input, 8), "Product;", "\u{220F}"))
    "Proportion;" <> _ -> Ok(#(list.drop(input, 11), "Proportion;", "\u{2237}"))
    "Proportional;" <> _ ->
      Ok(#(list.drop(input, 13), "Proportional;", "\u{221D}"))
    "Pscr;" <> _ -> Ok(#(list.drop(input, 5), "Pscr;", "\u{1D4AB}"))
    "Psi;" <> _ -> Ok(#(list.drop(input, 4), "Psi;", "\u{3A8}"))
    _ -> Error(Nil)
  }
}

fn match_upper_q(entity: String, input: List(String)) {
  case entity {
    "QUOT;" <> _ -> Ok(#(list.drop(input, 5), "QUOT;", "\u{22}"))
    "Qfr;" <> _ -> Ok(#(list.drop(input, 4), "Qfr;", "\u{1D514}"))
    "Qopf;" <> _ -> Ok(#(list.drop(input, 5), "Qopf;", "\u{211A}"))
    "Qscr;" <> _ -> Ok(#(list.drop(input, 5), "Qscr;", "\u{1D4AC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_r(entity: String, input: List(String)) {
  case entity {
    "RBarr;" <> _ -> Ok(#(list.drop(input, 6), "RBarr;", "\u{2910}"))
    "REG;" <> _ -> Ok(#(list.drop(input, 4), "REG;", "\u{AE}"))
    "Racute;" <> _ -> Ok(#(list.drop(input, 7), "Racute;", "\u{154}"))
    "Rang;" <> _ -> Ok(#(list.drop(input, 5), "Rang;", "\u{27EB}"))
    "Rarr;" <> _ -> Ok(#(list.drop(input, 5), "Rarr;", "\u{21A0}"))
    "Rarrtl;" <> _ -> Ok(#(list.drop(input, 7), "Rarrtl;", "\u{2916}"))
    "Rcaron;" <> _ -> Ok(#(list.drop(input, 7), "Rcaron;", "\u{158}"))
    "Rcedil;" <> _ -> Ok(#(list.drop(input, 7), "Rcedil;", "\u{156}"))
    "Rcy;" <> _ -> Ok(#(list.drop(input, 4), "Rcy;", "\u{420}"))
    "Re;" <> _ -> Ok(#(list.drop(input, 3), "Re;", "\u{211C}"))
    "ReverseElement;" <> _ ->
      Ok(#(list.drop(input, 15), "ReverseElement;", "\u{220B}"))
    "ReverseEquilibrium;" <> _ ->
      Ok(#(list.drop(input, 19), "ReverseEquilibrium;", "\u{21CB}"))
    "ReverseUpEquilibrium;" <> _ ->
      Ok(#(list.drop(input, 21), "ReverseUpEquilibrium;", "\u{296F}"))
    "Rfr;" <> _ -> Ok(#(list.drop(input, 4), "Rfr;", "\u{211C}"))
    "Rho;" <> _ -> Ok(#(list.drop(input, 4), "Rho;", "\u{3A1}"))
    "RightAngleBracket;" <> _ ->
      Ok(#(list.drop(input, 18), "RightAngleBracket;", "\u{27E9}"))
    "RightArrow;" <> _ -> Ok(#(list.drop(input, 11), "RightArrow;", "\u{2192}"))
    "RightArrowBar;" <> _ ->
      Ok(#(list.drop(input, 14), "RightArrowBar;", "\u{21E5}"))
    "RightArrowLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 20), "RightArrowLeftArrow;", "\u{21C4}"))
    "RightCeiling;" <> _ ->
      Ok(#(list.drop(input, 13), "RightCeiling;", "\u{2309}"))
    "RightDoubleBracket;" <> _ ->
      Ok(#(list.drop(input, 19), "RightDoubleBracket;", "\u{27E7}"))
    "RightDownTeeVector;" <> _ ->
      Ok(#(list.drop(input, 19), "RightDownTeeVector;", "\u{295D}"))
    "RightDownVector;" <> _ ->
      Ok(#(list.drop(input, 16), "RightDownVector;", "\u{21C2}"))
    "RightDownVectorBar;" <> _ ->
      Ok(#(list.drop(input, 19), "RightDownVectorBar;", "\u{2955}"))
    "RightFloor;" <> _ -> Ok(#(list.drop(input, 11), "RightFloor;", "\u{230B}"))
    "RightTee;" <> _ -> Ok(#(list.drop(input, 9), "RightTee;", "\u{22A2}"))
    "RightTeeArrow;" <> _ ->
      Ok(#(list.drop(input, 14), "RightTeeArrow;", "\u{21A6}"))
    "RightTeeVector;" <> _ ->
      Ok(#(list.drop(input, 15), "RightTeeVector;", "\u{295B}"))
    "RightTriangle;" <> _ ->
      Ok(#(list.drop(input, 14), "RightTriangle;", "\u{22B3}"))
    "RightTriangleBar;" <> _ ->
      Ok(#(list.drop(input, 17), "RightTriangleBar;", "\u{29D0}"))
    "RightTriangleEqual;" <> _ ->
      Ok(#(list.drop(input, 19), "RightTriangleEqual;", "\u{22B5}"))
    "RightUpDownVector;" <> _ ->
      Ok(#(list.drop(input, 18), "RightUpDownVector;", "\u{294F}"))
    "RightUpTeeVector;" <> _ ->
      Ok(#(list.drop(input, 17), "RightUpTeeVector;", "\u{295C}"))
    "RightUpVector;" <> _ ->
      Ok(#(list.drop(input, 14), "RightUpVector;", "\u{21BE}"))
    "RightUpVectorBar;" <> _ ->
      Ok(#(list.drop(input, 17), "RightUpVectorBar;", "\u{2954}"))
    "RightVector;" <> _ ->
      Ok(#(list.drop(input, 12), "RightVector;", "\u{21C0}"))
    "RightVectorBar;" <> _ ->
      Ok(#(list.drop(input, 15), "RightVectorBar;", "\u{2953}"))
    "Rightarrow;" <> _ -> Ok(#(list.drop(input, 11), "Rightarrow;", "\u{21D2}"))
    "Ropf;" <> _ -> Ok(#(list.drop(input, 5), "Ropf;", "\u{211D}"))
    "RoundImplies;" <> _ ->
      Ok(#(list.drop(input, 13), "RoundImplies;", "\u{2970}"))
    "Rrightarrow;" <> _ ->
      Ok(#(list.drop(input, 12), "Rrightarrow;", "\u{21DB}"))
    "Rscr;" <> _ -> Ok(#(list.drop(input, 5), "Rscr;", "\u{211B}"))
    "Rsh;" <> _ -> Ok(#(list.drop(input, 4), "Rsh;", "\u{21B1}"))
    "RuleDelayed;" <> _ ->
      Ok(#(list.drop(input, 12), "RuleDelayed;", "\u{29F4}"))
    _ -> Error(Nil)
  }
}

fn match_upper_s(entity: String, input: List(String)) {
  case entity {
    "SHCHcy;" <> _ -> Ok(#(list.drop(input, 7), "SHCHcy;", "\u{429}"))
    "SHcy;" <> _ -> Ok(#(list.drop(input, 5), "SHcy;", "\u{428}"))
    "SOFTcy;" <> _ -> Ok(#(list.drop(input, 7), "SOFTcy;", "\u{42C}"))
    "Sacute;" <> _ -> Ok(#(list.drop(input, 7), "Sacute;", "\u{15A}"))
    "Sc;" <> _ -> Ok(#(list.drop(input, 3), "Sc;", "\u{2ABC}"))
    "Scaron;" <> _ -> Ok(#(list.drop(input, 7), "Scaron;", "\u{160}"))
    "Scedil;" <> _ -> Ok(#(list.drop(input, 7), "Scedil;", "\u{15E}"))
    "Scirc;" <> _ -> Ok(#(list.drop(input, 6), "Scirc;", "\u{15C}"))
    "Scy;" <> _ -> Ok(#(list.drop(input, 4), "Scy;", "\u{421}"))
    "Sfr;" <> _ -> Ok(#(list.drop(input, 4), "Sfr;", "\u{1D516}"))
    "ShortDownArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "ShortDownArrow;", "\u{2193}"))
    "ShortLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "ShortLeftArrow;", "\u{2190}"))
    "ShortRightArrow;" <> _ ->
      Ok(#(list.drop(input, 16), "ShortRightArrow;", "\u{2192}"))
    "ShortUpArrow;" <> _ ->
      Ok(#(list.drop(input, 13), "ShortUpArrow;", "\u{2191}"))
    "Sigma;" <> _ -> Ok(#(list.drop(input, 6), "Sigma;", "\u{3A3}"))
    "SmallCircle;" <> _ ->
      Ok(#(list.drop(input, 12), "SmallCircle;", "\u{2218}"))
    "Sopf;" <> _ -> Ok(#(list.drop(input, 5), "Sopf;", "\u{1D54A}"))
    "Sqrt;" <> _ -> Ok(#(list.drop(input, 5), "Sqrt;", "\u{221A}"))
    "Square;" <> _ -> Ok(#(list.drop(input, 7), "Square;", "\u{25A1}"))
    "SquareIntersection;" <> _ ->
      Ok(#(list.drop(input, 19), "SquareIntersection;", "\u{2293}"))
    "SquareSubset;" <> _ ->
      Ok(#(list.drop(input, 13), "SquareSubset;", "\u{228F}"))
    "SquareSubsetEqual;" <> _ ->
      Ok(#(list.drop(input, 18), "SquareSubsetEqual;", "\u{2291}"))
    "SquareSuperset;" <> _ ->
      Ok(#(list.drop(input, 15), "SquareSuperset;", "\u{2290}"))
    "SquareSupersetEqual;" <> _ ->
      Ok(#(list.drop(input, 20), "SquareSupersetEqual;", "\u{2292}"))
    "SquareUnion;" <> _ ->
      Ok(#(list.drop(input, 12), "SquareUnion;", "\u{2294}"))
    "Sscr;" <> _ -> Ok(#(list.drop(input, 5), "Sscr;", "\u{1D4AE}"))
    "Star;" <> _ -> Ok(#(list.drop(input, 5), "Star;", "\u{22C6}"))
    "Sub;" <> _ -> Ok(#(list.drop(input, 4), "Sub;", "\u{22D0}"))
    "Subset;" <> _ -> Ok(#(list.drop(input, 7), "Subset;", "\u{22D0}"))
    "SubsetEqual;" <> _ ->
      Ok(#(list.drop(input, 12), "SubsetEqual;", "\u{2286}"))
    "Succeeds;" <> _ -> Ok(#(list.drop(input, 9), "Succeeds;", "\u{227B}"))
    "SucceedsEqual;" <> _ ->
      Ok(#(list.drop(input, 14), "SucceedsEqual;", "\u{2AB0}"))
    "SucceedsSlantEqual;" <> _ ->
      Ok(#(list.drop(input, 19), "SucceedsSlantEqual;", "\u{227D}"))
    "SucceedsTilde;" <> _ ->
      Ok(#(list.drop(input, 14), "SucceedsTilde;", "\u{227F}"))
    "SuchThat;" <> _ -> Ok(#(list.drop(input, 9), "SuchThat;", "\u{220B}"))
    "Sum;" <> _ -> Ok(#(list.drop(input, 4), "Sum;", "\u{2211}"))
    "Sup;" <> _ -> Ok(#(list.drop(input, 4), "Sup;", "\u{22D1}"))
    "Superset;" <> _ -> Ok(#(list.drop(input, 9), "Superset;", "\u{2283}"))
    "SupersetEqual;" <> _ ->
      Ok(#(list.drop(input, 14), "SupersetEqual;", "\u{2287}"))
    "Supset;" <> _ -> Ok(#(list.drop(input, 7), "Supset;", "\u{22D1}"))
    _ -> Error(Nil)
  }
}

fn match_upper_t(entity: String, input: List(String)) {
  case entity {
    "THORN;" <> _ -> Ok(#(list.drop(input, 6), "THORN;", "\u{DE}"))
    "TRADE;" <> _ -> Ok(#(list.drop(input, 6), "TRADE;", "\u{2122}"))
    "TSHcy;" <> _ -> Ok(#(list.drop(input, 6), "TSHcy;", "\u{40B}"))
    "TScy;" <> _ -> Ok(#(list.drop(input, 5), "TScy;", "\u{426}"))
    "Tab;" <> _ -> Ok(#(list.drop(input, 4), "Tab;", "\u{9}"))
    "Tau;" <> _ -> Ok(#(list.drop(input, 4), "Tau;", "\u{3A4}"))
    "Tcaron;" <> _ -> Ok(#(list.drop(input, 7), "Tcaron;", "\u{164}"))
    "Tcedil;" <> _ -> Ok(#(list.drop(input, 7), "Tcedil;", "\u{162}"))
    "Tcy;" <> _ -> Ok(#(list.drop(input, 4), "Tcy;", "\u{422}"))
    "Tfr;" <> _ -> Ok(#(list.drop(input, 4), "Tfr;", "\u{1D517}"))
    "Therefore;" <> _ -> Ok(#(list.drop(input, 10), "Therefore;", "\u{2234}"))
    "Theta;" <> _ -> Ok(#(list.drop(input, 6), "Theta;", "\u{398}"))
    "ThickSpace;" <> _ ->
      Ok(#(list.drop(input, 11), "ThickSpace;", "\u{205F}\u{200A}"))
    "ThinSpace;" <> _ -> Ok(#(list.drop(input, 10), "ThinSpace;", "\u{2009}"))
    "Tilde;" <> _ -> Ok(#(list.drop(input, 6), "Tilde;", "\u{223C}"))
    "TildeEqual;" <> _ -> Ok(#(list.drop(input, 11), "TildeEqual;", "\u{2243}"))
    "TildeFullEqual;" <> _ ->
      Ok(#(list.drop(input, 15), "TildeFullEqual;", "\u{2245}"))
    "TildeTilde;" <> _ -> Ok(#(list.drop(input, 11), "TildeTilde;", "\u{2248}"))
    "Topf;" <> _ -> Ok(#(list.drop(input, 5), "Topf;", "\u{1D54B}"))
    "TripleDot;" <> _ -> Ok(#(list.drop(input, 10), "TripleDot;", "\u{20DB}"))
    "Tscr;" <> _ -> Ok(#(list.drop(input, 5), "Tscr;", "\u{1D4AF}"))
    "Tstrok;" <> _ -> Ok(#(list.drop(input, 7), "Tstrok;", "\u{166}"))
    _ -> Error(Nil)
  }
}

fn match_upper_u(entity: String, input: List(String)) {
  case entity {
    "Uacute;" <> _ -> Ok(#(list.drop(input, 7), "Uacute;", "\u{DA}"))
    "Uarr;" <> _ -> Ok(#(list.drop(input, 5), "Uarr;", "\u{219F}"))
    "Uarrocir;" <> _ -> Ok(#(list.drop(input, 9), "Uarrocir;", "\u{2949}"))
    "Ubrcy;" <> _ -> Ok(#(list.drop(input, 6), "Ubrcy;", "\u{40E}"))
    "Ubreve;" <> _ -> Ok(#(list.drop(input, 7), "Ubreve;", "\u{16C}"))
    "Ucirc;" <> _ -> Ok(#(list.drop(input, 6), "Ucirc;", "\u{DB}"))
    "Ucy;" <> _ -> Ok(#(list.drop(input, 4), "Ucy;", "\u{423}"))
    "Udblac;" <> _ -> Ok(#(list.drop(input, 7), "Udblac;", "\u{170}"))
    "Ufr;" <> _ -> Ok(#(list.drop(input, 4), "Ufr;", "\u{1D518}"))
    "Ugrave;" <> _ -> Ok(#(list.drop(input, 7), "Ugrave;", "\u{D9}"))
    "Umacr;" <> _ -> Ok(#(list.drop(input, 6), "Umacr;", "\u{16A}"))
    "UnderBar;" <> _ -> Ok(#(list.drop(input, 9), "UnderBar;", "\u{5F}"))
    "UnderBrace;" <> _ -> Ok(#(list.drop(input, 11), "UnderBrace;", "\u{23DF}"))
    "UnderBracket;" <> _ ->
      Ok(#(list.drop(input, 13), "UnderBracket;", "\u{23B5}"))
    "UnderParenthesis;" <> _ ->
      Ok(#(list.drop(input, 17), "UnderParenthesis;", "\u{23DD}"))
    "Union;" <> _ -> Ok(#(list.drop(input, 6), "Union;", "\u{22C3}"))
    "UnionPlus;" <> _ -> Ok(#(list.drop(input, 10), "UnionPlus;", "\u{228E}"))
    "Uogon;" <> _ -> Ok(#(list.drop(input, 6), "Uogon;", "\u{172}"))
    "Uopf;" <> _ -> Ok(#(list.drop(input, 5), "Uopf;", "\u{1D54C}"))
    "UpArrow;" <> _ -> Ok(#(list.drop(input, 8), "UpArrow;", "\u{2191}"))
    "UpArrowBar;" <> _ -> Ok(#(list.drop(input, 11), "UpArrowBar;", "\u{2912}"))
    "UpArrowDownArrow;" <> _ ->
      Ok(#(list.drop(input, 17), "UpArrowDownArrow;", "\u{21C5}"))
    "UpDownArrow;" <> _ ->
      Ok(#(list.drop(input, 12), "UpDownArrow;", "\u{2195}"))
    "UpEquilibrium;" <> _ ->
      Ok(#(list.drop(input, 14), "UpEquilibrium;", "\u{296E}"))
    "UpTee;" <> _ -> Ok(#(list.drop(input, 6), "UpTee;", "\u{22A5}"))
    "UpTeeArrow;" <> _ -> Ok(#(list.drop(input, 11), "UpTeeArrow;", "\u{21A5}"))
    "Uparrow;" <> _ -> Ok(#(list.drop(input, 8), "Uparrow;", "\u{21D1}"))
    "Updownarrow;" <> _ ->
      Ok(#(list.drop(input, 12), "Updownarrow;", "\u{21D5}"))
    "UpperLeftArrow;" <> _ ->
      Ok(#(list.drop(input, 15), "UpperLeftArrow;", "\u{2196}"))
    "UpperRightArrow;" <> _ ->
      Ok(#(list.drop(input, 16), "UpperRightArrow;", "\u{2197}"))
    "Upsi;" <> _ -> Ok(#(list.drop(input, 5), "Upsi;", "\u{3D2}"))
    "Upsilon;" <> _ -> Ok(#(list.drop(input, 8), "Upsilon;", "\u{3A5}"))
    "Uring;" <> _ -> Ok(#(list.drop(input, 6), "Uring;", "\u{16E}"))
    "Uscr;" <> _ -> Ok(#(list.drop(input, 5), "Uscr;", "\u{1D4B0}"))
    "Utilde;" <> _ -> Ok(#(list.drop(input, 7), "Utilde;", "\u{168}"))
    "Uuml;" <> _ -> Ok(#(list.drop(input, 5), "Uuml;", "\u{DC}"))
    _ -> Error(Nil)
  }
}

fn match_upper_v(entity: String, input: List(String)) {
  case entity {
    "VDash;" <> _ -> Ok(#(list.drop(input, 6), "VDash;", "\u{22AB}"))
    "Vbar;" <> _ -> Ok(#(list.drop(input, 5), "Vbar;", "\u{2AEB}"))
    "Vcy;" <> _ -> Ok(#(list.drop(input, 4), "Vcy;", "\u{412}"))
    "Vdash;" <> _ -> Ok(#(list.drop(input, 6), "Vdash;", "\u{22A9}"))
    "Vdashl;" <> _ -> Ok(#(list.drop(input, 7), "Vdashl;", "\u{2AE6}"))
    "Vee;" <> _ -> Ok(#(list.drop(input, 4), "Vee;", "\u{22C1}"))
    "Verbar;" <> _ -> Ok(#(list.drop(input, 7), "Verbar;", "\u{2016}"))
    "Vert;" <> _ -> Ok(#(list.drop(input, 5), "Vert;", "\u{2016}"))
    "VerticalBar;" <> _ ->
      Ok(#(list.drop(input, 12), "VerticalBar;", "\u{2223}"))
    "VerticalLine;" <> _ ->
      Ok(#(list.drop(input, 13), "VerticalLine;", "\u{7C}"))
    "VerticalSeparator;" <> _ ->
      Ok(#(list.drop(input, 18), "VerticalSeparator;", "\u{2758}"))
    "VerticalTilde;" <> _ ->
      Ok(#(list.drop(input, 14), "VerticalTilde;", "\u{2240}"))
    "VeryThinSpace;" <> _ ->
      Ok(#(list.drop(input, 14), "VeryThinSpace;", "\u{200A}"))
    "Vfr;" <> _ -> Ok(#(list.drop(input, 4), "Vfr;", "\u{1D519}"))
    "Vopf;" <> _ -> Ok(#(list.drop(input, 5), "Vopf;", "\u{1D54D}"))
    "Vscr;" <> _ -> Ok(#(list.drop(input, 5), "Vscr;", "\u{1D4B1}"))
    "Vvdash;" <> _ -> Ok(#(list.drop(input, 7), "Vvdash;", "\u{22AA}"))
    _ -> Error(Nil)
  }
}

fn match_upper_w(entity: String, input: List(String)) {
  case entity {
    "Wcirc;" <> _ -> Ok(#(list.drop(input, 6), "Wcirc;", "\u{174}"))
    "Wedge;" <> _ -> Ok(#(list.drop(input, 6), "Wedge;", "\u{22C0}"))
    "Wfr;" <> _ -> Ok(#(list.drop(input, 4), "Wfr;", "\u{1D51A}"))
    "Wopf;" <> _ -> Ok(#(list.drop(input, 5), "Wopf;", "\u{1D54E}"))
    "Wscr;" <> _ -> Ok(#(list.drop(input, 5), "Wscr;", "\u{1D4B2}"))
    _ -> Error(Nil)
  }
}

fn match_upper_x(entity: String, input: List(String)) {
  case entity {
    "Xfr;" <> _ -> Ok(#(list.drop(input, 4), "Xfr;", "\u{1D51B}"))
    "Xi;" <> _ -> Ok(#(list.drop(input, 3), "Xi;", "\u{39E}"))
    "Xopf;" <> _ -> Ok(#(list.drop(input, 5), "Xopf;", "\u{1D54F}"))
    "Xscr;" <> _ -> Ok(#(list.drop(input, 5), "Xscr;", "\u{1D4B3}"))
    _ -> Error(Nil)
  }
}

fn match_upper_y(entity: String, input: List(String)) {
  case entity {
    "YAcy;" <> _ -> Ok(#(list.drop(input, 5), "YAcy;", "\u{42F}"))
    "YIcy;" <> _ -> Ok(#(list.drop(input, 5), "YIcy;", "\u{407}"))
    "YUcy;" <> _ -> Ok(#(list.drop(input, 5), "YUcy;", "\u{42E}"))
    "Yacute;" <> _ -> Ok(#(list.drop(input, 7), "Yacute;", "\u{DD}"))
    "Ycirc;" <> _ -> Ok(#(list.drop(input, 6), "Ycirc;", "\u{176}"))
    "Ycy;" <> _ -> Ok(#(list.drop(input, 4), "Ycy;", "\u{42B}"))
    "Yfr;" <> _ -> Ok(#(list.drop(input, 4), "Yfr;", "\u{1D51C}"))
    "Yopf;" <> _ -> Ok(#(list.drop(input, 5), "Yopf;", "\u{1D550}"))
    "Yscr;" <> _ -> Ok(#(list.drop(input, 5), "Yscr;", "\u{1D4B4}"))
    "Yuml;" <> _ -> Ok(#(list.drop(input, 5), "Yuml;", "\u{178}"))
    _ -> Error(Nil)
  }
}

fn match_upper_z(entity: String, input: List(String)) {
  case entity {
    "ZHcy;" <> _ -> Ok(#(list.drop(input, 5), "ZHcy;", "\u{416}"))
    "Zacute;" <> _ -> Ok(#(list.drop(input, 7), "Zacute;", "\u{179}"))
    "Zcaron;" <> _ -> Ok(#(list.drop(input, 7), "Zcaron;", "\u{17D}"))
    "Zcy;" <> _ -> Ok(#(list.drop(input, 4), "Zcy;", "\u{417}"))
    "Zdot;" <> _ -> Ok(#(list.drop(input, 5), "Zdot;", "\u{17B}"))
    "ZeroWidthSpace;" <> _ ->
      Ok(#(list.drop(input, 15), "ZeroWidthSpace;", "\u{200B}"))
    "Zeta;" <> _ -> Ok(#(list.drop(input, 5), "Zeta;", "\u{396}"))
    "Zfr;" <> _ -> Ok(#(list.drop(input, 4), "Zfr;", "\u{2128}"))
    "Zopf;" <> _ -> Ok(#(list.drop(input, 5), "Zopf;", "\u{2124}"))
    "Zscr;" <> _ -> Ok(#(list.drop(input, 5), "Zscr;", "\u{1D4B5}"))
    _ -> Error(Nil)
  }
}

fn match_a(entity: String, input: List(String)) {
  case entity {
    "aacute;" <> _ -> Ok(#(list.drop(input, 7), "aacute;", "\u{E1}"))
    "abreve;" <> _ -> Ok(#(list.drop(input, 7), "abreve;", "\u{103}"))
    "ac;" <> _ -> Ok(#(list.drop(input, 3), "ac;", "\u{223E}"))
    "acE;" <> _ -> Ok(#(list.drop(input, 4), "acE;", "\u{223E}\u{333}"))
    "acd;" <> _ -> Ok(#(list.drop(input, 4), "acd;", "\u{223F}"))
    "acirc;" <> _ -> Ok(#(list.drop(input, 6), "acirc;", "\u{E2}"))
    "acute;" <> _ -> Ok(#(list.drop(input, 6), "acute;", "\u{B4}"))
    "acy;" <> _ -> Ok(#(list.drop(input, 4), "acy;", "\u{430}"))
    "aelig;" <> _ -> Ok(#(list.drop(input, 6), "aelig;", "\u{E6}"))
    "af;" <> _ -> Ok(#(list.drop(input, 3), "af;", "\u{2061}"))
    "afr;" <> _ -> Ok(#(list.drop(input, 4), "afr;", "\u{1D51E}"))
    "agrave;" <> _ -> Ok(#(list.drop(input, 7), "agrave;", "\u{E0}"))
    "alefsym;" <> _ -> Ok(#(list.drop(input, 8), "alefsym;", "\u{2135}"))
    "aleph;" <> _ -> Ok(#(list.drop(input, 6), "aleph;", "\u{2135}"))
    "alpha;" <> _ -> Ok(#(list.drop(input, 6), "alpha;", "\u{3B1}"))
    "amacr;" <> _ -> Ok(#(list.drop(input, 6), "amacr;", "\u{101}"))
    "amalg;" <> _ -> Ok(#(list.drop(input, 6), "amalg;", "\u{2A3F}"))
    "amp;" <> _ -> Ok(#(list.drop(input, 4), "amp;", "\u{26}"))
    "and;" <> _ -> Ok(#(list.drop(input, 4), "and;", "\u{2227}"))
    "andand;" <> _ -> Ok(#(list.drop(input, 7), "andand;", "\u{2A55}"))
    "andd;" <> _ -> Ok(#(list.drop(input, 5), "andd;", "\u{2A5C}"))
    "andslope;" <> _ -> Ok(#(list.drop(input, 9), "andslope;", "\u{2A58}"))
    "andv;" <> _ -> Ok(#(list.drop(input, 5), "andv;", "\u{2A5A}"))
    "ang;" <> _ -> Ok(#(list.drop(input, 4), "ang;", "\u{2220}"))
    "ange;" <> _ -> Ok(#(list.drop(input, 5), "ange;", "\u{29A4}"))
    "angle;" <> _ -> Ok(#(list.drop(input, 6), "angle;", "\u{2220}"))
    "angmsd;" <> _ -> Ok(#(list.drop(input, 7), "angmsd;", "\u{2221}"))
    "angmsdaa;" <> _ -> Ok(#(list.drop(input, 9), "angmsdaa;", "\u{29A8}"))
    "angmsdab;" <> _ -> Ok(#(list.drop(input, 9), "angmsdab;", "\u{29A9}"))
    "angmsdac;" <> _ -> Ok(#(list.drop(input, 9), "angmsdac;", "\u{29AA}"))
    "angmsdad;" <> _ -> Ok(#(list.drop(input, 9), "angmsdad;", "\u{29AB}"))
    "angmsdae;" <> _ -> Ok(#(list.drop(input, 9), "angmsdae;", "\u{29AC}"))
    "angmsdaf;" <> _ -> Ok(#(list.drop(input, 9), "angmsdaf;", "\u{29AD}"))
    "angmsdag;" <> _ -> Ok(#(list.drop(input, 9), "angmsdag;", "\u{29AE}"))
    "angmsdah;" <> _ -> Ok(#(list.drop(input, 9), "angmsdah;", "\u{29AF}"))
    "angrt;" <> _ -> Ok(#(list.drop(input, 6), "angrt;", "\u{221F}"))
    "angrtvb;" <> _ -> Ok(#(list.drop(input, 8), "angrtvb;", "\u{22BE}"))
    "angrtvbd;" <> _ -> Ok(#(list.drop(input, 9), "angrtvbd;", "\u{299D}"))
    "angsph;" <> _ -> Ok(#(list.drop(input, 7), "angsph;", "\u{2222}"))
    "angst;" <> _ -> Ok(#(list.drop(input, 6), "angst;", "\u{C5}"))
    "angzarr;" <> _ -> Ok(#(list.drop(input, 8), "angzarr;", "\u{237C}"))
    "aogon;" <> _ -> Ok(#(list.drop(input, 6), "aogon;", "\u{105}"))
    "aopf;" <> _ -> Ok(#(list.drop(input, 5), "aopf;", "\u{1D552}"))
    "ap;" <> _ -> Ok(#(list.drop(input, 3), "ap;", "\u{2248}"))
    "apE;" <> _ -> Ok(#(list.drop(input, 4), "apE;", "\u{2A70}"))
    "apacir;" <> _ -> Ok(#(list.drop(input, 7), "apacir;", "\u{2A6F}"))
    "ape;" <> _ -> Ok(#(list.drop(input, 4), "ape;", "\u{224A}"))
    "apid;" <> _ -> Ok(#(list.drop(input, 5), "apid;", "\u{224B}"))
    "apos;" <> _ -> Ok(#(list.drop(input, 5), "apos;", "\u{27}"))
    "approx;" <> _ -> Ok(#(list.drop(input, 7), "approx;", "\u{2248}"))
    "approxeq;" <> _ -> Ok(#(list.drop(input, 9), "approxeq;", "\u{224A}"))
    "aring;" <> _ -> Ok(#(list.drop(input, 6), "aring;", "\u{E5}"))
    "ascr;" <> _ -> Ok(#(list.drop(input, 5), "ascr;", "\u{1D4B6}"))
    "ast;" <> _ -> Ok(#(list.drop(input, 4), "ast;", "\u{2A}"))
    "asymp;" <> _ -> Ok(#(list.drop(input, 6), "asymp;", "\u{2248}"))
    "asympeq;" <> _ -> Ok(#(list.drop(input, 8), "asympeq;", "\u{224D}"))
    "atilde;" <> _ -> Ok(#(list.drop(input, 7), "atilde;", "\u{E3}"))
    "auml;" <> _ -> Ok(#(list.drop(input, 5), "auml;", "\u{E4}"))
    "awconint;" <> _ -> Ok(#(list.drop(input, 9), "awconint;", "\u{2233}"))
    "awint;" <> _ -> Ok(#(list.drop(input, 6), "awint;", "\u{2A11}"))
    _ -> Error(Nil)
  }
}

fn match_b(entity: String, input: List(String)) {
  case entity {
    "bNot;" <> _ -> Ok(#(list.drop(input, 5), "bNot;", "\u{2AED}"))
    "backcong;" <> _ -> Ok(#(list.drop(input, 9), "backcong;", "\u{224C}"))
    "backepsilon;" <> _ ->
      Ok(#(list.drop(input, 12), "backepsilon;", "\u{3F6}"))
    "backprime;" <> _ -> Ok(#(list.drop(input, 10), "backprime;", "\u{2035}"))
    "backsim;" <> _ -> Ok(#(list.drop(input, 8), "backsim;", "\u{223D}"))
    "backsimeq;" <> _ -> Ok(#(list.drop(input, 10), "backsimeq;", "\u{22CD}"))
    "barvee;" <> _ -> Ok(#(list.drop(input, 7), "barvee;", "\u{22BD}"))
    "barwed;" <> _ -> Ok(#(list.drop(input, 7), "barwed;", "\u{2305}"))
    "barwedge;" <> _ -> Ok(#(list.drop(input, 9), "barwedge;", "\u{2305}"))
    "bbrk;" <> _ -> Ok(#(list.drop(input, 5), "bbrk;", "\u{23B5}"))
    "bbrktbrk;" <> _ -> Ok(#(list.drop(input, 9), "bbrktbrk;", "\u{23B6}"))
    "bcong;" <> _ -> Ok(#(list.drop(input, 6), "bcong;", "\u{224C}"))
    "bcy;" <> _ -> Ok(#(list.drop(input, 4), "bcy;", "\u{431}"))
    "bdquo;" <> _ -> Ok(#(list.drop(input, 6), "bdquo;", "\u{201E}"))
    "becaus;" <> _ -> Ok(#(list.drop(input, 7), "becaus;", "\u{2235}"))
    "because;" <> _ -> Ok(#(list.drop(input, 8), "because;", "\u{2235}"))
    "bemptyv;" <> _ -> Ok(#(list.drop(input, 8), "bemptyv;", "\u{29B0}"))
    "bepsi;" <> _ -> Ok(#(list.drop(input, 6), "bepsi;", "\u{3F6}"))
    "bernou;" <> _ -> Ok(#(list.drop(input, 7), "bernou;", "\u{212C}"))
    "beta;" <> _ -> Ok(#(list.drop(input, 5), "beta;", "\u{3B2}"))
    "beth;" <> _ -> Ok(#(list.drop(input, 5), "beth;", "\u{2136}"))
    "between;" <> _ -> Ok(#(list.drop(input, 8), "between;", "\u{226C}"))
    "bfr;" <> _ -> Ok(#(list.drop(input, 4), "bfr;", "\u{1D51F}"))
    "bigcap;" <> _ -> Ok(#(list.drop(input, 7), "bigcap;", "\u{22C2}"))
    "bigcirc;" <> _ -> Ok(#(list.drop(input, 8), "bigcirc;", "\u{25EF}"))
    "bigcup;" <> _ -> Ok(#(list.drop(input, 7), "bigcup;", "\u{22C3}"))
    "bigodot;" <> _ -> Ok(#(list.drop(input, 8), "bigodot;", "\u{2A00}"))
    "bigoplus;" <> _ -> Ok(#(list.drop(input, 9), "bigoplus;", "\u{2A01}"))
    "bigotimes;" <> _ -> Ok(#(list.drop(input, 10), "bigotimes;", "\u{2A02}"))
    "bigsqcup;" <> _ -> Ok(#(list.drop(input, 9), "bigsqcup;", "\u{2A06}"))
    "bigstar;" <> _ -> Ok(#(list.drop(input, 8), "bigstar;", "\u{2605}"))
    "bigtriangledown;" <> _ ->
      Ok(#(list.drop(input, 16), "bigtriangledown;", "\u{25BD}"))
    "bigtriangleup;" <> _ ->
      Ok(#(list.drop(input, 14), "bigtriangleup;", "\u{25B3}"))
    "biguplus;" <> _ -> Ok(#(list.drop(input, 9), "biguplus;", "\u{2A04}"))
    "bigvee;" <> _ -> Ok(#(list.drop(input, 7), "bigvee;", "\u{22C1}"))
    "bigwedge;" <> _ -> Ok(#(list.drop(input, 9), "bigwedge;", "\u{22C0}"))
    "bkarow;" <> _ -> Ok(#(list.drop(input, 7), "bkarow;", "\u{290D}"))
    "blacklozenge;" <> _ ->
      Ok(#(list.drop(input, 13), "blacklozenge;", "\u{29EB}"))
    "blacksquare;" <> _ ->
      Ok(#(list.drop(input, 12), "blacksquare;", "\u{25AA}"))
    "blacktriangle;" <> _ ->
      Ok(#(list.drop(input, 14), "blacktriangle;", "\u{25B4}"))
    "blacktriangledown;" <> _ ->
      Ok(#(list.drop(input, 18), "blacktriangledown;", "\u{25BE}"))
    "blacktriangleleft;" <> _ ->
      Ok(#(list.drop(input, 18), "blacktriangleleft;", "\u{25C2}"))
    "blacktriangleright;" <> _ ->
      Ok(#(list.drop(input, 19), "blacktriangleright;", "\u{25B8}"))
    "blank;" <> _ -> Ok(#(list.drop(input, 6), "blank;", "\u{2423}"))
    "blk12;" <> _ -> Ok(#(list.drop(input, 6), "blk12;", "\u{2592}"))
    "blk14;" <> _ -> Ok(#(list.drop(input, 6), "blk14;", "\u{2591}"))
    "blk34;" <> _ -> Ok(#(list.drop(input, 6), "blk34;", "\u{2593}"))
    "block;" <> _ -> Ok(#(list.drop(input, 6), "block;", "\u{2588}"))
    "bne;" <> _ -> Ok(#(list.drop(input, 4), "bne;", "\u{3D}\u{20E5}"))
    "bnequiv;" <> _ ->
      Ok(#(list.drop(input, 8), "bnequiv;", "\u{2261}\u{20E5}"))
    "bnot;" <> _ -> Ok(#(list.drop(input, 5), "bnot;", "\u{2310}"))
    "bopf;" <> _ -> Ok(#(list.drop(input, 5), "bopf;", "\u{1D553}"))
    "bot;" <> _ -> Ok(#(list.drop(input, 4), "bot;", "\u{22A5}"))
    "bottom;" <> _ -> Ok(#(list.drop(input, 7), "bottom;", "\u{22A5}"))
    "bowtie;" <> _ -> Ok(#(list.drop(input, 7), "bowtie;", "\u{22C8}"))
    "boxDL;" <> _ -> Ok(#(list.drop(input, 6), "boxDL;", "\u{2557}"))
    "boxDR;" <> _ -> Ok(#(list.drop(input, 6), "boxDR;", "\u{2554}"))
    "boxDl;" <> _ -> Ok(#(list.drop(input, 6), "boxDl;", "\u{2556}"))
    "boxDr;" <> _ -> Ok(#(list.drop(input, 6), "boxDr;", "\u{2553}"))
    "boxH;" <> _ -> Ok(#(list.drop(input, 5), "boxH;", "\u{2550}"))
    "boxHD;" <> _ -> Ok(#(list.drop(input, 6), "boxHD;", "\u{2566}"))
    "boxHU;" <> _ -> Ok(#(list.drop(input, 6), "boxHU;", "\u{2569}"))
    "boxHd;" <> _ -> Ok(#(list.drop(input, 6), "boxHd;", "\u{2564}"))
    "boxHu;" <> _ -> Ok(#(list.drop(input, 6), "boxHu;", "\u{2567}"))
    "boxUL;" <> _ -> Ok(#(list.drop(input, 6), "boxUL;", "\u{255D}"))
    "boxUR;" <> _ -> Ok(#(list.drop(input, 6), "boxUR;", "\u{255A}"))
    "boxUl;" <> _ -> Ok(#(list.drop(input, 6), "boxUl;", "\u{255C}"))
    "boxUr;" <> _ -> Ok(#(list.drop(input, 6), "boxUr;", "\u{2559}"))
    "boxV;" <> _ -> Ok(#(list.drop(input, 5), "boxV;", "\u{2551}"))
    "boxVH;" <> _ -> Ok(#(list.drop(input, 6), "boxVH;", "\u{256C}"))
    "boxVL;" <> _ -> Ok(#(list.drop(input, 6), "boxVL;", "\u{2563}"))
    "boxVR;" <> _ -> Ok(#(list.drop(input, 6), "boxVR;", "\u{2560}"))
    "boxVh;" <> _ -> Ok(#(list.drop(input, 6), "boxVh;", "\u{256B}"))
    "boxVl;" <> _ -> Ok(#(list.drop(input, 6), "boxVl;", "\u{2562}"))
    "boxVr;" <> _ -> Ok(#(list.drop(input, 6), "boxVr;", "\u{255F}"))
    "boxbox;" <> _ -> Ok(#(list.drop(input, 7), "boxbox;", "\u{29C9}"))
    "boxdL;" <> _ -> Ok(#(list.drop(input, 6), "boxdL;", "\u{2555}"))
    "boxdR;" <> _ -> Ok(#(list.drop(input, 6), "boxdR;", "\u{2552}"))
    "boxdl;" <> _ -> Ok(#(list.drop(input, 6), "boxdl;", "\u{2510}"))
    "boxdr;" <> _ -> Ok(#(list.drop(input, 6), "boxdr;", "\u{250C}"))
    "boxh;" <> _ -> Ok(#(list.drop(input, 5), "boxh;", "\u{2500}"))
    "boxhD;" <> _ -> Ok(#(list.drop(input, 6), "boxhD;", "\u{2565}"))
    "boxhU;" <> _ -> Ok(#(list.drop(input, 6), "boxhU;", "\u{2568}"))
    "boxhd;" <> _ -> Ok(#(list.drop(input, 6), "boxhd;", "\u{252C}"))
    "boxhu;" <> _ -> Ok(#(list.drop(input, 6), "boxhu;", "\u{2534}"))
    "boxminus;" <> _ -> Ok(#(list.drop(input, 9), "boxminus;", "\u{229F}"))
    "boxplus;" <> _ -> Ok(#(list.drop(input, 8), "boxplus;", "\u{229E}"))
    "boxtimes;" <> _ -> Ok(#(list.drop(input, 9), "boxtimes;", "\u{22A0}"))
    "boxuL;" <> _ -> Ok(#(list.drop(input, 6), "boxuL;", "\u{255B}"))
    "boxuR;" <> _ -> Ok(#(list.drop(input, 6), "boxuR;", "\u{2558}"))
    "boxul;" <> _ -> Ok(#(list.drop(input, 6), "boxul;", "\u{2518}"))
    "boxur;" <> _ -> Ok(#(list.drop(input, 6), "boxur;", "\u{2514}"))
    "boxv;" <> _ -> Ok(#(list.drop(input, 5), "boxv;", "\u{2502}"))
    "boxvH;" <> _ -> Ok(#(list.drop(input, 6), "boxvH;", "\u{256A}"))
    "boxvL;" <> _ -> Ok(#(list.drop(input, 6), "boxvL;", "\u{2561}"))
    "boxvR;" <> _ -> Ok(#(list.drop(input, 6), "boxvR;", "\u{255E}"))
    "boxvh;" <> _ -> Ok(#(list.drop(input, 6), "boxvh;", "\u{253C}"))
    "boxvl;" <> _ -> Ok(#(list.drop(input, 6), "boxvl;", "\u{2524}"))
    "boxvr;" <> _ -> Ok(#(list.drop(input, 6), "boxvr;", "\u{251C}"))
    "bprime;" <> _ -> Ok(#(list.drop(input, 7), "bprime;", "\u{2035}"))
    "breve;" <> _ -> Ok(#(list.drop(input, 6), "breve;", "\u{2D8}"))
    "brvbar;" <> _ -> Ok(#(list.drop(input, 7), "brvbar;", "\u{A6}"))
    "bscr;" <> _ -> Ok(#(list.drop(input, 5), "bscr;", "\u{1D4B7}"))
    "bsemi;" <> _ -> Ok(#(list.drop(input, 6), "bsemi;", "\u{204F}"))
    "bsim;" <> _ -> Ok(#(list.drop(input, 5), "bsim;", "\u{223D}"))
    "bsime;" <> _ -> Ok(#(list.drop(input, 6), "bsime;", "\u{22CD}"))
    "bsol;" <> _ -> Ok(#(list.drop(input, 5), "bsol;", "\u{5C}"))
    "bsolb;" <> _ -> Ok(#(list.drop(input, 6), "bsolb;", "\u{29C5}"))
    "bsolhsub;" <> _ -> Ok(#(list.drop(input, 9), "bsolhsub;", "\u{27C8}"))
    "bull;" <> _ -> Ok(#(list.drop(input, 5), "bull;", "\u{2022}"))
    "bullet;" <> _ -> Ok(#(list.drop(input, 7), "bullet;", "\u{2022}"))
    "bump;" <> _ -> Ok(#(list.drop(input, 5), "bump;", "\u{224E}"))
    "bumpE;" <> _ -> Ok(#(list.drop(input, 6), "bumpE;", "\u{2AAE}"))
    "bumpe;" <> _ -> Ok(#(list.drop(input, 6), "bumpe;", "\u{224F}"))
    "bumpeq;" <> _ -> Ok(#(list.drop(input, 7), "bumpeq;", "\u{224F}"))
    _ -> Error(Nil)
  }
}

fn match_c(entity: String, input: List(String)) {
  case entity {
    "cacute;" <> _ -> Ok(#(list.drop(input, 7), "cacute;", "\u{107}"))
    "cap;" <> _ -> Ok(#(list.drop(input, 4), "cap;", "\u{2229}"))
    "capand;" <> _ -> Ok(#(list.drop(input, 7), "capand;", "\u{2A44}"))
    "capbrcup;" <> _ -> Ok(#(list.drop(input, 9), "capbrcup;", "\u{2A49}"))
    "capcap;" <> _ -> Ok(#(list.drop(input, 7), "capcap;", "\u{2A4B}"))
    "capcup;" <> _ -> Ok(#(list.drop(input, 7), "capcup;", "\u{2A47}"))
    "capdot;" <> _ -> Ok(#(list.drop(input, 7), "capdot;", "\u{2A40}"))
    "caps;" <> _ -> Ok(#(list.drop(input, 5), "caps;", "\u{2229}\u{FE00}"))
    "caret;" <> _ -> Ok(#(list.drop(input, 6), "caret;", "\u{2041}"))
    "caron;" <> _ -> Ok(#(list.drop(input, 6), "caron;", "\u{2C7}"))
    "ccaps;" <> _ -> Ok(#(list.drop(input, 6), "ccaps;", "\u{2A4D}"))
    "ccaron;" <> _ -> Ok(#(list.drop(input, 7), "ccaron;", "\u{10D}"))
    "ccedil;" <> _ -> Ok(#(list.drop(input, 7), "ccedil;", "\u{E7}"))
    "ccirc;" <> _ -> Ok(#(list.drop(input, 6), "ccirc;", "\u{109}"))
    "ccups;" <> _ -> Ok(#(list.drop(input, 6), "ccups;", "\u{2A4C}"))
    "ccupssm;" <> _ -> Ok(#(list.drop(input, 8), "ccupssm;", "\u{2A50}"))
    "cdot;" <> _ -> Ok(#(list.drop(input, 5), "cdot;", "\u{10B}"))
    "cedil;" <> _ -> Ok(#(list.drop(input, 6), "cedil;", "\u{B8}"))
    "cemptyv;" <> _ -> Ok(#(list.drop(input, 8), "cemptyv;", "\u{29B2}"))
    "cent;" <> _ -> Ok(#(list.drop(input, 5), "cent;", "\u{A2}"))
    "centerdot;" <> _ -> Ok(#(list.drop(input, 10), "centerdot;", "\u{B7}"))
    "cfr;" <> _ -> Ok(#(list.drop(input, 4), "cfr;", "\u{1D520}"))
    "chcy;" <> _ -> Ok(#(list.drop(input, 5), "chcy;", "\u{447}"))
    "check;" <> _ -> Ok(#(list.drop(input, 6), "check;", "\u{2713}"))
    "checkmark;" <> _ -> Ok(#(list.drop(input, 10), "checkmark;", "\u{2713}"))
    "chi;" <> _ -> Ok(#(list.drop(input, 4), "chi;", "\u{3C7}"))
    "cir;" <> _ -> Ok(#(list.drop(input, 4), "cir;", "\u{25CB}"))
    "cirE;" <> _ -> Ok(#(list.drop(input, 5), "cirE;", "\u{29C3}"))
    "circ;" <> _ -> Ok(#(list.drop(input, 5), "circ;", "\u{2C6}"))
    "circeq;" <> _ -> Ok(#(list.drop(input, 7), "circeq;", "\u{2257}"))
    "circlearrowleft;" <> _ ->
      Ok(#(list.drop(input, 16), "circlearrowleft;", "\u{21BA}"))
    "circlearrowright;" <> _ ->
      Ok(#(list.drop(input, 17), "circlearrowright;", "\u{21BB}"))
    "circledR;" <> _ -> Ok(#(list.drop(input, 9), "circledR;", "\u{AE}"))
    "circledS;" <> _ -> Ok(#(list.drop(input, 9), "circledS;", "\u{24C8}"))
    "circledast;" <> _ -> Ok(#(list.drop(input, 11), "circledast;", "\u{229B}"))
    "circledcirc;" <> _ ->
      Ok(#(list.drop(input, 12), "circledcirc;", "\u{229A}"))
    "circleddash;" <> _ ->
      Ok(#(list.drop(input, 12), "circleddash;", "\u{229D}"))
    "cire;" <> _ -> Ok(#(list.drop(input, 5), "cire;", "\u{2257}"))
    "cirfnint;" <> _ -> Ok(#(list.drop(input, 9), "cirfnint;", "\u{2A10}"))
    "cirmid;" <> _ -> Ok(#(list.drop(input, 7), "cirmid;", "\u{2AEF}"))
    "cirscir;" <> _ -> Ok(#(list.drop(input, 8), "cirscir;", "\u{29C2}"))
    "clubs;" <> _ -> Ok(#(list.drop(input, 6), "clubs;", "\u{2663}"))
    "clubsuit;" <> _ -> Ok(#(list.drop(input, 9), "clubsuit;", "\u{2663}"))
    "colon;" <> _ -> Ok(#(list.drop(input, 6), "colon;", "\u{3A}"))
    "colone;" <> _ -> Ok(#(list.drop(input, 7), "colone;", "\u{2254}"))
    "coloneq;" <> _ -> Ok(#(list.drop(input, 8), "coloneq;", "\u{2254}"))
    "comma;" <> _ -> Ok(#(list.drop(input, 6), "comma;", "\u{2C}"))
    "commat;" <> _ -> Ok(#(list.drop(input, 7), "commat;", "\u{40}"))
    "comp;" <> _ -> Ok(#(list.drop(input, 5), "comp;", "\u{2201}"))
    "compfn;" <> _ -> Ok(#(list.drop(input, 7), "compfn;", "\u{2218}"))
    "complement;" <> _ -> Ok(#(list.drop(input, 11), "complement;", "\u{2201}"))
    "complexes;" <> _ -> Ok(#(list.drop(input, 10), "complexes;", "\u{2102}"))
    "cong;" <> _ -> Ok(#(list.drop(input, 5), "cong;", "\u{2245}"))
    "congdot;" <> _ -> Ok(#(list.drop(input, 8), "congdot;", "\u{2A6D}"))
    "conint;" <> _ -> Ok(#(list.drop(input, 7), "conint;", "\u{222E}"))
    "copf;" <> _ -> Ok(#(list.drop(input, 5), "copf;", "\u{1D554}"))
    "coprod;" <> _ -> Ok(#(list.drop(input, 7), "coprod;", "\u{2210}"))
    "copy;" <> _ -> Ok(#(list.drop(input, 5), "copy;", "\u{A9}"))
    "copysr;" <> _ -> Ok(#(list.drop(input, 7), "copysr;", "\u{2117}"))
    "crarr;" <> _ -> Ok(#(list.drop(input, 6), "crarr;", "\u{21B5}"))
    "cross;" <> _ -> Ok(#(list.drop(input, 6), "cross;", "\u{2717}"))
    "cscr;" <> _ -> Ok(#(list.drop(input, 5), "cscr;", "\u{1D4B8}"))
    "csub;" <> _ -> Ok(#(list.drop(input, 5), "csub;", "\u{2ACF}"))
    "csube;" <> _ -> Ok(#(list.drop(input, 6), "csube;", "\u{2AD1}"))
    "csup;" <> _ -> Ok(#(list.drop(input, 5), "csup;", "\u{2AD0}"))
    "csupe;" <> _ -> Ok(#(list.drop(input, 6), "csupe;", "\u{2AD2}"))
    "ctdot;" <> _ -> Ok(#(list.drop(input, 6), "ctdot;", "\u{22EF}"))
    "cudarrl;" <> _ -> Ok(#(list.drop(input, 8), "cudarrl;", "\u{2938}"))
    "cudarrr;" <> _ -> Ok(#(list.drop(input, 8), "cudarrr;", "\u{2935}"))
    "cuepr;" <> _ -> Ok(#(list.drop(input, 6), "cuepr;", "\u{22DE}"))
    "cuesc;" <> _ -> Ok(#(list.drop(input, 6), "cuesc;", "\u{22DF}"))
    "cularr;" <> _ -> Ok(#(list.drop(input, 7), "cularr;", "\u{21B6}"))
    "cularrp;" <> _ -> Ok(#(list.drop(input, 8), "cularrp;", "\u{293D}"))
    "cup;" <> _ -> Ok(#(list.drop(input, 4), "cup;", "\u{222A}"))
    "cupbrcap;" <> _ -> Ok(#(list.drop(input, 9), "cupbrcap;", "\u{2A48}"))
    "cupcap;" <> _ -> Ok(#(list.drop(input, 7), "cupcap;", "\u{2A46}"))
    "cupcup;" <> _ -> Ok(#(list.drop(input, 7), "cupcup;", "\u{2A4A}"))
    "cupdot;" <> _ -> Ok(#(list.drop(input, 7), "cupdot;", "\u{228D}"))
    "cupor;" <> _ -> Ok(#(list.drop(input, 6), "cupor;", "\u{2A45}"))
    "cups;" <> _ -> Ok(#(list.drop(input, 5), "cups;", "\u{222A}\u{FE00}"))
    "curarr;" <> _ -> Ok(#(list.drop(input, 7), "curarr;", "\u{21B7}"))
    "curarrm;" <> _ -> Ok(#(list.drop(input, 8), "curarrm;", "\u{293C}"))
    "curlyeqprec;" <> _ ->
      Ok(#(list.drop(input, 12), "curlyeqprec;", "\u{22DE}"))
    "curlyeqsucc;" <> _ ->
      Ok(#(list.drop(input, 12), "curlyeqsucc;", "\u{22DF}"))
    "curlyvee;" <> _ -> Ok(#(list.drop(input, 9), "curlyvee;", "\u{22CE}"))
    "curlywedge;" <> _ -> Ok(#(list.drop(input, 11), "curlywedge;", "\u{22CF}"))
    "curren;" <> _ -> Ok(#(list.drop(input, 7), "curren;", "\u{A4}"))
    "curvearrowleft;" <> _ ->
      Ok(#(list.drop(input, 15), "curvearrowleft;", "\u{21B6}"))
    "curvearrowright;" <> _ ->
      Ok(#(list.drop(input, 16), "curvearrowright;", "\u{21B7}"))
    "cuvee;" <> _ -> Ok(#(list.drop(input, 6), "cuvee;", "\u{22CE}"))
    "cuwed;" <> _ -> Ok(#(list.drop(input, 6), "cuwed;", "\u{22CF}"))
    "cwconint;" <> _ -> Ok(#(list.drop(input, 9), "cwconint;", "\u{2232}"))
    "cwint;" <> _ -> Ok(#(list.drop(input, 6), "cwint;", "\u{2231}"))
    "cylcty;" <> _ -> Ok(#(list.drop(input, 7), "cylcty;", "\u{232D}"))
    _ -> Error(Nil)
  }
}

fn match_d(entity: String, input: List(String)) {
  case entity {
    "dArr;" <> _ -> Ok(#(list.drop(input, 5), "dArr;", "\u{21D3}"))
    "dHar;" <> _ -> Ok(#(list.drop(input, 5), "dHar;", "\u{2965}"))
    "dagger;" <> _ -> Ok(#(list.drop(input, 7), "dagger;", "\u{2020}"))
    "daleth;" <> _ -> Ok(#(list.drop(input, 7), "daleth;", "\u{2138}"))
    "darr;" <> _ -> Ok(#(list.drop(input, 5), "darr;", "\u{2193}"))
    "dash;" <> _ -> Ok(#(list.drop(input, 5), "dash;", "\u{2010}"))
    "dashv;" <> _ -> Ok(#(list.drop(input, 6), "dashv;", "\u{22A3}"))
    "dbkarow;" <> _ -> Ok(#(list.drop(input, 8), "dbkarow;", "\u{290F}"))
    "dblac;" <> _ -> Ok(#(list.drop(input, 6), "dblac;", "\u{2DD}"))
    "dcaron;" <> _ -> Ok(#(list.drop(input, 7), "dcaron;", "\u{10F}"))
    "dcy;" <> _ -> Ok(#(list.drop(input, 4), "dcy;", "\u{434}"))
    "dd;" <> _ -> Ok(#(list.drop(input, 3), "dd;", "\u{2146}"))
    "ddagger;" <> _ -> Ok(#(list.drop(input, 8), "ddagger;", "\u{2021}"))
    "ddarr;" <> _ -> Ok(#(list.drop(input, 6), "ddarr;", "\u{21CA}"))
    "ddotseq;" <> _ -> Ok(#(list.drop(input, 8), "ddotseq;", "\u{2A77}"))
    "deg;" <> _ -> Ok(#(list.drop(input, 4), "deg;", "\u{B0}"))
    "delta;" <> _ -> Ok(#(list.drop(input, 6), "delta;", "\u{3B4}"))
    "demptyv;" <> _ -> Ok(#(list.drop(input, 8), "demptyv;", "\u{29B1}"))
    "dfisht;" <> _ -> Ok(#(list.drop(input, 7), "dfisht;", "\u{297F}"))
    "dfr;" <> _ -> Ok(#(list.drop(input, 4), "dfr;", "\u{1D521}"))
    "dharl;" <> _ -> Ok(#(list.drop(input, 6), "dharl;", "\u{21C3}"))
    "dharr;" <> _ -> Ok(#(list.drop(input, 6), "dharr;", "\u{21C2}"))
    "diam;" <> _ -> Ok(#(list.drop(input, 5), "diam;", "\u{22C4}"))
    "diamond;" <> _ -> Ok(#(list.drop(input, 8), "diamond;", "\u{22C4}"))
    "diamondsuit;" <> _ ->
      Ok(#(list.drop(input, 12), "diamondsuit;", "\u{2666}"))
    "diams;" <> _ -> Ok(#(list.drop(input, 6), "diams;", "\u{2666}"))
    "die;" <> _ -> Ok(#(list.drop(input, 4), "die;", "\u{A8}"))
    "digamma;" <> _ -> Ok(#(list.drop(input, 8), "digamma;", "\u{3DD}"))
    "disin;" <> _ -> Ok(#(list.drop(input, 6), "disin;", "\u{22F2}"))
    "div;" <> _ -> Ok(#(list.drop(input, 4), "div;", "\u{F7}"))
    "divide;" <> _ -> Ok(#(list.drop(input, 7), "divide;", "\u{F7}"))
    "divideontimes;" <> _ ->
      Ok(#(list.drop(input, 14), "divideontimes;", "\u{22C7}"))
    "divonx;" <> _ -> Ok(#(list.drop(input, 7), "divonx;", "\u{22C7}"))
    "djcy;" <> _ -> Ok(#(list.drop(input, 5), "djcy;", "\u{452}"))
    "dlcorn;" <> _ -> Ok(#(list.drop(input, 7), "dlcorn;", "\u{231E}"))
    "dlcrop;" <> _ -> Ok(#(list.drop(input, 7), "dlcrop;", "\u{230D}"))
    "dollar;" <> _ -> Ok(#(list.drop(input, 7), "dollar;", "\u{24}"))
    "dopf;" <> _ -> Ok(#(list.drop(input, 5), "dopf;", "\u{1D555}"))
    "dot;" <> _ -> Ok(#(list.drop(input, 4), "dot;", "\u{2D9}"))
    "doteq;" <> _ -> Ok(#(list.drop(input, 6), "doteq;", "\u{2250}"))
    "doteqdot;" <> _ -> Ok(#(list.drop(input, 9), "doteqdot;", "\u{2251}"))
    "dotminus;" <> _ -> Ok(#(list.drop(input, 9), "dotminus;", "\u{2238}"))
    "dotplus;" <> _ -> Ok(#(list.drop(input, 8), "dotplus;", "\u{2214}"))
    "dotsquare;" <> _ -> Ok(#(list.drop(input, 10), "dotsquare;", "\u{22A1}"))
    "doublebarwedge;" <> _ ->
      Ok(#(list.drop(input, 15), "doublebarwedge;", "\u{2306}"))
    "downarrow;" <> _ -> Ok(#(list.drop(input, 10), "downarrow;", "\u{2193}"))
    "downdownarrows;" <> _ ->
      Ok(#(list.drop(input, 15), "downdownarrows;", "\u{21CA}"))
    "downharpoonleft;" <> _ ->
      Ok(#(list.drop(input, 16), "downharpoonleft;", "\u{21C3}"))
    "downharpoonright;" <> _ ->
      Ok(#(list.drop(input, 17), "downharpoonright;", "\u{21C2}"))
    "drbkarow;" <> _ -> Ok(#(list.drop(input, 9), "drbkarow;", "\u{2910}"))
    "drcorn;" <> _ -> Ok(#(list.drop(input, 7), "drcorn;", "\u{231F}"))
    "drcrop;" <> _ -> Ok(#(list.drop(input, 7), "drcrop;", "\u{230C}"))
    "dscr;" <> _ -> Ok(#(list.drop(input, 5), "dscr;", "\u{1D4B9}"))
    "dscy;" <> _ -> Ok(#(list.drop(input, 5), "dscy;", "\u{455}"))
    "dsol;" <> _ -> Ok(#(list.drop(input, 5), "dsol;", "\u{29F6}"))
    "dstrok;" <> _ -> Ok(#(list.drop(input, 7), "dstrok;", "\u{111}"))
    "dtdot;" <> _ -> Ok(#(list.drop(input, 6), "dtdot;", "\u{22F1}"))
    "dtri;" <> _ -> Ok(#(list.drop(input, 5), "dtri;", "\u{25BF}"))
    "dtrif;" <> _ -> Ok(#(list.drop(input, 6), "dtrif;", "\u{25BE}"))
    "duarr;" <> _ -> Ok(#(list.drop(input, 6), "duarr;", "\u{21F5}"))
    "duhar;" <> _ -> Ok(#(list.drop(input, 6), "duhar;", "\u{296F}"))
    "dwangle;" <> _ -> Ok(#(list.drop(input, 8), "dwangle;", "\u{29A6}"))
    "dzcy;" <> _ -> Ok(#(list.drop(input, 5), "dzcy;", "\u{45F}"))
    "dzigrarr;" <> _ -> Ok(#(list.drop(input, 9), "dzigrarr;", "\u{27FF}"))
    _ -> Error(Nil)
  }
}

fn match_e(entity: String, input: List(String)) {
  case entity {
    "eDDot;" <> _ -> Ok(#(list.drop(input, 6), "eDDot;", "\u{2A77}"))
    "eDot;" <> _ -> Ok(#(list.drop(input, 5), "eDot;", "\u{2251}"))
    "eacute;" <> _ -> Ok(#(list.drop(input, 7), "eacute;", "\u{E9}"))
    "easter;" <> _ -> Ok(#(list.drop(input, 7), "easter;", "\u{2A6E}"))
    "ecaron;" <> _ -> Ok(#(list.drop(input, 7), "ecaron;", "\u{11B}"))
    "ecir;" <> _ -> Ok(#(list.drop(input, 5), "ecir;", "\u{2256}"))
    "ecirc;" <> _ -> Ok(#(list.drop(input, 6), "ecirc;", "\u{EA}"))
    "ecolon;" <> _ -> Ok(#(list.drop(input, 7), "ecolon;", "\u{2255}"))
    "ecy;" <> _ -> Ok(#(list.drop(input, 4), "ecy;", "\u{44D}"))
    "edot;" <> _ -> Ok(#(list.drop(input, 5), "edot;", "\u{117}"))
    "ee;" <> _ -> Ok(#(list.drop(input, 3), "ee;", "\u{2147}"))
    "efDot;" <> _ -> Ok(#(list.drop(input, 6), "efDot;", "\u{2252}"))
    "efr;" <> _ -> Ok(#(list.drop(input, 4), "efr;", "\u{1D522}"))
    "eg;" <> _ -> Ok(#(list.drop(input, 3), "eg;", "\u{2A9A}"))
    "egrave;" <> _ -> Ok(#(list.drop(input, 7), "egrave;", "\u{E8}"))
    "egs;" <> _ -> Ok(#(list.drop(input, 4), "egs;", "\u{2A96}"))
    "egsdot;" <> _ -> Ok(#(list.drop(input, 7), "egsdot;", "\u{2A98}"))
    "el;" <> _ -> Ok(#(list.drop(input, 3), "el;", "\u{2A99}"))
    "elinters;" <> _ -> Ok(#(list.drop(input, 9), "elinters;", "\u{23E7}"))
    "ell;" <> _ -> Ok(#(list.drop(input, 4), "ell;", "\u{2113}"))
    "els;" <> _ -> Ok(#(list.drop(input, 4), "els;", "\u{2A95}"))
    "elsdot;" <> _ -> Ok(#(list.drop(input, 7), "elsdot;", "\u{2A97}"))
    "emacr;" <> _ -> Ok(#(list.drop(input, 6), "emacr;", "\u{113}"))
    "empty;" <> _ -> Ok(#(list.drop(input, 6), "empty;", "\u{2205}"))
    "emptyset;" <> _ -> Ok(#(list.drop(input, 9), "emptyset;", "\u{2205}"))
    "emptyv;" <> _ -> Ok(#(list.drop(input, 7), "emptyv;", "\u{2205}"))
    "emsp13;" <> _ -> Ok(#(list.drop(input, 7), "emsp13;", "\u{2004}"))
    "emsp14;" <> _ -> Ok(#(list.drop(input, 7), "emsp14;", "\u{2005}"))
    "emsp;" <> _ -> Ok(#(list.drop(input, 5), "emsp;", "\u{2003}"))
    "eng;" <> _ -> Ok(#(list.drop(input, 4), "eng;", "\u{14B}"))
    "ensp;" <> _ -> Ok(#(list.drop(input, 5), "ensp;", "\u{2002}"))
    "eogon;" <> _ -> Ok(#(list.drop(input, 6), "eogon;", "\u{119}"))
    "eopf;" <> _ -> Ok(#(list.drop(input, 5), "eopf;", "\u{1D556}"))
    "epar;" <> _ -> Ok(#(list.drop(input, 5), "epar;", "\u{22D5}"))
    "eparsl;" <> _ -> Ok(#(list.drop(input, 7), "eparsl;", "\u{29E3}"))
    "eplus;" <> _ -> Ok(#(list.drop(input, 6), "eplus;", "\u{2A71}"))
    "epsi;" <> _ -> Ok(#(list.drop(input, 5), "epsi;", "\u{3B5}"))
    "epsilon;" <> _ -> Ok(#(list.drop(input, 8), "epsilon;", "\u{3B5}"))
    "epsiv;" <> _ -> Ok(#(list.drop(input, 6), "epsiv;", "\u{3F5}"))
    "eqcirc;" <> _ -> Ok(#(list.drop(input, 7), "eqcirc;", "\u{2256}"))
    "eqcolon;" <> _ -> Ok(#(list.drop(input, 8), "eqcolon;", "\u{2255}"))
    "eqsim;" <> _ -> Ok(#(list.drop(input, 6), "eqsim;", "\u{2242}"))
    "eqslantgtr;" <> _ -> Ok(#(list.drop(input, 11), "eqslantgtr;", "\u{2A96}"))
    "eqslantless;" <> _ ->
      Ok(#(list.drop(input, 12), "eqslantless;", "\u{2A95}"))
    "equals;" <> _ -> Ok(#(list.drop(input, 7), "equals;", "\u{3D}"))
    "equest;" <> _ -> Ok(#(list.drop(input, 7), "equest;", "\u{225F}"))
    "equiv;" <> _ -> Ok(#(list.drop(input, 6), "equiv;", "\u{2261}"))
    "equivDD;" <> _ -> Ok(#(list.drop(input, 8), "equivDD;", "\u{2A78}"))
    "eqvparsl;" <> _ -> Ok(#(list.drop(input, 9), "eqvparsl;", "\u{29E5}"))
    "erDot;" <> _ -> Ok(#(list.drop(input, 6), "erDot;", "\u{2253}"))
    "erarr;" <> _ -> Ok(#(list.drop(input, 6), "erarr;", "\u{2971}"))
    "escr;" <> _ -> Ok(#(list.drop(input, 5), "escr;", "\u{212F}"))
    "esdot;" <> _ -> Ok(#(list.drop(input, 6), "esdot;", "\u{2250}"))
    "esim;" <> _ -> Ok(#(list.drop(input, 5), "esim;", "\u{2242}"))
    "eta;" <> _ -> Ok(#(list.drop(input, 4), "eta;", "\u{3B7}"))
    "eth;" <> _ -> Ok(#(list.drop(input, 4), "eth;", "\u{F0}"))
    "euml;" <> _ -> Ok(#(list.drop(input, 5), "euml;", "\u{EB}"))
    "euro;" <> _ -> Ok(#(list.drop(input, 5), "euro;", "\u{20AC}"))
    "excl;" <> _ -> Ok(#(list.drop(input, 5), "excl;", "\u{21}"))
    "exist;" <> _ -> Ok(#(list.drop(input, 6), "exist;", "\u{2203}"))
    "expectation;" <> _ ->
      Ok(#(list.drop(input, 12), "expectation;", "\u{2130}"))
    "exponentiale;" <> _ ->
      Ok(#(list.drop(input, 13), "exponentiale;", "\u{2147}"))
    _ -> Error(Nil)
  }
}

fn match_f(entity: String, input: List(String)) {
  case entity {
    "fallingdotseq;" <> _ ->
      Ok(#(list.drop(input, 14), "fallingdotseq;", "\u{2252}"))
    "fcy;" <> _ -> Ok(#(list.drop(input, 4), "fcy;", "\u{444}"))
    "female;" <> _ -> Ok(#(list.drop(input, 7), "female;", "\u{2640}"))
    "ffilig;" <> _ -> Ok(#(list.drop(input, 7), "ffilig;", "\u{FB03}"))
    "fflig;" <> _ -> Ok(#(list.drop(input, 6), "fflig;", "\u{FB00}"))
    "ffllig;" <> _ -> Ok(#(list.drop(input, 7), "ffllig;", "\u{FB04}"))
    "ffr;" <> _ -> Ok(#(list.drop(input, 4), "ffr;", "\u{1D523}"))
    "filig;" <> _ -> Ok(#(list.drop(input, 6), "filig;", "\u{FB01}"))
    "fjlig;" <> _ -> Ok(#(list.drop(input, 6), "fjlig;", "\u{66}\u{6A}"))
    "flat;" <> _ -> Ok(#(list.drop(input, 5), "flat;", "\u{266D}"))
    "fllig;" <> _ -> Ok(#(list.drop(input, 6), "fllig;", "\u{FB02}"))
    "fltns;" <> _ -> Ok(#(list.drop(input, 6), "fltns;", "\u{25B1}"))
    "fnof;" <> _ -> Ok(#(list.drop(input, 5), "fnof;", "\u{192}"))
    "fopf;" <> _ -> Ok(#(list.drop(input, 5), "fopf;", "\u{1D557}"))
    "forall;" <> _ -> Ok(#(list.drop(input, 7), "forall;", "\u{2200}"))
    "fork;" <> _ -> Ok(#(list.drop(input, 5), "fork;", "\u{22D4}"))
    "forkv;" <> _ -> Ok(#(list.drop(input, 6), "forkv;", "\u{2AD9}"))
    "fpartint;" <> _ -> Ok(#(list.drop(input, 9), "fpartint;", "\u{2A0D}"))
    "frac12;" <> _ -> Ok(#(list.drop(input, 7), "frac12;", "\u{BD}"))
    "frac13;" <> _ -> Ok(#(list.drop(input, 7), "frac13;", "\u{2153}"))
    "frac14;" <> _ -> Ok(#(list.drop(input, 7), "frac14;", "\u{BC}"))
    "frac15;" <> _ -> Ok(#(list.drop(input, 7), "frac15;", "\u{2155}"))
    "frac16;" <> _ -> Ok(#(list.drop(input, 7), "frac16;", "\u{2159}"))
    "frac18;" <> _ -> Ok(#(list.drop(input, 7), "frac18;", "\u{215B}"))
    "frac23;" <> _ -> Ok(#(list.drop(input, 7), "frac23;", "\u{2154}"))
    "frac25;" <> _ -> Ok(#(list.drop(input, 7), "frac25;", "\u{2156}"))
    "frac34;" <> _ -> Ok(#(list.drop(input, 7), "frac34;", "\u{BE}"))
    "frac35;" <> _ -> Ok(#(list.drop(input, 7), "frac35;", "\u{2157}"))
    "frac38;" <> _ -> Ok(#(list.drop(input, 7), "frac38;", "\u{215C}"))
    "frac45;" <> _ -> Ok(#(list.drop(input, 7), "frac45;", "\u{2158}"))
    "frac56;" <> _ -> Ok(#(list.drop(input, 7), "frac56;", "\u{215A}"))
    "frac58;" <> _ -> Ok(#(list.drop(input, 7), "frac58;", "\u{215D}"))
    "frac78;" <> _ -> Ok(#(list.drop(input, 7), "frac78;", "\u{215E}"))
    "frasl;" <> _ -> Ok(#(list.drop(input, 6), "frasl;", "\u{2044}"))
    "frown;" <> _ -> Ok(#(list.drop(input, 6), "frown;", "\u{2322}"))
    "fscr;" <> _ -> Ok(#(list.drop(input, 5), "fscr;", "\u{1D4BB}"))
    _ -> Error(Nil)
  }
}

fn match_g(entity: String, input: List(String)) {
  case entity {
    "gE;" <> _ -> Ok(#(list.drop(input, 3), "gE;", "\u{2267}"))
    "gEl;" <> _ -> Ok(#(list.drop(input, 4), "gEl;", "\u{2A8C}"))
    "gacute;" <> _ -> Ok(#(list.drop(input, 7), "gacute;", "\u{1F5}"))
    "gamma;" <> _ -> Ok(#(list.drop(input, 6), "gamma;", "\u{3B3}"))
    "gammad;" <> _ -> Ok(#(list.drop(input, 7), "gammad;", "\u{3DD}"))
    "gap;" <> _ -> Ok(#(list.drop(input, 4), "gap;", "\u{2A86}"))
    "gbreve;" <> _ -> Ok(#(list.drop(input, 7), "gbreve;", "\u{11F}"))
    "gcirc;" <> _ -> Ok(#(list.drop(input, 6), "gcirc;", "\u{11D}"))
    "gcy;" <> _ -> Ok(#(list.drop(input, 4), "gcy;", "\u{433}"))
    "gdot;" <> _ -> Ok(#(list.drop(input, 5), "gdot;", "\u{121}"))
    "ge;" <> _ -> Ok(#(list.drop(input, 3), "ge;", "\u{2265}"))
    "gel;" <> _ -> Ok(#(list.drop(input, 4), "gel;", "\u{22DB}"))
    "geq;" <> _ -> Ok(#(list.drop(input, 4), "geq;", "\u{2265}"))
    "geqq;" <> _ -> Ok(#(list.drop(input, 5), "geqq;", "\u{2267}"))
    "geqslant;" <> _ -> Ok(#(list.drop(input, 9), "geqslant;", "\u{2A7E}"))
    "ges;" <> _ -> Ok(#(list.drop(input, 4), "ges;", "\u{2A7E}"))
    "gescc;" <> _ -> Ok(#(list.drop(input, 6), "gescc;", "\u{2AA9}"))
    "gesdot;" <> _ -> Ok(#(list.drop(input, 7), "gesdot;", "\u{2A80}"))
    "gesdoto;" <> _ -> Ok(#(list.drop(input, 8), "gesdoto;", "\u{2A82}"))
    "gesdotol;" <> _ -> Ok(#(list.drop(input, 9), "gesdotol;", "\u{2A84}"))
    "gesl;" <> _ -> Ok(#(list.drop(input, 5), "gesl;", "\u{22DB}\u{FE00}"))
    "gesles;" <> _ -> Ok(#(list.drop(input, 7), "gesles;", "\u{2A94}"))
    "gfr;" <> _ -> Ok(#(list.drop(input, 4), "gfr;", "\u{1D524}"))
    "gg;" <> _ -> Ok(#(list.drop(input, 3), "gg;", "\u{226B}"))
    "ggg;" <> _ -> Ok(#(list.drop(input, 4), "ggg;", "\u{22D9}"))
    "gimel;" <> _ -> Ok(#(list.drop(input, 6), "gimel;", "\u{2137}"))
    "gjcy;" <> _ -> Ok(#(list.drop(input, 5), "gjcy;", "\u{453}"))
    "gl;" <> _ -> Ok(#(list.drop(input, 3), "gl;", "\u{2277}"))
    "glE;" <> _ -> Ok(#(list.drop(input, 4), "glE;", "\u{2A92}"))
    "gla;" <> _ -> Ok(#(list.drop(input, 4), "gla;", "\u{2AA5}"))
    "glj;" <> _ -> Ok(#(list.drop(input, 4), "glj;", "\u{2AA4}"))
    "gnE;" <> _ -> Ok(#(list.drop(input, 4), "gnE;", "\u{2269}"))
    "gnap;" <> _ -> Ok(#(list.drop(input, 5), "gnap;", "\u{2A8A}"))
    "gnapprox;" <> _ -> Ok(#(list.drop(input, 9), "gnapprox;", "\u{2A8A}"))
    "gne;" <> _ -> Ok(#(list.drop(input, 4), "gne;", "\u{2A88}"))
    "gneq;" <> _ -> Ok(#(list.drop(input, 5), "gneq;", "\u{2A88}"))
    "gneqq;" <> _ -> Ok(#(list.drop(input, 6), "gneqq;", "\u{2269}"))
    "gnsim;" <> _ -> Ok(#(list.drop(input, 6), "gnsim;", "\u{22E7}"))
    "gopf;" <> _ -> Ok(#(list.drop(input, 5), "gopf;", "\u{1D558}"))
    "grave;" <> _ -> Ok(#(list.drop(input, 6), "grave;", "\u{60}"))
    "gscr;" <> _ -> Ok(#(list.drop(input, 5), "gscr;", "\u{210A}"))
    "gsim;" <> _ -> Ok(#(list.drop(input, 5), "gsim;", "\u{2273}"))
    "gsime;" <> _ -> Ok(#(list.drop(input, 6), "gsime;", "\u{2A8E}"))
    "gsiml;" <> _ -> Ok(#(list.drop(input, 6), "gsiml;", "\u{2A90}"))
    "gt;" <> _ -> Ok(#(list.drop(input, 3), "gt;", "\u{3E}"))
    "gtcc;" <> _ -> Ok(#(list.drop(input, 5), "gtcc;", "\u{2AA7}"))
    "gtcir;" <> _ -> Ok(#(list.drop(input, 6), "gtcir;", "\u{2A7A}"))
    "gtdot;" <> _ -> Ok(#(list.drop(input, 6), "gtdot;", "\u{22D7}"))
    "gtlPar;" <> _ -> Ok(#(list.drop(input, 7), "gtlPar;", "\u{2995}"))
    "gtquest;" <> _ -> Ok(#(list.drop(input, 8), "gtquest;", "\u{2A7C}"))
    "gtrapprox;" <> _ -> Ok(#(list.drop(input, 10), "gtrapprox;", "\u{2A86}"))
    "gtrarr;" <> _ -> Ok(#(list.drop(input, 7), "gtrarr;", "\u{2978}"))
    "gtrdot;" <> _ -> Ok(#(list.drop(input, 7), "gtrdot;", "\u{22D7}"))
    "gtreqless;" <> _ -> Ok(#(list.drop(input, 10), "gtreqless;", "\u{22DB}"))
    "gtreqqless;" <> _ -> Ok(#(list.drop(input, 11), "gtreqqless;", "\u{2A8C}"))
    "gtrless;" <> _ -> Ok(#(list.drop(input, 8), "gtrless;", "\u{2277}"))
    "gtrsim;" <> _ -> Ok(#(list.drop(input, 7), "gtrsim;", "\u{2273}"))
    "gvertneqq;" <> _ ->
      Ok(#(list.drop(input, 10), "gvertneqq;", "\u{2269}\u{FE00}"))
    "gvnE;" <> _ -> Ok(#(list.drop(input, 5), "gvnE;", "\u{2269}\u{FE00}"))
    _ -> Error(Nil)
  }
}

fn match_h(entity: String, input: List(String)) {
  case entity {
    "hArr;" <> _ -> Ok(#(list.drop(input, 5), "hArr;", "\u{21D4}"))
    "hairsp;" <> _ -> Ok(#(list.drop(input, 7), "hairsp;", "\u{200A}"))
    "half;" <> _ -> Ok(#(list.drop(input, 5), "half;", "\u{BD}"))
    "hamilt;" <> _ -> Ok(#(list.drop(input, 7), "hamilt;", "\u{210B}"))
    "hardcy;" <> _ -> Ok(#(list.drop(input, 7), "hardcy;", "\u{44A}"))
    "harr;" <> _ -> Ok(#(list.drop(input, 5), "harr;", "\u{2194}"))
    "harrcir;" <> _ -> Ok(#(list.drop(input, 8), "harrcir;", "\u{2948}"))
    "harrw;" <> _ -> Ok(#(list.drop(input, 6), "harrw;", "\u{21AD}"))
    "hbar;" <> _ -> Ok(#(list.drop(input, 5), "hbar;", "\u{210F}"))
    "hcirc;" <> _ -> Ok(#(list.drop(input, 6), "hcirc;", "\u{125}"))
    "hearts;" <> _ -> Ok(#(list.drop(input, 7), "hearts;", "\u{2665}"))
    "heartsuit;" <> _ -> Ok(#(list.drop(input, 10), "heartsuit;", "\u{2665}"))
    "hellip;" <> _ -> Ok(#(list.drop(input, 7), "hellip;", "\u{2026}"))
    "hercon;" <> _ -> Ok(#(list.drop(input, 7), "hercon;", "\u{22B9}"))
    "hfr;" <> _ -> Ok(#(list.drop(input, 4), "hfr;", "\u{1D525}"))
    "hksearow;" <> _ -> Ok(#(list.drop(input, 9), "hksearow;", "\u{2925}"))
    "hkswarow;" <> _ -> Ok(#(list.drop(input, 9), "hkswarow;", "\u{2926}"))
    "hoarr;" <> _ -> Ok(#(list.drop(input, 6), "hoarr;", "\u{21FF}"))
    "homtht;" <> _ -> Ok(#(list.drop(input, 7), "homtht;", "\u{223B}"))
    "hookleftarrow;" <> _ ->
      Ok(#(list.drop(input, 14), "hookleftarrow;", "\u{21A9}"))
    "hookrightarrow;" <> _ ->
      Ok(#(list.drop(input, 15), "hookrightarrow;", "\u{21AA}"))
    "hopf;" <> _ -> Ok(#(list.drop(input, 5), "hopf;", "\u{1D559}"))
    "horbar;" <> _ -> Ok(#(list.drop(input, 7), "horbar;", "\u{2015}"))
    "hscr;" <> _ -> Ok(#(list.drop(input, 5), "hscr;", "\u{1D4BD}"))
    "hslash;" <> _ -> Ok(#(list.drop(input, 7), "hslash;", "\u{210F}"))
    "hstrok;" <> _ -> Ok(#(list.drop(input, 7), "hstrok;", "\u{127}"))
    "hybull;" <> _ -> Ok(#(list.drop(input, 7), "hybull;", "\u{2043}"))
    "hyphen;" <> _ -> Ok(#(list.drop(input, 7), "hyphen;", "\u{2010}"))
    _ -> Error(Nil)
  }
}

fn match_i(entity: String, input: List(String)) {
  case entity {
    "iacute;" <> _ -> Ok(#(list.drop(input, 7), "iacute;", "\u{ED}"))
    "ic;" <> _ -> Ok(#(list.drop(input, 3), "ic;", "\u{2063}"))
    "icirc;" <> _ -> Ok(#(list.drop(input, 6), "icirc;", "\u{EE}"))
    "icy;" <> _ -> Ok(#(list.drop(input, 4), "icy;", "\u{438}"))
    "iecy;" <> _ -> Ok(#(list.drop(input, 5), "iecy;", "\u{435}"))
    "iexcl;" <> _ -> Ok(#(list.drop(input, 6), "iexcl;", "\u{A1}"))
    "iff;" <> _ -> Ok(#(list.drop(input, 4), "iff;", "\u{21D4}"))
    "ifr;" <> _ -> Ok(#(list.drop(input, 4), "ifr;", "\u{1D526}"))
    "igrave;" <> _ -> Ok(#(list.drop(input, 7), "igrave;", "\u{EC}"))
    "ii;" <> _ -> Ok(#(list.drop(input, 3), "ii;", "\u{2148}"))
    "iiiint;" <> _ -> Ok(#(list.drop(input, 7), "iiiint;", "\u{2A0C}"))
    "iiint;" <> _ -> Ok(#(list.drop(input, 6), "iiint;", "\u{222D}"))
    "iinfin;" <> _ -> Ok(#(list.drop(input, 7), "iinfin;", "\u{29DC}"))
    "iiota;" <> _ -> Ok(#(list.drop(input, 6), "iiota;", "\u{2129}"))
    "ijlig;" <> _ -> Ok(#(list.drop(input, 6), "ijlig;", "\u{133}"))
    "imacr;" <> _ -> Ok(#(list.drop(input, 6), "imacr;", "\u{12B}"))
    "image;" <> _ -> Ok(#(list.drop(input, 6), "image;", "\u{2111}"))
    "imagline;" <> _ -> Ok(#(list.drop(input, 9), "imagline;", "\u{2110}"))
    "imagpart;" <> _ -> Ok(#(list.drop(input, 9), "imagpart;", "\u{2111}"))
    "imath;" <> _ -> Ok(#(list.drop(input, 6), "imath;", "\u{131}"))
    "imof;" <> _ -> Ok(#(list.drop(input, 5), "imof;", "\u{22B7}"))
    "imped;" <> _ -> Ok(#(list.drop(input, 6), "imped;", "\u{1B5}"))
    "in;" <> _ -> Ok(#(list.drop(input, 3), "in;", "\u{2208}"))
    "incare;" <> _ -> Ok(#(list.drop(input, 7), "incare;", "\u{2105}"))
    "infin;" <> _ -> Ok(#(list.drop(input, 6), "infin;", "\u{221E}"))
    "infintie;" <> _ -> Ok(#(list.drop(input, 9), "infintie;", "\u{29DD}"))
    "inodot;" <> _ -> Ok(#(list.drop(input, 7), "inodot;", "\u{131}"))
    "int;" <> _ -> Ok(#(list.drop(input, 4), "int;", "\u{222B}"))
    "intcal;" <> _ -> Ok(#(list.drop(input, 7), "intcal;", "\u{22BA}"))
    "integers;" <> _ -> Ok(#(list.drop(input, 9), "integers;", "\u{2124}"))
    "intercal;" <> _ -> Ok(#(list.drop(input, 9), "intercal;", "\u{22BA}"))
    "intlarhk;" <> _ -> Ok(#(list.drop(input, 9), "intlarhk;", "\u{2A17}"))
    "intprod;" <> _ -> Ok(#(list.drop(input, 8), "intprod;", "\u{2A3C}"))
    "iocy;" <> _ -> Ok(#(list.drop(input, 5), "iocy;", "\u{451}"))
    "iogon;" <> _ -> Ok(#(list.drop(input, 6), "iogon;", "\u{12F}"))
    "iopf;" <> _ -> Ok(#(list.drop(input, 5), "iopf;", "\u{1D55A}"))
    "iota;" <> _ -> Ok(#(list.drop(input, 5), "iota;", "\u{3B9}"))
    "iprod;" <> _ -> Ok(#(list.drop(input, 6), "iprod;", "\u{2A3C}"))
    "iquest;" <> _ -> Ok(#(list.drop(input, 7), "iquest;", "\u{BF}"))
    "iscr;" <> _ -> Ok(#(list.drop(input, 5), "iscr;", "\u{1D4BE}"))
    "isin;" <> _ -> Ok(#(list.drop(input, 5), "isin;", "\u{2208}"))
    "isinE;" <> _ -> Ok(#(list.drop(input, 6), "isinE;", "\u{22F9}"))
    "isindot;" <> _ -> Ok(#(list.drop(input, 8), "isindot;", "\u{22F5}"))
    "isins;" <> _ -> Ok(#(list.drop(input, 6), "isins;", "\u{22F4}"))
    "isinsv;" <> _ -> Ok(#(list.drop(input, 7), "isinsv;", "\u{22F3}"))
    "isinv;" <> _ -> Ok(#(list.drop(input, 6), "isinv;", "\u{2208}"))
    "it;" <> _ -> Ok(#(list.drop(input, 3), "it;", "\u{2062}"))
    "itilde;" <> _ -> Ok(#(list.drop(input, 7), "itilde;", "\u{129}"))
    "iukcy;" <> _ -> Ok(#(list.drop(input, 6), "iukcy;", "\u{456}"))
    "iuml;" <> _ -> Ok(#(list.drop(input, 5), "iuml;", "\u{EF}"))
    _ -> Error(Nil)
  }
}

fn match_j(entity: String, input: List(String)) {
  case entity {
    "jcirc;" <> _ -> Ok(#(list.drop(input, 6), "jcirc;", "\u{135}"))
    "jcy;" <> _ -> Ok(#(list.drop(input, 4), "jcy;", "\u{439}"))
    "jfr;" <> _ -> Ok(#(list.drop(input, 4), "jfr;", "\u{1D527}"))
    "jmath;" <> _ -> Ok(#(list.drop(input, 6), "jmath;", "\u{237}"))
    "jopf;" <> _ -> Ok(#(list.drop(input, 5), "jopf;", "\u{1D55B}"))
    "jscr;" <> _ -> Ok(#(list.drop(input, 5), "jscr;", "\u{1D4BF}"))
    "jsercy;" <> _ -> Ok(#(list.drop(input, 7), "jsercy;", "\u{458}"))
    "jukcy;" <> _ -> Ok(#(list.drop(input, 6), "jukcy;", "\u{454}"))
    _ -> Error(Nil)
  }
}

fn match_k(entity: String, input: List(String)) {
  case entity {
    "kappa;" <> _ -> Ok(#(list.drop(input, 6), "kappa;", "\u{3BA}"))
    "kappav;" <> _ -> Ok(#(list.drop(input, 7), "kappav;", "\u{3F0}"))
    "kcedil;" <> _ -> Ok(#(list.drop(input, 7), "kcedil;", "\u{137}"))
    "kcy;" <> _ -> Ok(#(list.drop(input, 4), "kcy;", "\u{43A}"))
    "kfr;" <> _ -> Ok(#(list.drop(input, 4), "kfr;", "\u{1D528}"))
    "kgreen;" <> _ -> Ok(#(list.drop(input, 7), "kgreen;", "\u{138}"))
    "khcy;" <> _ -> Ok(#(list.drop(input, 5), "khcy;", "\u{445}"))
    "kjcy;" <> _ -> Ok(#(list.drop(input, 5), "kjcy;", "\u{45C}"))
    "kopf;" <> _ -> Ok(#(list.drop(input, 5), "kopf;", "\u{1D55C}"))
    "kscr;" <> _ -> Ok(#(list.drop(input, 5), "kscr;", "\u{1D4C0}"))
    _ -> Error(Nil)
  }
}

fn match_l(entity: String, input: List(String)) {
  case entity {
    "lAarr;" <> _ -> Ok(#(list.drop(input, 6), "lAarr;", "\u{21DA}"))
    "lArr;" <> _ -> Ok(#(list.drop(input, 5), "lArr;", "\u{21D0}"))
    "lAtail;" <> _ -> Ok(#(list.drop(input, 7), "lAtail;", "\u{291B}"))
    "lBarr;" <> _ -> Ok(#(list.drop(input, 6), "lBarr;", "\u{290E}"))
    "lE;" <> _ -> Ok(#(list.drop(input, 3), "lE;", "\u{2266}"))
    "lEg;" <> _ -> Ok(#(list.drop(input, 4), "lEg;", "\u{2A8B}"))
    "lHar;" <> _ -> Ok(#(list.drop(input, 5), "lHar;", "\u{2962}"))
    "lacute;" <> _ -> Ok(#(list.drop(input, 7), "lacute;", "\u{13A}"))
    "laemptyv;" <> _ -> Ok(#(list.drop(input, 9), "laemptyv;", "\u{29B4}"))
    "lagran;" <> _ -> Ok(#(list.drop(input, 7), "lagran;", "\u{2112}"))
    "lambda;" <> _ -> Ok(#(list.drop(input, 7), "lambda;", "\u{3BB}"))
    "lang;" <> _ -> Ok(#(list.drop(input, 5), "lang;", "\u{27E8}"))
    "langd;" <> _ -> Ok(#(list.drop(input, 6), "langd;", "\u{2991}"))
    "langle;" <> _ -> Ok(#(list.drop(input, 7), "langle;", "\u{27E8}"))
    "lap;" <> _ -> Ok(#(list.drop(input, 4), "lap;", "\u{2A85}"))
    "laquo;" <> _ -> Ok(#(list.drop(input, 6), "laquo;", "\u{AB}"))
    "larr;" <> _ -> Ok(#(list.drop(input, 5), "larr;", "\u{2190}"))
    "larrb;" <> _ -> Ok(#(list.drop(input, 6), "larrb;", "\u{21E4}"))
    "larrbfs;" <> _ -> Ok(#(list.drop(input, 8), "larrbfs;", "\u{291F}"))
    "larrfs;" <> _ -> Ok(#(list.drop(input, 7), "larrfs;", "\u{291D}"))
    "larrhk;" <> _ -> Ok(#(list.drop(input, 7), "larrhk;", "\u{21A9}"))
    "larrlp;" <> _ -> Ok(#(list.drop(input, 7), "larrlp;", "\u{21AB}"))
    "larrpl;" <> _ -> Ok(#(list.drop(input, 7), "larrpl;", "\u{2939}"))
    "larrsim;" <> _ -> Ok(#(list.drop(input, 8), "larrsim;", "\u{2973}"))
    "larrtl;" <> _ -> Ok(#(list.drop(input, 7), "larrtl;", "\u{21A2}"))
    "lat;" <> _ -> Ok(#(list.drop(input, 4), "lat;", "\u{2AAB}"))
    "latail;" <> _ -> Ok(#(list.drop(input, 7), "latail;", "\u{2919}"))
    "late;" <> _ -> Ok(#(list.drop(input, 5), "late;", "\u{2AAD}"))
    "lates;" <> _ -> Ok(#(list.drop(input, 6), "lates;", "\u{2AAD}\u{FE00}"))
    "lbarr;" <> _ -> Ok(#(list.drop(input, 6), "lbarr;", "\u{290C}"))
    "lbbrk;" <> _ -> Ok(#(list.drop(input, 6), "lbbrk;", "\u{2772}"))
    "lbrace;" <> _ -> Ok(#(list.drop(input, 7), "lbrace;", "\u{7B}"))
    "lbrack;" <> _ -> Ok(#(list.drop(input, 7), "lbrack;", "\u{5B}"))
    "lbrke;" <> _ -> Ok(#(list.drop(input, 6), "lbrke;", "\u{298B}"))
    "lbrksld;" <> _ -> Ok(#(list.drop(input, 8), "lbrksld;", "\u{298F}"))
    "lbrkslu;" <> _ -> Ok(#(list.drop(input, 8), "lbrkslu;", "\u{298D}"))
    "lcaron;" <> _ -> Ok(#(list.drop(input, 7), "lcaron;", "\u{13E}"))
    "lcedil;" <> _ -> Ok(#(list.drop(input, 7), "lcedil;", "\u{13C}"))
    "lceil;" <> _ -> Ok(#(list.drop(input, 6), "lceil;", "\u{2308}"))
    "lcub;" <> _ -> Ok(#(list.drop(input, 5), "lcub;", "\u{7B}"))
    "lcy;" <> _ -> Ok(#(list.drop(input, 4), "lcy;", "\u{43B}"))
    "ldca;" <> _ -> Ok(#(list.drop(input, 5), "ldca;", "\u{2936}"))
    "ldquo;" <> _ -> Ok(#(list.drop(input, 6), "ldquo;", "\u{201C}"))
    "ldquor;" <> _ -> Ok(#(list.drop(input, 7), "ldquor;", "\u{201E}"))
    "ldrdhar;" <> _ -> Ok(#(list.drop(input, 8), "ldrdhar;", "\u{2967}"))
    "ldrushar;" <> _ -> Ok(#(list.drop(input, 9), "ldrushar;", "\u{294B}"))
    "ldsh;" <> _ -> Ok(#(list.drop(input, 5), "ldsh;", "\u{21B2}"))
    "le;" <> _ -> Ok(#(list.drop(input, 3), "le;", "\u{2264}"))
    "leftarrow;" <> _ -> Ok(#(list.drop(input, 10), "leftarrow;", "\u{2190}"))
    "leftarrowtail;" <> _ ->
      Ok(#(list.drop(input, 14), "leftarrowtail;", "\u{21A2}"))
    "leftharpoondown;" <> _ ->
      Ok(#(list.drop(input, 16), "leftharpoondown;", "\u{21BD}"))
    "leftharpoonup;" <> _ ->
      Ok(#(list.drop(input, 14), "leftharpoonup;", "\u{21BC}"))
    "leftleftarrows;" <> _ ->
      Ok(#(list.drop(input, 15), "leftleftarrows;", "\u{21C7}"))
    "leftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 15), "leftrightarrow;", "\u{2194}"))
    "leftrightarrows;" <> _ ->
      Ok(#(list.drop(input, 16), "leftrightarrows;", "\u{21C6}"))
    "leftrightharpoons;" <> _ ->
      Ok(#(list.drop(input, 18), "leftrightharpoons;", "\u{21CB}"))
    "leftrightsquigarrow;" <> _ ->
      Ok(#(list.drop(input, 20), "leftrightsquigarrow;", "\u{21AD}"))
    "leftthreetimes;" <> _ ->
      Ok(#(list.drop(input, 15), "leftthreetimes;", "\u{22CB}"))
    "leg;" <> _ -> Ok(#(list.drop(input, 4), "leg;", "\u{22DA}"))
    "leq;" <> _ -> Ok(#(list.drop(input, 4), "leq;", "\u{2264}"))
    "leqq;" <> _ -> Ok(#(list.drop(input, 5), "leqq;", "\u{2266}"))
    "leqslant;" <> _ -> Ok(#(list.drop(input, 9), "leqslant;", "\u{2A7D}"))
    "les;" <> _ -> Ok(#(list.drop(input, 4), "les;", "\u{2A7D}"))
    "lescc;" <> _ -> Ok(#(list.drop(input, 6), "lescc;", "\u{2AA8}"))
    "lesdot;" <> _ -> Ok(#(list.drop(input, 7), "lesdot;", "\u{2A7F}"))
    "lesdoto;" <> _ -> Ok(#(list.drop(input, 8), "lesdoto;", "\u{2A81}"))
    "lesdotor;" <> _ -> Ok(#(list.drop(input, 9), "lesdotor;", "\u{2A83}"))
    "lesg;" <> _ -> Ok(#(list.drop(input, 5), "lesg;", "\u{22DA}\u{FE00}"))
    "lesges;" <> _ -> Ok(#(list.drop(input, 7), "lesges;", "\u{2A93}"))
    "lessapprox;" <> _ -> Ok(#(list.drop(input, 11), "lessapprox;", "\u{2A85}"))
    "lessdot;" <> _ -> Ok(#(list.drop(input, 8), "lessdot;", "\u{22D6}"))
    "lesseqgtr;" <> _ -> Ok(#(list.drop(input, 10), "lesseqgtr;", "\u{22DA}"))
    "lesseqqgtr;" <> _ -> Ok(#(list.drop(input, 11), "lesseqqgtr;", "\u{2A8B}"))
    "lessgtr;" <> _ -> Ok(#(list.drop(input, 8), "lessgtr;", "\u{2276}"))
    "lesssim;" <> _ -> Ok(#(list.drop(input, 8), "lesssim;", "\u{2272}"))
    "lfisht;" <> _ -> Ok(#(list.drop(input, 7), "lfisht;", "\u{297C}"))
    "lfloor;" <> _ -> Ok(#(list.drop(input, 7), "lfloor;", "\u{230A}"))
    "lfr;" <> _ -> Ok(#(list.drop(input, 4), "lfr;", "\u{1D529}"))
    "lg;" <> _ -> Ok(#(list.drop(input, 3), "lg;", "\u{2276}"))
    "lgE;" <> _ -> Ok(#(list.drop(input, 4), "lgE;", "\u{2A91}"))
    "lhard;" <> _ -> Ok(#(list.drop(input, 6), "lhard;", "\u{21BD}"))
    "lharu;" <> _ -> Ok(#(list.drop(input, 6), "lharu;", "\u{21BC}"))
    "lharul;" <> _ -> Ok(#(list.drop(input, 7), "lharul;", "\u{296A}"))
    "lhblk;" <> _ -> Ok(#(list.drop(input, 6), "lhblk;", "\u{2584}"))
    "ljcy;" <> _ -> Ok(#(list.drop(input, 5), "ljcy;", "\u{459}"))
    "ll;" <> _ -> Ok(#(list.drop(input, 3), "ll;", "\u{226A}"))
    "llarr;" <> _ -> Ok(#(list.drop(input, 6), "llarr;", "\u{21C7}"))
    "llcorner;" <> _ -> Ok(#(list.drop(input, 9), "llcorner;", "\u{231E}"))
    "llhard;" <> _ -> Ok(#(list.drop(input, 7), "llhard;", "\u{296B}"))
    "lltri;" <> _ -> Ok(#(list.drop(input, 6), "lltri;", "\u{25FA}"))
    "lmidot;" <> _ -> Ok(#(list.drop(input, 7), "lmidot;", "\u{140}"))
    "lmoust;" <> _ -> Ok(#(list.drop(input, 7), "lmoust;", "\u{23B0}"))
    "lmoustache;" <> _ -> Ok(#(list.drop(input, 11), "lmoustache;", "\u{23B0}"))
    "lnE;" <> _ -> Ok(#(list.drop(input, 4), "lnE;", "\u{2268}"))
    "lnap;" <> _ -> Ok(#(list.drop(input, 5), "lnap;", "\u{2A89}"))
    "lnapprox;" <> _ -> Ok(#(list.drop(input, 9), "lnapprox;", "\u{2A89}"))
    "lne;" <> _ -> Ok(#(list.drop(input, 4), "lne;", "\u{2A87}"))
    "lneq;" <> _ -> Ok(#(list.drop(input, 5), "lneq;", "\u{2A87}"))
    "lneqq;" <> _ -> Ok(#(list.drop(input, 6), "lneqq;", "\u{2268}"))
    "lnsim;" <> _ -> Ok(#(list.drop(input, 6), "lnsim;", "\u{22E6}"))
    "loang;" <> _ -> Ok(#(list.drop(input, 6), "loang;", "\u{27EC}"))
    "loarr;" <> _ -> Ok(#(list.drop(input, 6), "loarr;", "\u{21FD}"))
    "lobrk;" <> _ -> Ok(#(list.drop(input, 6), "lobrk;", "\u{27E6}"))
    "longleftarrow;" <> _ ->
      Ok(#(list.drop(input, 14), "longleftarrow;", "\u{27F5}"))
    "longleftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 19), "longleftrightarrow;", "\u{27F7}"))
    "longmapsto;" <> _ -> Ok(#(list.drop(input, 11), "longmapsto;", "\u{27FC}"))
    "longrightarrow;" <> _ ->
      Ok(#(list.drop(input, 15), "longrightarrow;", "\u{27F6}"))
    "looparrowleft;" <> _ ->
      Ok(#(list.drop(input, 14), "looparrowleft;", "\u{21AB}"))
    "looparrowright;" <> _ ->
      Ok(#(list.drop(input, 15), "looparrowright;", "\u{21AC}"))
    "lopar;" <> _ -> Ok(#(list.drop(input, 6), "lopar;", "\u{2985}"))
    "lopf;" <> _ -> Ok(#(list.drop(input, 5), "lopf;", "\u{1D55D}"))
    "loplus;" <> _ -> Ok(#(list.drop(input, 7), "loplus;", "\u{2A2D}"))
    "lotimes;" <> _ -> Ok(#(list.drop(input, 8), "lotimes;", "\u{2A34}"))
    "lowast;" <> _ -> Ok(#(list.drop(input, 7), "lowast;", "\u{2217}"))
    "lowbar;" <> _ -> Ok(#(list.drop(input, 7), "lowbar;", "\u{5F}"))
    "loz;" <> _ -> Ok(#(list.drop(input, 4), "loz;", "\u{25CA}"))
    "lozenge;" <> _ -> Ok(#(list.drop(input, 8), "lozenge;", "\u{25CA}"))
    "lozf;" <> _ -> Ok(#(list.drop(input, 5), "lozf;", "\u{29EB}"))
    "lpar;" <> _ -> Ok(#(list.drop(input, 5), "lpar;", "\u{28}"))
    "lparlt;" <> _ -> Ok(#(list.drop(input, 7), "lparlt;", "\u{2993}"))
    "lrarr;" <> _ -> Ok(#(list.drop(input, 6), "lrarr;", "\u{21C6}"))
    "lrcorner;" <> _ -> Ok(#(list.drop(input, 9), "lrcorner;", "\u{231F}"))
    "lrhar;" <> _ -> Ok(#(list.drop(input, 6), "lrhar;", "\u{21CB}"))
    "lrhard;" <> _ -> Ok(#(list.drop(input, 7), "lrhard;", "\u{296D}"))
    "lrm;" <> _ -> Ok(#(list.drop(input, 4), "lrm;", "\u{200E}"))
    "lrtri;" <> _ -> Ok(#(list.drop(input, 6), "lrtri;", "\u{22BF}"))
    "lsaquo;" <> _ -> Ok(#(list.drop(input, 7), "lsaquo;", "\u{2039}"))
    "lscr;" <> _ -> Ok(#(list.drop(input, 5), "lscr;", "\u{1D4C1}"))
    "lsh;" <> _ -> Ok(#(list.drop(input, 4), "lsh;", "\u{21B0}"))
    "lsim;" <> _ -> Ok(#(list.drop(input, 5), "lsim;", "\u{2272}"))
    "lsime;" <> _ -> Ok(#(list.drop(input, 6), "lsime;", "\u{2A8D}"))
    "lsimg;" <> _ -> Ok(#(list.drop(input, 6), "lsimg;", "\u{2A8F}"))
    "lsqb;" <> _ -> Ok(#(list.drop(input, 5), "lsqb;", "\u{5B}"))
    "lsquo;" <> _ -> Ok(#(list.drop(input, 6), "lsquo;", "\u{2018}"))
    "lsquor;" <> _ -> Ok(#(list.drop(input, 7), "lsquor;", "\u{201A}"))
    "lstrok;" <> _ -> Ok(#(list.drop(input, 7), "lstrok;", "\u{142}"))
    "lt;" <> _ -> Ok(#(list.drop(input, 3), "lt;", "\u{3C}"))
    "ltcc;" <> _ -> Ok(#(list.drop(input, 5), "ltcc;", "\u{2AA6}"))
    "ltcir;" <> _ -> Ok(#(list.drop(input, 6), "ltcir;", "\u{2A79}"))
    "ltdot;" <> _ -> Ok(#(list.drop(input, 6), "ltdot;", "\u{22D6}"))
    "lthree;" <> _ -> Ok(#(list.drop(input, 7), "lthree;", "\u{22CB}"))
    "ltimes;" <> _ -> Ok(#(list.drop(input, 7), "ltimes;", "\u{22C9}"))
    "ltlarr;" <> _ -> Ok(#(list.drop(input, 7), "ltlarr;", "\u{2976}"))
    "ltquest;" <> _ -> Ok(#(list.drop(input, 8), "ltquest;", "\u{2A7B}"))
    "ltrPar;" <> _ -> Ok(#(list.drop(input, 7), "ltrPar;", "\u{2996}"))
    "ltri;" <> _ -> Ok(#(list.drop(input, 5), "ltri;", "\u{25C3}"))
    "ltrie;" <> _ -> Ok(#(list.drop(input, 6), "ltrie;", "\u{22B4}"))
    "ltrif;" <> _ -> Ok(#(list.drop(input, 6), "ltrif;", "\u{25C2}"))
    "lurdshar;" <> _ -> Ok(#(list.drop(input, 9), "lurdshar;", "\u{294A}"))
    "luruhar;" <> _ -> Ok(#(list.drop(input, 8), "luruhar;", "\u{2966}"))
    "lvertneqq;" <> _ ->
      Ok(#(list.drop(input, 10), "lvertneqq;", "\u{2268}\u{FE00}"))
    "lvnE;" <> _ -> Ok(#(list.drop(input, 5), "lvnE;", "\u{2268}\u{FE00}"))
    _ -> Error(Nil)
  }
}

fn match_m(entity: String, input: List(String)) {
  case entity {
    "mDDot;" <> _ -> Ok(#(list.drop(input, 6), "mDDot;", "\u{223A}"))
    "macr;" <> _ -> Ok(#(list.drop(input, 5), "macr;", "\u{AF}"))
    "male;" <> _ -> Ok(#(list.drop(input, 5), "male;", "\u{2642}"))
    "malt;" <> _ -> Ok(#(list.drop(input, 5), "malt;", "\u{2720}"))
    "maltese;" <> _ -> Ok(#(list.drop(input, 8), "maltese;", "\u{2720}"))
    "map;" <> _ -> Ok(#(list.drop(input, 4), "map;", "\u{21A6}"))
    "mapsto;" <> _ -> Ok(#(list.drop(input, 7), "mapsto;", "\u{21A6}"))
    "mapstodown;" <> _ -> Ok(#(list.drop(input, 11), "mapstodown;", "\u{21A7}"))
    "mapstoleft;" <> _ -> Ok(#(list.drop(input, 11), "mapstoleft;", "\u{21A4}"))
    "mapstoup;" <> _ -> Ok(#(list.drop(input, 9), "mapstoup;", "\u{21A5}"))
    "marker;" <> _ -> Ok(#(list.drop(input, 7), "marker;", "\u{25AE}"))
    "mcomma;" <> _ -> Ok(#(list.drop(input, 7), "mcomma;", "\u{2A29}"))
    "mcy;" <> _ -> Ok(#(list.drop(input, 4), "mcy;", "\u{43C}"))
    "mdash;" <> _ -> Ok(#(list.drop(input, 6), "mdash;", "\u{2014}"))
    "measuredangle;" <> _ ->
      Ok(#(list.drop(input, 14), "measuredangle;", "\u{2221}"))
    "mfr;" <> _ -> Ok(#(list.drop(input, 4), "mfr;", "\u{1D52A}"))
    "mho;" <> _ -> Ok(#(list.drop(input, 4), "mho;", "\u{2127}"))
    "micro;" <> _ -> Ok(#(list.drop(input, 6), "micro;", "\u{B5}"))
    "mid;" <> _ -> Ok(#(list.drop(input, 4), "mid;", "\u{2223}"))
    "midast;" <> _ -> Ok(#(list.drop(input, 7), "midast;", "\u{2A}"))
    "midcir;" <> _ -> Ok(#(list.drop(input, 7), "midcir;", "\u{2AF0}"))
    "middot;" <> _ -> Ok(#(list.drop(input, 7), "middot;", "\u{B7}"))
    "minus;" <> _ -> Ok(#(list.drop(input, 6), "minus;", "\u{2212}"))
    "minusb;" <> _ -> Ok(#(list.drop(input, 7), "minusb;", "\u{229F}"))
    "minusd;" <> _ -> Ok(#(list.drop(input, 7), "minusd;", "\u{2238}"))
    "minusdu;" <> _ -> Ok(#(list.drop(input, 8), "minusdu;", "\u{2A2A}"))
    "mlcp;" <> _ -> Ok(#(list.drop(input, 5), "mlcp;", "\u{2ADB}"))
    "mldr;" <> _ -> Ok(#(list.drop(input, 5), "mldr;", "\u{2026}"))
    "mnplus;" <> _ -> Ok(#(list.drop(input, 7), "mnplus;", "\u{2213}"))
    "models;" <> _ -> Ok(#(list.drop(input, 7), "models;", "\u{22A7}"))
    "mopf;" <> _ -> Ok(#(list.drop(input, 5), "mopf;", "\u{1D55E}"))
    "mp;" <> _ -> Ok(#(list.drop(input, 3), "mp;", "\u{2213}"))
    "mscr;" <> _ -> Ok(#(list.drop(input, 5), "mscr;", "\u{1D4C2}"))
    "mstpos;" <> _ -> Ok(#(list.drop(input, 7), "mstpos;", "\u{223E}"))
    "mu;" <> _ -> Ok(#(list.drop(input, 3), "mu;", "\u{3BC}"))
    "multimap;" <> _ -> Ok(#(list.drop(input, 9), "multimap;", "\u{22B8}"))
    "mumap;" <> _ -> Ok(#(list.drop(input, 6), "mumap;", "\u{22B8}"))
    _ -> Error(Nil)
  }
}

fn match_n(entity: String, input: List(String)) {
  case entity {
    "nGg;" <> _ -> Ok(#(list.drop(input, 4), "nGg;", "\u{22D9}\u{338}"))
    "nGt;" <> _ -> Ok(#(list.drop(input, 4), "nGt;", "\u{226B}\u{20D2}"))
    "nGtv;" <> _ -> Ok(#(list.drop(input, 5), "nGtv;", "\u{226B}\u{338}"))
    "nLeftarrow;" <> _ -> Ok(#(list.drop(input, 11), "nLeftarrow;", "\u{21CD}"))
    "nLeftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 16), "nLeftrightarrow;", "\u{21CE}"))
    "nLl;" <> _ -> Ok(#(list.drop(input, 4), "nLl;", "\u{22D8}\u{338}"))
    "nLt;" <> _ -> Ok(#(list.drop(input, 4), "nLt;", "\u{226A}\u{20D2}"))
    "nLtv;" <> _ -> Ok(#(list.drop(input, 5), "nLtv;", "\u{226A}\u{338}"))
    "nRightarrow;" <> _ ->
      Ok(#(list.drop(input, 12), "nRightarrow;", "\u{21CF}"))
    "nVDash;" <> _ -> Ok(#(list.drop(input, 7), "nVDash;", "\u{22AF}"))
    "nVdash;" <> _ -> Ok(#(list.drop(input, 7), "nVdash;", "\u{22AE}"))
    "nabla;" <> _ -> Ok(#(list.drop(input, 6), "nabla;", "\u{2207}"))
    "nacute;" <> _ -> Ok(#(list.drop(input, 7), "nacute;", "\u{144}"))
    "nang;" <> _ -> Ok(#(list.drop(input, 5), "nang;", "\u{2220}\u{20D2}"))
    "nap;" <> _ -> Ok(#(list.drop(input, 4), "nap;", "\u{2249}"))
    "napE;" <> _ -> Ok(#(list.drop(input, 5), "napE;", "\u{2A70}\u{338}"))
    "napid;" <> _ -> Ok(#(list.drop(input, 6), "napid;", "\u{224B}\u{338}"))
    "napos;" <> _ -> Ok(#(list.drop(input, 6), "napos;", "\u{149}"))
    "napprox;" <> _ -> Ok(#(list.drop(input, 8), "napprox;", "\u{2249}"))
    "natur;" <> _ -> Ok(#(list.drop(input, 6), "natur;", "\u{266E}"))
    "natural;" <> _ -> Ok(#(list.drop(input, 8), "natural;", "\u{266E}"))
    "naturals;" <> _ -> Ok(#(list.drop(input, 9), "naturals;", "\u{2115}"))
    "nbsp;" <> _ -> Ok(#(list.drop(input, 5), "nbsp;", "\u{A0}"))
    "nbump;" <> _ -> Ok(#(list.drop(input, 6), "nbump;", "\u{224E}\u{338}"))
    "nbumpe;" <> _ -> Ok(#(list.drop(input, 7), "nbumpe;", "\u{224F}\u{338}"))
    "ncap;" <> _ -> Ok(#(list.drop(input, 5), "ncap;", "\u{2A43}"))
    "ncaron;" <> _ -> Ok(#(list.drop(input, 7), "ncaron;", "\u{148}"))
    "ncedil;" <> _ -> Ok(#(list.drop(input, 7), "ncedil;", "\u{146}"))
    "ncong;" <> _ -> Ok(#(list.drop(input, 6), "ncong;", "\u{2247}"))
    "ncongdot;" <> _ ->
      Ok(#(list.drop(input, 9), "ncongdot;", "\u{2A6D}\u{338}"))
    "ncup;" <> _ -> Ok(#(list.drop(input, 5), "ncup;", "\u{2A42}"))
    "ncy;" <> _ -> Ok(#(list.drop(input, 4), "ncy;", "\u{43D}"))
    "ndash;" <> _ -> Ok(#(list.drop(input, 6), "ndash;", "\u{2013}"))
    "ne;" <> _ -> Ok(#(list.drop(input, 3), "ne;", "\u{2260}"))
    "neArr;" <> _ -> Ok(#(list.drop(input, 6), "neArr;", "\u{21D7}"))
    "nearhk;" <> _ -> Ok(#(list.drop(input, 7), "nearhk;", "\u{2924}"))
    "nearr;" <> _ -> Ok(#(list.drop(input, 6), "nearr;", "\u{2197}"))
    "nearrow;" <> _ -> Ok(#(list.drop(input, 8), "nearrow;", "\u{2197}"))
    "nedot;" <> _ -> Ok(#(list.drop(input, 6), "nedot;", "\u{2250}\u{338}"))
    "nequiv;" <> _ -> Ok(#(list.drop(input, 7), "nequiv;", "\u{2262}"))
    "nesear;" <> _ -> Ok(#(list.drop(input, 7), "nesear;", "\u{2928}"))
    "nesim;" <> _ -> Ok(#(list.drop(input, 6), "nesim;", "\u{2242}\u{338}"))
    "nexist;" <> _ -> Ok(#(list.drop(input, 7), "nexist;", "\u{2204}"))
    "nexists;" <> _ -> Ok(#(list.drop(input, 8), "nexists;", "\u{2204}"))
    "nfr;" <> _ -> Ok(#(list.drop(input, 4), "nfr;", "\u{1D52B}"))
    "ngE;" <> _ -> Ok(#(list.drop(input, 4), "ngE;", "\u{2267}\u{338}"))
    "nge;" <> _ -> Ok(#(list.drop(input, 4), "nge;", "\u{2271}"))
    "ngeq;" <> _ -> Ok(#(list.drop(input, 5), "ngeq;", "\u{2271}"))
    "ngeqq;" <> _ -> Ok(#(list.drop(input, 6), "ngeqq;", "\u{2267}\u{338}"))
    "ngeqslant;" <> _ ->
      Ok(#(list.drop(input, 10), "ngeqslant;", "\u{2A7E}\u{338}"))
    "nges;" <> _ -> Ok(#(list.drop(input, 5), "nges;", "\u{2A7E}\u{338}"))
    "ngsim;" <> _ -> Ok(#(list.drop(input, 6), "ngsim;", "\u{2275}"))
    "ngt;" <> _ -> Ok(#(list.drop(input, 4), "ngt;", "\u{226F}"))
    "ngtr;" <> _ -> Ok(#(list.drop(input, 5), "ngtr;", "\u{226F}"))
    "nhArr;" <> _ -> Ok(#(list.drop(input, 6), "nhArr;", "\u{21CE}"))
    "nharr;" <> _ -> Ok(#(list.drop(input, 6), "nharr;", "\u{21AE}"))
    "nhpar;" <> _ -> Ok(#(list.drop(input, 6), "nhpar;", "\u{2AF2}"))
    "ni;" <> _ -> Ok(#(list.drop(input, 3), "ni;", "\u{220B}"))
    "nis;" <> _ -> Ok(#(list.drop(input, 4), "nis;", "\u{22FC}"))
    "nisd;" <> _ -> Ok(#(list.drop(input, 5), "nisd;", "\u{22FA}"))
    "niv;" <> _ -> Ok(#(list.drop(input, 4), "niv;", "\u{220B}"))
    "njcy;" <> _ -> Ok(#(list.drop(input, 5), "njcy;", "\u{45A}"))
    "nlArr;" <> _ -> Ok(#(list.drop(input, 6), "nlArr;", "\u{21CD}"))
    "nlE;" <> _ -> Ok(#(list.drop(input, 4), "nlE;", "\u{2266}\u{338}"))
    "nlarr;" <> _ -> Ok(#(list.drop(input, 6), "nlarr;", "\u{219A}"))
    "nldr;" <> _ -> Ok(#(list.drop(input, 5), "nldr;", "\u{2025}"))
    "nle;" <> _ -> Ok(#(list.drop(input, 4), "nle;", "\u{2270}"))
    "nleftarrow;" <> _ -> Ok(#(list.drop(input, 11), "nleftarrow;", "\u{219A}"))
    "nleftrightarrow;" <> _ ->
      Ok(#(list.drop(input, 16), "nleftrightarrow;", "\u{21AE}"))
    "nleq;" <> _ -> Ok(#(list.drop(input, 5), "nleq;", "\u{2270}"))
    "nleqq;" <> _ -> Ok(#(list.drop(input, 6), "nleqq;", "\u{2266}\u{338}"))
    "nleqslant;" <> _ ->
      Ok(#(list.drop(input, 10), "nleqslant;", "\u{2A7D}\u{338}"))
    "nles;" <> _ -> Ok(#(list.drop(input, 5), "nles;", "\u{2A7D}\u{338}"))
    "nless;" <> _ -> Ok(#(list.drop(input, 6), "nless;", "\u{226E}"))
    "nlsim;" <> _ -> Ok(#(list.drop(input, 6), "nlsim;", "\u{2274}"))
    "nlt;" <> _ -> Ok(#(list.drop(input, 4), "nlt;", "\u{226E}"))
    "nltri;" <> _ -> Ok(#(list.drop(input, 6), "nltri;", "\u{22EA}"))
    "nltrie;" <> _ -> Ok(#(list.drop(input, 7), "nltrie;", "\u{22EC}"))
    "nmid;" <> _ -> Ok(#(list.drop(input, 5), "nmid;", "\u{2224}"))
    "nopf;" <> _ -> Ok(#(list.drop(input, 5), "nopf;", "\u{1D55F}"))
    "not;" <> _ -> Ok(#(list.drop(input, 4), "not;", "\u{AC}"))
    "notin;" <> _ -> Ok(#(list.drop(input, 6), "notin;", "\u{2209}"))
    "notinE;" <> _ -> Ok(#(list.drop(input, 7), "notinE;", "\u{22F9}\u{338}"))
    "notindot;" <> _ ->
      Ok(#(list.drop(input, 9), "notindot;", "\u{22F5}\u{338}"))
    "notinva;" <> _ -> Ok(#(list.drop(input, 8), "notinva;", "\u{2209}"))
    "notinvb;" <> _ -> Ok(#(list.drop(input, 8), "notinvb;", "\u{22F7}"))
    "notinvc;" <> _ -> Ok(#(list.drop(input, 8), "notinvc;", "\u{22F6}"))
    "notni;" <> _ -> Ok(#(list.drop(input, 6), "notni;", "\u{220C}"))
    "notniva;" <> _ -> Ok(#(list.drop(input, 8), "notniva;", "\u{220C}"))
    "notnivb;" <> _ -> Ok(#(list.drop(input, 8), "notnivb;", "\u{22FE}"))
    "notnivc;" <> _ -> Ok(#(list.drop(input, 8), "notnivc;", "\u{22FD}"))
    "npar;" <> _ -> Ok(#(list.drop(input, 5), "npar;", "\u{2226}"))
    "nparallel;" <> _ -> Ok(#(list.drop(input, 10), "nparallel;", "\u{2226}"))
    "nparsl;" <> _ -> Ok(#(list.drop(input, 7), "nparsl;", "\u{2AFD}\u{20E5}"))
    "npart;" <> _ -> Ok(#(list.drop(input, 6), "npart;", "\u{2202}\u{338}"))
    "npolint;" <> _ -> Ok(#(list.drop(input, 8), "npolint;", "\u{2A14}"))
    "npr;" <> _ -> Ok(#(list.drop(input, 4), "npr;", "\u{2280}"))
    "nprcue;" <> _ -> Ok(#(list.drop(input, 7), "nprcue;", "\u{22E0}"))
    "npre;" <> _ -> Ok(#(list.drop(input, 5), "npre;", "\u{2AAF}\u{338}"))
    "nprec;" <> _ -> Ok(#(list.drop(input, 6), "nprec;", "\u{2280}"))
    "npreceq;" <> _ -> Ok(#(list.drop(input, 8), "npreceq;", "\u{2AAF}\u{338}"))
    "nrArr;" <> _ -> Ok(#(list.drop(input, 6), "nrArr;", "\u{21CF}"))
    "nrarr;" <> _ -> Ok(#(list.drop(input, 6), "nrarr;", "\u{219B}"))
    "nrarrc;" <> _ -> Ok(#(list.drop(input, 7), "nrarrc;", "\u{2933}\u{338}"))
    "nrarrw;" <> _ -> Ok(#(list.drop(input, 7), "nrarrw;", "\u{219D}\u{338}"))
    "nrightarrow;" <> _ ->
      Ok(#(list.drop(input, 12), "nrightarrow;", "\u{219B}"))
    "nrtri;" <> _ -> Ok(#(list.drop(input, 6), "nrtri;", "\u{22EB}"))
    "nrtrie;" <> _ -> Ok(#(list.drop(input, 7), "nrtrie;", "\u{22ED}"))
    "nsc;" <> _ -> Ok(#(list.drop(input, 4), "nsc;", "\u{2281}"))
    "nsccue;" <> _ -> Ok(#(list.drop(input, 7), "nsccue;", "\u{22E1}"))
    "nsce;" <> _ -> Ok(#(list.drop(input, 5), "nsce;", "\u{2AB0}\u{338}"))
    "nscr;" <> _ -> Ok(#(list.drop(input, 5), "nscr;", "\u{1D4C3}"))
    "nshortmid;" <> _ -> Ok(#(list.drop(input, 10), "nshortmid;", "\u{2224}"))
    "nshortparallel;" <> _ ->
      Ok(#(list.drop(input, 15), "nshortparallel;", "\u{2226}"))
    "nsim;" <> _ -> Ok(#(list.drop(input, 5), "nsim;", "\u{2241}"))
    "nsime;" <> _ -> Ok(#(list.drop(input, 6), "nsime;", "\u{2244}"))
    "nsimeq;" <> _ -> Ok(#(list.drop(input, 7), "nsimeq;", "\u{2244}"))
    "nsmid;" <> _ -> Ok(#(list.drop(input, 6), "nsmid;", "\u{2224}"))
    "nspar;" <> _ -> Ok(#(list.drop(input, 6), "nspar;", "\u{2226}"))
    "nsqsube;" <> _ -> Ok(#(list.drop(input, 8), "nsqsube;", "\u{22E2}"))
    "nsqsupe;" <> _ -> Ok(#(list.drop(input, 8), "nsqsupe;", "\u{22E3}"))
    "nsub;" <> _ -> Ok(#(list.drop(input, 5), "nsub;", "\u{2284}"))
    "nsubE;" <> _ -> Ok(#(list.drop(input, 6), "nsubE;", "\u{2AC5}\u{338}"))
    "nsube;" <> _ -> Ok(#(list.drop(input, 6), "nsube;", "\u{2288}"))
    "nsubset;" <> _ ->
      Ok(#(list.drop(input, 8), "nsubset;", "\u{2282}\u{20D2}"))
    "nsubseteq;" <> _ -> Ok(#(list.drop(input, 10), "nsubseteq;", "\u{2288}"))
    "nsubseteqq;" <> _ ->
      Ok(#(list.drop(input, 11), "nsubseteqq;", "\u{2AC5}\u{338}"))
    "nsucc;" <> _ -> Ok(#(list.drop(input, 6), "nsucc;", "\u{2281}"))
    "nsucceq;" <> _ -> Ok(#(list.drop(input, 8), "nsucceq;", "\u{2AB0}\u{338}"))
    "nsup;" <> _ -> Ok(#(list.drop(input, 5), "nsup;", "\u{2285}"))
    "nsupE;" <> _ -> Ok(#(list.drop(input, 6), "nsupE;", "\u{2AC6}\u{338}"))
    "nsupe;" <> _ -> Ok(#(list.drop(input, 6), "nsupe;", "\u{2289}"))
    "nsupset;" <> _ ->
      Ok(#(list.drop(input, 8), "nsupset;", "\u{2283}\u{20D2}"))
    "nsupseteq;" <> _ -> Ok(#(list.drop(input, 10), "nsupseteq;", "\u{2289}"))
    "nsupseteqq;" <> _ ->
      Ok(#(list.drop(input, 11), "nsupseteqq;", "\u{2AC6}\u{338}"))
    "ntgl;" <> _ -> Ok(#(list.drop(input, 5), "ntgl;", "\u{2279}"))
    "ntilde;" <> _ -> Ok(#(list.drop(input, 7), "ntilde;", "\u{F1}"))
    "ntlg;" <> _ -> Ok(#(list.drop(input, 5), "ntlg;", "\u{2278}"))
    "ntriangleleft;" <> _ ->
      Ok(#(list.drop(input, 14), "ntriangleleft;", "\u{22EA}"))
    "ntrianglelefteq;" <> _ ->
      Ok(#(list.drop(input, 16), "ntrianglelefteq;", "\u{22EC}"))
    "ntriangleright;" <> _ ->
      Ok(#(list.drop(input, 15), "ntriangleright;", "\u{22EB}"))
    "ntrianglerighteq;" <> _ ->
      Ok(#(list.drop(input, 17), "ntrianglerighteq;", "\u{22ED}"))
    "nu;" <> _ -> Ok(#(list.drop(input, 3), "nu;", "\u{3BD}"))
    "num;" <> _ -> Ok(#(list.drop(input, 4), "num;", "\u{23}"))
    "numero;" <> _ -> Ok(#(list.drop(input, 7), "numero;", "\u{2116}"))
    "numsp;" <> _ -> Ok(#(list.drop(input, 6), "numsp;", "\u{2007}"))
    "nvDash;" <> _ -> Ok(#(list.drop(input, 7), "nvDash;", "\u{22AD}"))
    "nvHarr;" <> _ -> Ok(#(list.drop(input, 7), "nvHarr;", "\u{2904}"))
    "nvap;" <> _ -> Ok(#(list.drop(input, 5), "nvap;", "\u{224D}\u{20D2}"))
    "nvdash;" <> _ -> Ok(#(list.drop(input, 7), "nvdash;", "\u{22AC}"))
    "nvge;" <> _ -> Ok(#(list.drop(input, 5), "nvge;", "\u{2265}\u{20D2}"))
    "nvgt;" <> _ -> Ok(#(list.drop(input, 5), "nvgt;", "\u{3E}\u{20D2}"))
    "nvinfin;" <> _ -> Ok(#(list.drop(input, 8), "nvinfin;", "\u{29DE}"))
    "nvlArr;" <> _ -> Ok(#(list.drop(input, 7), "nvlArr;", "\u{2902}"))
    "nvle;" <> _ -> Ok(#(list.drop(input, 5), "nvle;", "\u{2264}\u{20D2}"))
    "nvlt;" <> _ -> Ok(#(list.drop(input, 5), "nvlt;", "\u{3C}\u{20D2}"))
    "nvltrie;" <> _ ->
      Ok(#(list.drop(input, 8), "nvltrie;", "\u{22B4}\u{20D2}"))
    "nvrArr;" <> _ -> Ok(#(list.drop(input, 7), "nvrArr;", "\u{2903}"))
    "nvrtrie;" <> _ ->
      Ok(#(list.drop(input, 8), "nvrtrie;", "\u{22B5}\u{20D2}"))
    "nvsim;" <> _ -> Ok(#(list.drop(input, 6), "nvsim;", "\u{223C}\u{20D2}"))
    "nwArr;" <> _ -> Ok(#(list.drop(input, 6), "nwArr;", "\u{21D6}"))
    "nwarhk;" <> _ -> Ok(#(list.drop(input, 7), "nwarhk;", "\u{2923}"))
    "nwarr;" <> _ -> Ok(#(list.drop(input, 6), "nwarr;", "\u{2196}"))
    "nwarrow;" <> _ -> Ok(#(list.drop(input, 8), "nwarrow;", "\u{2196}"))
    "nwnear;" <> _ -> Ok(#(list.drop(input, 7), "nwnear;", "\u{2927}"))
    _ -> Error(Nil)
  }
}

fn match_o(entity: String, input: List(String)) {
  case entity {
    "oS;" <> _ -> Ok(#(list.drop(input, 3), "oS;", "\u{24C8}"))
    "oacute;" <> _ -> Ok(#(list.drop(input, 7), "oacute;", "\u{F3}"))
    "oast;" <> _ -> Ok(#(list.drop(input, 5), "oast;", "\u{229B}"))
    "ocir;" <> _ -> Ok(#(list.drop(input, 5), "ocir;", "\u{229A}"))
    "ocirc;" <> _ -> Ok(#(list.drop(input, 6), "ocirc;", "\u{F4}"))
    "ocy;" <> _ -> Ok(#(list.drop(input, 4), "ocy;", "\u{43E}"))
    "odash;" <> _ -> Ok(#(list.drop(input, 6), "odash;", "\u{229D}"))
    "odblac;" <> _ -> Ok(#(list.drop(input, 7), "odblac;", "\u{151}"))
    "odiv;" <> _ -> Ok(#(list.drop(input, 5), "odiv;", "\u{2A38}"))
    "odot;" <> _ -> Ok(#(list.drop(input, 5), "odot;", "\u{2299}"))
    "odsold;" <> _ -> Ok(#(list.drop(input, 7), "odsold;", "\u{29BC}"))
    "oelig;" <> _ -> Ok(#(list.drop(input, 6), "oelig;", "\u{153}"))
    "ofcir;" <> _ -> Ok(#(list.drop(input, 6), "ofcir;", "\u{29BF}"))
    "ofr;" <> _ -> Ok(#(list.drop(input, 4), "ofr;", "\u{1D52C}"))
    "ogon;" <> _ -> Ok(#(list.drop(input, 5), "ogon;", "\u{2DB}"))
    "ograve;" <> _ -> Ok(#(list.drop(input, 7), "ograve;", "\u{F2}"))
    "ogt;" <> _ -> Ok(#(list.drop(input, 4), "ogt;", "\u{29C1}"))
    "ohbar;" <> _ -> Ok(#(list.drop(input, 6), "ohbar;", "\u{29B5}"))
    "ohm;" <> _ -> Ok(#(list.drop(input, 4), "ohm;", "\u{3A9}"))
    "oint;" <> _ -> Ok(#(list.drop(input, 5), "oint;", "\u{222E}"))
    "olarr;" <> _ -> Ok(#(list.drop(input, 6), "olarr;", "\u{21BA}"))
    "olcir;" <> _ -> Ok(#(list.drop(input, 6), "olcir;", "\u{29BE}"))
    "olcross;" <> _ -> Ok(#(list.drop(input, 8), "olcross;", "\u{29BB}"))
    "oline;" <> _ -> Ok(#(list.drop(input, 6), "oline;", "\u{203E}"))
    "olt;" <> _ -> Ok(#(list.drop(input, 4), "olt;", "\u{29C0}"))
    "omacr;" <> _ -> Ok(#(list.drop(input, 6), "omacr;", "\u{14D}"))
    "omega;" <> _ -> Ok(#(list.drop(input, 6), "omega;", "\u{3C9}"))
    "omicron;" <> _ -> Ok(#(list.drop(input, 8), "omicron;", "\u{3BF}"))
    "omid;" <> _ -> Ok(#(list.drop(input, 5), "omid;", "\u{29B6}"))
    "ominus;" <> _ -> Ok(#(list.drop(input, 7), "ominus;", "\u{2296}"))
    "oopf;" <> _ -> Ok(#(list.drop(input, 5), "oopf;", "\u{1D560}"))
    "opar;" <> _ -> Ok(#(list.drop(input, 5), "opar;", "\u{29B7}"))
    "operp;" <> _ -> Ok(#(list.drop(input, 6), "operp;", "\u{29B9}"))
    "oplus;" <> _ -> Ok(#(list.drop(input, 6), "oplus;", "\u{2295}"))
    "or;" <> _ -> Ok(#(list.drop(input, 3), "or;", "\u{2228}"))
    "orarr;" <> _ -> Ok(#(list.drop(input, 6), "orarr;", "\u{21BB}"))
    "ord;" <> _ -> Ok(#(list.drop(input, 4), "ord;", "\u{2A5D}"))
    "order;" <> _ -> Ok(#(list.drop(input, 6), "order;", "\u{2134}"))
    "orderof;" <> _ -> Ok(#(list.drop(input, 8), "orderof;", "\u{2134}"))
    "ordf;" <> _ -> Ok(#(list.drop(input, 5), "ordf;", "\u{AA}"))
    "ordm;" <> _ -> Ok(#(list.drop(input, 5), "ordm;", "\u{BA}"))
    "origof;" <> _ -> Ok(#(list.drop(input, 7), "origof;", "\u{22B6}"))
    "oror;" <> _ -> Ok(#(list.drop(input, 5), "oror;", "\u{2A56}"))
    "orslope;" <> _ -> Ok(#(list.drop(input, 8), "orslope;", "\u{2A57}"))
    "orv;" <> _ -> Ok(#(list.drop(input, 4), "orv;", "\u{2A5B}"))
    "oscr;" <> _ -> Ok(#(list.drop(input, 5), "oscr;", "\u{2134}"))
    "oslash;" <> _ -> Ok(#(list.drop(input, 7), "oslash;", "\u{F8}"))
    "osol;" <> _ -> Ok(#(list.drop(input, 5), "osol;", "\u{2298}"))
    "otilde;" <> _ -> Ok(#(list.drop(input, 7), "otilde;", "\u{F5}"))
    "otimes;" <> _ -> Ok(#(list.drop(input, 7), "otimes;", "\u{2297}"))
    "otimesas;" <> _ -> Ok(#(list.drop(input, 9), "otimesas;", "\u{2A36}"))
    "ouml;" <> _ -> Ok(#(list.drop(input, 5), "ouml;", "\u{F6}"))
    "ovbar;" <> _ -> Ok(#(list.drop(input, 6), "ovbar;", "\u{233D}"))
    _ -> Error(Nil)
  }
}

fn match_p(entity: String, input: List(String)) {
  case entity {
    "par;" <> _ -> Ok(#(list.drop(input, 4), "par;", "\u{2225}"))
    "para;" <> _ -> Ok(#(list.drop(input, 5), "para;", "\u{B6}"))
    "parallel;" <> _ -> Ok(#(list.drop(input, 9), "parallel;", "\u{2225}"))
    "parsim;" <> _ -> Ok(#(list.drop(input, 7), "parsim;", "\u{2AF3}"))
    "parsl;" <> _ -> Ok(#(list.drop(input, 6), "parsl;", "\u{2AFD}"))
    "part;" <> _ -> Ok(#(list.drop(input, 5), "part;", "\u{2202}"))
    "pcy;" <> _ -> Ok(#(list.drop(input, 4), "pcy;", "\u{43F}"))
    "percnt;" <> _ -> Ok(#(list.drop(input, 7), "percnt;", "\u{25}"))
    "period;" <> _ -> Ok(#(list.drop(input, 7), "period;", "\u{2E}"))
    "permil;" <> _ -> Ok(#(list.drop(input, 7), "permil;", "\u{2030}"))
    "perp;" <> _ -> Ok(#(list.drop(input, 5), "perp;", "\u{22A5}"))
    "pertenk;" <> _ -> Ok(#(list.drop(input, 8), "pertenk;", "\u{2031}"))
    "pfr;" <> _ -> Ok(#(list.drop(input, 4), "pfr;", "\u{1D52D}"))
    "phi;" <> _ -> Ok(#(list.drop(input, 4), "phi;", "\u{3C6}"))
    "phiv;" <> _ -> Ok(#(list.drop(input, 5), "phiv;", "\u{3D5}"))
    "phmmat;" <> _ -> Ok(#(list.drop(input, 7), "phmmat;", "\u{2133}"))
    "phone;" <> _ -> Ok(#(list.drop(input, 6), "phone;", "\u{260E}"))
    "pi;" <> _ -> Ok(#(list.drop(input, 3), "pi;", "\u{3C0}"))
    "pitchfork;" <> _ -> Ok(#(list.drop(input, 10), "pitchfork;", "\u{22D4}"))
    "piv;" <> _ -> Ok(#(list.drop(input, 4), "piv;", "\u{3D6}"))
    "planck;" <> _ -> Ok(#(list.drop(input, 7), "planck;", "\u{210F}"))
    "planckh;" <> _ -> Ok(#(list.drop(input, 8), "planckh;", "\u{210E}"))
    "plankv;" <> _ -> Ok(#(list.drop(input, 7), "plankv;", "\u{210F}"))
    "plus;" <> _ -> Ok(#(list.drop(input, 5), "plus;", "\u{2B}"))
    "plusacir;" <> _ -> Ok(#(list.drop(input, 9), "plusacir;", "\u{2A23}"))
    "plusb;" <> _ -> Ok(#(list.drop(input, 6), "plusb;", "\u{229E}"))
    "pluscir;" <> _ -> Ok(#(list.drop(input, 8), "pluscir;", "\u{2A22}"))
    "plusdo;" <> _ -> Ok(#(list.drop(input, 7), "plusdo;", "\u{2214}"))
    "plusdu;" <> _ -> Ok(#(list.drop(input, 7), "plusdu;", "\u{2A25}"))
    "pluse;" <> _ -> Ok(#(list.drop(input, 6), "pluse;", "\u{2A72}"))
    "plusmn;" <> _ -> Ok(#(list.drop(input, 7), "plusmn;", "\u{B1}"))
    "plussim;" <> _ -> Ok(#(list.drop(input, 8), "plussim;", "\u{2A26}"))
    "plustwo;" <> _ -> Ok(#(list.drop(input, 8), "plustwo;", "\u{2A27}"))
    "pm;" <> _ -> Ok(#(list.drop(input, 3), "pm;", "\u{B1}"))
    "pointint;" <> _ -> Ok(#(list.drop(input, 9), "pointint;", "\u{2A15}"))
    "popf;" <> _ -> Ok(#(list.drop(input, 5), "popf;", "\u{1D561}"))
    "pound;" <> _ -> Ok(#(list.drop(input, 6), "pound;", "\u{A3}"))
    "pr;" <> _ -> Ok(#(list.drop(input, 3), "pr;", "\u{227A}"))
    "prE;" <> _ -> Ok(#(list.drop(input, 4), "prE;", "\u{2AB3}"))
    "prap;" <> _ -> Ok(#(list.drop(input, 5), "prap;", "\u{2AB7}"))
    "prcue;" <> _ -> Ok(#(list.drop(input, 6), "prcue;", "\u{227C}"))
    "pre;" <> _ -> Ok(#(list.drop(input, 4), "pre;", "\u{2AAF}"))
    "prec;" <> _ -> Ok(#(list.drop(input, 5), "prec;", "\u{227A}"))
    "precapprox;" <> _ -> Ok(#(list.drop(input, 11), "precapprox;", "\u{2AB7}"))
    "preccurlyeq;" <> _ ->
      Ok(#(list.drop(input, 12), "preccurlyeq;", "\u{227C}"))
    "preceq;" <> _ -> Ok(#(list.drop(input, 7), "preceq;", "\u{2AAF}"))
    "precnapprox;" <> _ ->
      Ok(#(list.drop(input, 12), "precnapprox;", "\u{2AB9}"))
    "precneqq;" <> _ -> Ok(#(list.drop(input, 9), "precneqq;", "\u{2AB5}"))
    "precnsim;" <> _ -> Ok(#(list.drop(input, 9), "precnsim;", "\u{22E8}"))
    "precsim;" <> _ -> Ok(#(list.drop(input, 8), "precsim;", "\u{227E}"))
    "prime;" <> _ -> Ok(#(list.drop(input, 6), "prime;", "\u{2032}"))
    "primes;" <> _ -> Ok(#(list.drop(input, 7), "primes;", "\u{2119}"))
    "prnE;" <> _ -> Ok(#(list.drop(input, 5), "prnE;", "\u{2AB5}"))
    "prnap;" <> _ -> Ok(#(list.drop(input, 6), "prnap;", "\u{2AB9}"))
    "prnsim;" <> _ -> Ok(#(list.drop(input, 7), "prnsim;", "\u{22E8}"))
    "prod;" <> _ -> Ok(#(list.drop(input, 5), "prod;", "\u{220F}"))
    "profalar;" <> _ -> Ok(#(list.drop(input, 9), "profalar;", "\u{232E}"))
    "profline;" <> _ -> Ok(#(list.drop(input, 9), "profline;", "\u{2312}"))
    "profsurf;" <> _ -> Ok(#(list.drop(input, 9), "profsurf;", "\u{2313}"))
    "prop;" <> _ -> Ok(#(list.drop(input, 5), "prop;", "\u{221D}"))
    "propto;" <> _ -> Ok(#(list.drop(input, 7), "propto;", "\u{221D}"))
    "prsim;" <> _ -> Ok(#(list.drop(input, 6), "prsim;", "\u{227E}"))
    "prurel;" <> _ -> Ok(#(list.drop(input, 7), "prurel;", "\u{22B0}"))
    "pscr;" <> _ -> Ok(#(list.drop(input, 5), "pscr;", "\u{1D4C5}"))
    "psi;" <> _ -> Ok(#(list.drop(input, 4), "psi;", "\u{3C8}"))
    "puncsp;" <> _ -> Ok(#(list.drop(input, 7), "puncsp;", "\u{2008}"))
    _ -> Error(Nil)
  }
}

fn match_q(entity: String, input: List(String)) {
  case entity {
    "qfr;" <> _ -> Ok(#(list.drop(input, 4), "qfr;", "\u{1D52E}"))
    "qint;" <> _ -> Ok(#(list.drop(input, 5), "qint;", "\u{2A0C}"))
    "qopf;" <> _ -> Ok(#(list.drop(input, 5), "qopf;", "\u{1D562}"))
    "qprime;" <> _ -> Ok(#(list.drop(input, 7), "qprime;", "\u{2057}"))
    "qscr;" <> _ -> Ok(#(list.drop(input, 5), "qscr;", "\u{1D4C6}"))
    "quaternions;" <> _ ->
      Ok(#(list.drop(input, 12), "quaternions;", "\u{210D}"))
    "quatint;" <> _ -> Ok(#(list.drop(input, 8), "quatint;", "\u{2A16}"))
    "quest;" <> _ -> Ok(#(list.drop(input, 6), "quest;", "\u{3F}"))
    "questeq;" <> _ -> Ok(#(list.drop(input, 8), "questeq;", "\u{225F}"))
    "quot;" <> _ -> Ok(#(list.drop(input, 5), "quot;", "\u{22}"))
    _ -> Error(Nil)
  }
}

fn match_r(entity: String, input: List(String)) {
  case entity {
    "rAarr;" <> _ -> Ok(#(list.drop(input, 6), "rAarr;", "\u{21DB}"))
    "rArr;" <> _ -> Ok(#(list.drop(input, 5), "rArr;", "\u{21D2}"))
    "rAtail;" <> _ -> Ok(#(list.drop(input, 7), "rAtail;", "\u{291C}"))
    "rBarr;" <> _ -> Ok(#(list.drop(input, 6), "rBarr;", "\u{290F}"))
    "rHar;" <> _ -> Ok(#(list.drop(input, 5), "rHar;", "\u{2964}"))
    "race;" <> _ -> Ok(#(list.drop(input, 5), "race;", "\u{223D}\u{331}"))
    "racute;" <> _ -> Ok(#(list.drop(input, 7), "racute;", "\u{155}"))
    "radic;" <> _ -> Ok(#(list.drop(input, 6), "radic;", "\u{221A}"))
    "raemptyv;" <> _ -> Ok(#(list.drop(input, 9), "raemptyv;", "\u{29B3}"))
    "rang;" <> _ -> Ok(#(list.drop(input, 5), "rang;", "\u{27E9}"))
    "rangd;" <> _ -> Ok(#(list.drop(input, 6), "rangd;", "\u{2992}"))
    "range;" <> _ -> Ok(#(list.drop(input, 6), "range;", "\u{29A5}"))
    "rangle;" <> _ -> Ok(#(list.drop(input, 7), "rangle;", "\u{27E9}"))
    "raquo;" <> _ -> Ok(#(list.drop(input, 6), "raquo;", "\u{BB}"))
    "rarr;" <> _ -> Ok(#(list.drop(input, 5), "rarr;", "\u{2192}"))
    "rarrap;" <> _ -> Ok(#(list.drop(input, 7), "rarrap;", "\u{2975}"))
    "rarrb;" <> _ -> Ok(#(list.drop(input, 6), "rarrb;", "\u{21E5}"))
    "rarrbfs;" <> _ -> Ok(#(list.drop(input, 8), "rarrbfs;", "\u{2920}"))
    "rarrc;" <> _ -> Ok(#(list.drop(input, 6), "rarrc;", "\u{2933}"))
    "rarrfs;" <> _ -> Ok(#(list.drop(input, 7), "rarrfs;", "\u{291E}"))
    "rarrhk;" <> _ -> Ok(#(list.drop(input, 7), "rarrhk;", "\u{21AA}"))
    "rarrlp;" <> _ -> Ok(#(list.drop(input, 7), "rarrlp;", "\u{21AC}"))
    "rarrpl;" <> _ -> Ok(#(list.drop(input, 7), "rarrpl;", "\u{2945}"))
    "rarrsim;" <> _ -> Ok(#(list.drop(input, 8), "rarrsim;", "\u{2974}"))
    "rarrtl;" <> _ -> Ok(#(list.drop(input, 7), "rarrtl;", "\u{21A3}"))
    "rarrw;" <> _ -> Ok(#(list.drop(input, 6), "rarrw;", "\u{219D}"))
    "ratail;" <> _ -> Ok(#(list.drop(input, 7), "ratail;", "\u{291A}"))
    "ratio;" <> _ -> Ok(#(list.drop(input, 6), "ratio;", "\u{2236}"))
    "rationals;" <> _ -> Ok(#(list.drop(input, 10), "rationals;", "\u{211A}"))
    "rbarr;" <> _ -> Ok(#(list.drop(input, 6), "rbarr;", "\u{290D}"))
    "rbbrk;" <> _ -> Ok(#(list.drop(input, 6), "rbbrk;", "\u{2773}"))
    "rbrace;" <> _ -> Ok(#(list.drop(input, 7), "rbrace;", "\u{7D}"))
    "rbrack;" <> _ -> Ok(#(list.drop(input, 7), "rbrack;", "\u{5D}"))
    "rbrke;" <> _ -> Ok(#(list.drop(input, 6), "rbrke;", "\u{298C}"))
    "rbrksld;" <> _ -> Ok(#(list.drop(input, 8), "rbrksld;", "\u{298E}"))
    "rbrkslu;" <> _ -> Ok(#(list.drop(input, 8), "rbrkslu;", "\u{2990}"))
    "rcaron;" <> _ -> Ok(#(list.drop(input, 7), "rcaron;", "\u{159}"))
    "rcedil;" <> _ -> Ok(#(list.drop(input, 7), "rcedil;", "\u{157}"))
    "rceil;" <> _ -> Ok(#(list.drop(input, 6), "rceil;", "\u{2309}"))
    "rcub;" <> _ -> Ok(#(list.drop(input, 5), "rcub;", "\u{7D}"))
    "rcy;" <> _ -> Ok(#(list.drop(input, 4), "rcy;", "\u{440}"))
    "rdca;" <> _ -> Ok(#(list.drop(input, 5), "rdca;", "\u{2937}"))
    "rdldhar;" <> _ -> Ok(#(list.drop(input, 8), "rdldhar;", "\u{2969}"))
    "rdquo;" <> _ -> Ok(#(list.drop(input, 6), "rdquo;", "\u{201D}"))
    "rdquor;" <> _ -> Ok(#(list.drop(input, 7), "rdquor;", "\u{201D}"))
    "rdsh;" <> _ -> Ok(#(list.drop(input, 5), "rdsh;", "\u{21B3}"))
    "real;" <> _ -> Ok(#(list.drop(input, 5), "real;", "\u{211C}"))
    "realine;" <> _ -> Ok(#(list.drop(input, 8), "realine;", "\u{211B}"))
    "realpart;" <> _ -> Ok(#(list.drop(input, 9), "realpart;", "\u{211C}"))
    "reals;" <> _ -> Ok(#(list.drop(input, 6), "reals;", "\u{211D}"))
    "rect;" <> _ -> Ok(#(list.drop(input, 5), "rect;", "\u{25AD}"))
    "reg;" <> _ -> Ok(#(list.drop(input, 4), "reg;", "\u{AE}"))
    "rfisht;" <> _ -> Ok(#(list.drop(input, 7), "rfisht;", "\u{297D}"))
    "rfloor;" <> _ -> Ok(#(list.drop(input, 7), "rfloor;", "\u{230B}"))
    "rfr;" <> _ -> Ok(#(list.drop(input, 4), "rfr;", "\u{1D52F}"))
    "rhard;" <> _ -> Ok(#(list.drop(input, 6), "rhard;", "\u{21C1}"))
    "rharu;" <> _ -> Ok(#(list.drop(input, 6), "rharu;", "\u{21C0}"))
    "rharul;" <> _ -> Ok(#(list.drop(input, 7), "rharul;", "\u{296C}"))
    "rho;" <> _ -> Ok(#(list.drop(input, 4), "rho;", "\u{3C1}"))
    "rhov;" <> _ -> Ok(#(list.drop(input, 5), "rhov;", "\u{3F1}"))
    "rightarrow;" <> _ -> Ok(#(list.drop(input, 11), "rightarrow;", "\u{2192}"))
    "rightarrowtail;" <> _ ->
      Ok(#(list.drop(input, 15), "rightarrowtail;", "\u{21A3}"))
    "rightharpoondown;" <> _ ->
      Ok(#(list.drop(input, 17), "rightharpoondown;", "\u{21C1}"))
    "rightharpoonup;" <> _ ->
      Ok(#(list.drop(input, 15), "rightharpoonup;", "\u{21C0}"))
    "rightleftarrows;" <> _ ->
      Ok(#(list.drop(input, 16), "rightleftarrows;", "\u{21C4}"))
    "rightleftharpoons;" <> _ ->
      Ok(#(list.drop(input, 18), "rightleftharpoons;", "\u{21CC}"))
    "rightrightarrows;" <> _ ->
      Ok(#(list.drop(input, 17), "rightrightarrows;", "\u{21C9}"))
    "rightsquigarrow;" <> _ ->
      Ok(#(list.drop(input, 16), "rightsquigarrow;", "\u{219D}"))
    "rightthreetimes;" <> _ ->
      Ok(#(list.drop(input, 16), "rightthreetimes;", "\u{22CC}"))
    "ring;" <> _ -> Ok(#(list.drop(input, 5), "ring;", "\u{2DA}"))
    "risingdotseq;" <> _ ->
      Ok(#(list.drop(input, 13), "risingdotseq;", "\u{2253}"))
    "rlarr;" <> _ -> Ok(#(list.drop(input, 6), "rlarr;", "\u{21C4}"))
    "rlhar;" <> _ -> Ok(#(list.drop(input, 6), "rlhar;", "\u{21CC}"))
    "rlm;" <> _ -> Ok(#(list.drop(input, 4), "rlm;", "\u{200F}"))
    "rmoust;" <> _ -> Ok(#(list.drop(input, 7), "rmoust;", "\u{23B1}"))
    "rmoustache;" <> _ -> Ok(#(list.drop(input, 11), "rmoustache;", "\u{23B1}"))
    "rnmid;" <> _ -> Ok(#(list.drop(input, 6), "rnmid;", "\u{2AEE}"))
    "roang;" <> _ -> Ok(#(list.drop(input, 6), "roang;", "\u{27ED}"))
    "roarr;" <> _ -> Ok(#(list.drop(input, 6), "roarr;", "\u{21FE}"))
    "robrk;" <> _ -> Ok(#(list.drop(input, 6), "robrk;", "\u{27E7}"))
    "ropar;" <> _ -> Ok(#(list.drop(input, 6), "ropar;", "\u{2986}"))
    "ropf;" <> _ -> Ok(#(list.drop(input, 5), "ropf;", "\u{1D563}"))
    "roplus;" <> _ -> Ok(#(list.drop(input, 7), "roplus;", "\u{2A2E}"))
    "rotimes;" <> _ -> Ok(#(list.drop(input, 8), "rotimes;", "\u{2A35}"))
    "rpar;" <> _ -> Ok(#(list.drop(input, 5), "rpar;", "\u{29}"))
    "rpargt;" <> _ -> Ok(#(list.drop(input, 7), "rpargt;", "\u{2994}"))
    "rppolint;" <> _ -> Ok(#(list.drop(input, 9), "rppolint;", "\u{2A12}"))
    "rrarr;" <> _ -> Ok(#(list.drop(input, 6), "rrarr;", "\u{21C9}"))
    "rsaquo;" <> _ -> Ok(#(list.drop(input, 7), "rsaquo;", "\u{203A}"))
    "rscr;" <> _ -> Ok(#(list.drop(input, 5), "rscr;", "\u{1D4C7}"))
    "rsh;" <> _ -> Ok(#(list.drop(input, 4), "rsh;", "\u{21B1}"))
    "rsqb;" <> _ -> Ok(#(list.drop(input, 5), "rsqb;", "\u{5D}"))
    "rsquo;" <> _ -> Ok(#(list.drop(input, 6), "rsquo;", "\u{2019}"))
    "rsquor;" <> _ -> Ok(#(list.drop(input, 7), "rsquor;", "\u{2019}"))
    "rthree;" <> _ -> Ok(#(list.drop(input, 7), "rthree;", "\u{22CC}"))
    "rtimes;" <> _ -> Ok(#(list.drop(input, 7), "rtimes;", "\u{22CA}"))
    "rtri;" <> _ -> Ok(#(list.drop(input, 5), "rtri;", "\u{25B9}"))
    "rtrie;" <> _ -> Ok(#(list.drop(input, 6), "rtrie;", "\u{22B5}"))
    "rtrif;" <> _ -> Ok(#(list.drop(input, 6), "rtrif;", "\u{25B8}"))
    "rtriltri;" <> _ -> Ok(#(list.drop(input, 9), "rtriltri;", "\u{29CE}"))
    "ruluhar;" <> _ -> Ok(#(list.drop(input, 8), "ruluhar;", "\u{2968}"))
    "rx;" <> _ -> Ok(#(list.drop(input, 3), "rx;", "\u{211E}"))
    _ -> Error(Nil)
  }
}

fn match_s(entity: String, input: List(String)) {
  case entity {
    "sacute;" <> _ -> Ok(#(list.drop(input, 7), "sacute;", "\u{15B}"))
    "sbquo;" <> _ -> Ok(#(list.drop(input, 6), "sbquo;", "\u{201A}"))
    "sc;" <> _ -> Ok(#(list.drop(input, 3), "sc;", "\u{227B}"))
    "scE;" <> _ -> Ok(#(list.drop(input, 4), "scE;", "\u{2AB4}"))
    "scap;" <> _ -> Ok(#(list.drop(input, 5), "scap;", "\u{2AB8}"))
    "scaron;" <> _ -> Ok(#(list.drop(input, 7), "scaron;", "\u{161}"))
    "sccue;" <> _ -> Ok(#(list.drop(input, 6), "sccue;", "\u{227D}"))
    "sce;" <> _ -> Ok(#(list.drop(input, 4), "sce;", "\u{2AB0}"))
    "scedil;" <> _ -> Ok(#(list.drop(input, 7), "scedil;", "\u{15F}"))
    "scirc;" <> _ -> Ok(#(list.drop(input, 6), "scirc;", "\u{15D}"))
    "scnE;" <> _ -> Ok(#(list.drop(input, 5), "scnE;", "\u{2AB6}"))
    "scnap;" <> _ -> Ok(#(list.drop(input, 6), "scnap;", "\u{2ABA}"))
    "scnsim;" <> _ -> Ok(#(list.drop(input, 7), "scnsim;", "\u{22E9}"))
    "scpolint;" <> _ -> Ok(#(list.drop(input, 9), "scpolint;", "\u{2A13}"))
    "scsim;" <> _ -> Ok(#(list.drop(input, 6), "scsim;", "\u{227F}"))
    "scy;" <> _ -> Ok(#(list.drop(input, 4), "scy;", "\u{441}"))
    "sdot;" <> _ -> Ok(#(list.drop(input, 5), "sdot;", "\u{22C5}"))
    "sdotb;" <> _ -> Ok(#(list.drop(input, 6), "sdotb;", "\u{22A1}"))
    "sdote;" <> _ -> Ok(#(list.drop(input, 6), "sdote;", "\u{2A66}"))
    "seArr;" <> _ -> Ok(#(list.drop(input, 6), "seArr;", "\u{21D8}"))
    "searhk;" <> _ -> Ok(#(list.drop(input, 7), "searhk;", "\u{2925}"))
    "searr;" <> _ -> Ok(#(list.drop(input, 6), "searr;", "\u{2198}"))
    "searrow;" <> _ -> Ok(#(list.drop(input, 8), "searrow;", "\u{2198}"))
    "sect;" <> _ -> Ok(#(list.drop(input, 5), "sect;", "\u{A7}"))
    "semi;" <> _ -> Ok(#(list.drop(input, 5), "semi;", "\u{3B}"))
    "seswar;" <> _ -> Ok(#(list.drop(input, 7), "seswar;", "\u{2929}"))
    "setminus;" <> _ -> Ok(#(list.drop(input, 9), "setminus;", "\u{2216}"))
    "setmn;" <> _ -> Ok(#(list.drop(input, 6), "setmn;", "\u{2216}"))
    "sext;" <> _ -> Ok(#(list.drop(input, 5), "sext;", "\u{2736}"))
    "sfr;" <> _ -> Ok(#(list.drop(input, 4), "sfr;", "\u{1D530}"))
    "sfrown;" <> _ -> Ok(#(list.drop(input, 7), "sfrown;", "\u{2322}"))
    "sharp;" <> _ -> Ok(#(list.drop(input, 6), "sharp;", "\u{266F}"))
    "shchcy;" <> _ -> Ok(#(list.drop(input, 7), "shchcy;", "\u{449}"))
    "shcy;" <> _ -> Ok(#(list.drop(input, 5), "shcy;", "\u{448}"))
    "shortmid;" <> _ -> Ok(#(list.drop(input, 9), "shortmid;", "\u{2223}"))
    "shortparallel;" <> _ ->
      Ok(#(list.drop(input, 14), "shortparallel;", "\u{2225}"))
    "shy;" <> _ -> Ok(#(list.drop(input, 4), "shy;", "\u{AD}"))
    "sigma;" <> _ -> Ok(#(list.drop(input, 6), "sigma;", "\u{3C3}"))
    "sigmaf;" <> _ -> Ok(#(list.drop(input, 7), "sigmaf;", "\u{3C2}"))
    "sigmav;" <> _ -> Ok(#(list.drop(input, 7), "sigmav;", "\u{3C2}"))
    "sim;" <> _ -> Ok(#(list.drop(input, 4), "sim;", "\u{223C}"))
    "simdot;" <> _ -> Ok(#(list.drop(input, 7), "simdot;", "\u{2A6A}"))
    "sime;" <> _ -> Ok(#(list.drop(input, 5), "sime;", "\u{2243}"))
    "simeq;" <> _ -> Ok(#(list.drop(input, 6), "simeq;", "\u{2243}"))
    "simg;" <> _ -> Ok(#(list.drop(input, 5), "simg;", "\u{2A9E}"))
    "simgE;" <> _ -> Ok(#(list.drop(input, 6), "simgE;", "\u{2AA0}"))
    "siml;" <> _ -> Ok(#(list.drop(input, 5), "siml;", "\u{2A9D}"))
    "simlE;" <> _ -> Ok(#(list.drop(input, 6), "simlE;", "\u{2A9F}"))
    "simne;" <> _ -> Ok(#(list.drop(input, 6), "simne;", "\u{2246}"))
    "simplus;" <> _ -> Ok(#(list.drop(input, 8), "simplus;", "\u{2A24}"))
    "simrarr;" <> _ -> Ok(#(list.drop(input, 8), "simrarr;", "\u{2972}"))
    "slarr;" <> _ -> Ok(#(list.drop(input, 6), "slarr;", "\u{2190}"))
    "smallsetminus;" <> _ ->
      Ok(#(list.drop(input, 14), "smallsetminus;", "\u{2216}"))
    "smashp;" <> _ -> Ok(#(list.drop(input, 7), "smashp;", "\u{2A33}"))
    "smeparsl;" <> _ -> Ok(#(list.drop(input, 9), "smeparsl;", "\u{29E4}"))
    "smid;" <> _ -> Ok(#(list.drop(input, 5), "smid;", "\u{2223}"))
    "smile;" <> _ -> Ok(#(list.drop(input, 6), "smile;", "\u{2323}"))
    "smt;" <> _ -> Ok(#(list.drop(input, 4), "smt;", "\u{2AAA}"))
    "smte;" <> _ -> Ok(#(list.drop(input, 5), "smte;", "\u{2AAC}"))
    "smtes;" <> _ -> Ok(#(list.drop(input, 6), "smtes;", "\u{2AAC}\u{FE00}"))
    "softcy;" <> _ -> Ok(#(list.drop(input, 7), "softcy;", "\u{44C}"))
    "sol;" <> _ -> Ok(#(list.drop(input, 4), "sol;", "\u{2F}"))
    "solb;" <> _ -> Ok(#(list.drop(input, 5), "solb;", "\u{29C4}"))
    "solbar;" <> _ -> Ok(#(list.drop(input, 7), "solbar;", "\u{233F}"))
    "sopf;" <> _ -> Ok(#(list.drop(input, 5), "sopf;", "\u{1D564}"))
    "spades;" <> _ -> Ok(#(list.drop(input, 7), "spades;", "\u{2660}"))
    "spadesuit;" <> _ -> Ok(#(list.drop(input, 10), "spadesuit;", "\u{2660}"))
    "spar;" <> _ -> Ok(#(list.drop(input, 5), "spar;", "\u{2225}"))
    "sqcap;" <> _ -> Ok(#(list.drop(input, 6), "sqcap;", "\u{2293}"))
    "sqcaps;" <> _ -> Ok(#(list.drop(input, 7), "sqcaps;", "\u{2293}\u{FE00}"))
    "sqcup;" <> _ -> Ok(#(list.drop(input, 6), "sqcup;", "\u{2294}"))
    "sqcups;" <> _ -> Ok(#(list.drop(input, 7), "sqcups;", "\u{2294}\u{FE00}"))
    "sqsub;" <> _ -> Ok(#(list.drop(input, 6), "sqsub;", "\u{228F}"))
    "sqsube;" <> _ -> Ok(#(list.drop(input, 7), "sqsube;", "\u{2291}"))
    "sqsubset;" <> _ -> Ok(#(list.drop(input, 9), "sqsubset;", "\u{228F}"))
    "sqsubseteq;" <> _ -> Ok(#(list.drop(input, 11), "sqsubseteq;", "\u{2291}"))
    "sqsup;" <> _ -> Ok(#(list.drop(input, 6), "sqsup;", "\u{2290}"))
    "sqsupe;" <> _ -> Ok(#(list.drop(input, 7), "sqsupe;", "\u{2292}"))
    "sqsupset;" <> _ -> Ok(#(list.drop(input, 9), "sqsupset;", "\u{2290}"))
    "sqsupseteq;" <> _ -> Ok(#(list.drop(input, 11), "sqsupseteq;", "\u{2292}"))
    "squ;" <> _ -> Ok(#(list.drop(input, 4), "squ;", "\u{25A1}"))
    "square;" <> _ -> Ok(#(list.drop(input, 7), "square;", "\u{25A1}"))
    "squarf;" <> _ -> Ok(#(list.drop(input, 7), "squarf;", "\u{25AA}"))
    "squf;" <> _ -> Ok(#(list.drop(input, 5), "squf;", "\u{25AA}"))
    "srarr;" <> _ -> Ok(#(list.drop(input, 6), "srarr;", "\u{2192}"))
    "sscr;" <> _ -> Ok(#(list.drop(input, 5), "sscr;", "\u{1D4C8}"))
    "ssetmn;" <> _ -> Ok(#(list.drop(input, 7), "ssetmn;", "\u{2216}"))
    "ssmile;" <> _ -> Ok(#(list.drop(input, 7), "ssmile;", "\u{2323}"))
    "sstarf;" <> _ -> Ok(#(list.drop(input, 7), "sstarf;", "\u{22C6}"))
    "star;" <> _ -> Ok(#(list.drop(input, 5), "star;", "\u{2606}"))
    "starf;" <> _ -> Ok(#(list.drop(input, 6), "starf;", "\u{2605}"))
    "straightepsilon;" <> _ ->
      Ok(#(list.drop(input, 16), "straightepsilon;", "\u{3F5}"))
    "straightphi;" <> _ ->
      Ok(#(list.drop(input, 12), "straightphi;", "\u{3D5}"))
    "strns;" <> _ -> Ok(#(list.drop(input, 6), "strns;", "\u{AF}"))
    "sub;" <> _ -> Ok(#(list.drop(input, 4), "sub;", "\u{2282}"))
    "subE;" <> _ -> Ok(#(list.drop(input, 5), "subE;", "\u{2AC5}"))
    "subdot;" <> _ -> Ok(#(list.drop(input, 7), "subdot;", "\u{2ABD}"))
    "sube;" <> _ -> Ok(#(list.drop(input, 5), "sube;", "\u{2286}"))
    "subedot;" <> _ -> Ok(#(list.drop(input, 8), "subedot;", "\u{2AC3}"))
    "submult;" <> _ -> Ok(#(list.drop(input, 8), "submult;", "\u{2AC1}"))
    "subnE;" <> _ -> Ok(#(list.drop(input, 6), "subnE;", "\u{2ACB}"))
    "subne;" <> _ -> Ok(#(list.drop(input, 6), "subne;", "\u{228A}"))
    "subplus;" <> _ -> Ok(#(list.drop(input, 8), "subplus;", "\u{2ABF}"))
    "subrarr;" <> _ -> Ok(#(list.drop(input, 8), "subrarr;", "\u{2979}"))
    "subset;" <> _ -> Ok(#(list.drop(input, 7), "subset;", "\u{2282}"))
    "subseteq;" <> _ -> Ok(#(list.drop(input, 9), "subseteq;", "\u{2286}"))
    "subseteqq;" <> _ -> Ok(#(list.drop(input, 10), "subseteqq;", "\u{2AC5}"))
    "subsetneq;" <> _ -> Ok(#(list.drop(input, 10), "subsetneq;", "\u{228A}"))
    "subsetneqq;" <> _ -> Ok(#(list.drop(input, 11), "subsetneqq;", "\u{2ACB}"))
    "subsim;" <> _ -> Ok(#(list.drop(input, 7), "subsim;", "\u{2AC7}"))
    "subsub;" <> _ -> Ok(#(list.drop(input, 7), "subsub;", "\u{2AD5}"))
    "subsup;" <> _ -> Ok(#(list.drop(input, 7), "subsup;", "\u{2AD3}"))
    "succ;" <> _ -> Ok(#(list.drop(input, 5), "succ;", "\u{227B}"))
    "succapprox;" <> _ -> Ok(#(list.drop(input, 11), "succapprox;", "\u{2AB8}"))
    "succcurlyeq;" <> _ ->
      Ok(#(list.drop(input, 12), "succcurlyeq;", "\u{227D}"))
    "succeq;" <> _ -> Ok(#(list.drop(input, 7), "succeq;", "\u{2AB0}"))
    "succnapprox;" <> _ ->
      Ok(#(list.drop(input, 12), "succnapprox;", "\u{2ABA}"))
    "succneqq;" <> _ -> Ok(#(list.drop(input, 9), "succneqq;", "\u{2AB6}"))
    "succnsim;" <> _ -> Ok(#(list.drop(input, 9), "succnsim;", "\u{22E9}"))
    "succsim;" <> _ -> Ok(#(list.drop(input, 8), "succsim;", "\u{227F}"))
    "sum;" <> _ -> Ok(#(list.drop(input, 4), "sum;", "\u{2211}"))
    "sung;" <> _ -> Ok(#(list.drop(input, 5), "sung;", "\u{266A}"))
    "sup1;" <> _ -> Ok(#(list.drop(input, 5), "sup1;", "\u{B9}"))
    "sup2;" <> _ -> Ok(#(list.drop(input, 5), "sup2;", "\u{B2}"))
    "sup3;" <> _ -> Ok(#(list.drop(input, 5), "sup3;", "\u{B3}"))
    "sup;" <> _ -> Ok(#(list.drop(input, 4), "sup;", "\u{2283}"))
    "supE;" <> _ -> Ok(#(list.drop(input, 5), "supE;", "\u{2AC6}"))
    "supdot;" <> _ -> Ok(#(list.drop(input, 7), "supdot;", "\u{2ABE}"))
    "supdsub;" <> _ -> Ok(#(list.drop(input, 8), "supdsub;", "\u{2AD8}"))
    "supe;" <> _ -> Ok(#(list.drop(input, 5), "supe;", "\u{2287}"))
    "supedot;" <> _ -> Ok(#(list.drop(input, 8), "supedot;", "\u{2AC4}"))
    "suphsol;" <> _ -> Ok(#(list.drop(input, 8), "suphsol;", "\u{27C9}"))
    "suphsub;" <> _ -> Ok(#(list.drop(input, 8), "suphsub;", "\u{2AD7}"))
    "suplarr;" <> _ -> Ok(#(list.drop(input, 8), "suplarr;", "\u{297B}"))
    "supmult;" <> _ -> Ok(#(list.drop(input, 8), "supmult;", "\u{2AC2}"))
    "supnE;" <> _ -> Ok(#(list.drop(input, 6), "supnE;", "\u{2ACC}"))
    "supne;" <> _ -> Ok(#(list.drop(input, 6), "supne;", "\u{228B}"))
    "supplus;" <> _ -> Ok(#(list.drop(input, 8), "supplus;", "\u{2AC0}"))
    "supset;" <> _ -> Ok(#(list.drop(input, 7), "supset;", "\u{2283}"))
    "supseteq;" <> _ -> Ok(#(list.drop(input, 9), "supseteq;", "\u{2287}"))
    "supseteqq;" <> _ -> Ok(#(list.drop(input, 10), "supseteqq;", "\u{2AC6}"))
    "supsetneq;" <> _ -> Ok(#(list.drop(input, 10), "supsetneq;", "\u{228B}"))
    "supsetneqq;" <> _ -> Ok(#(list.drop(input, 11), "supsetneqq;", "\u{2ACC}"))
    "supsim;" <> _ -> Ok(#(list.drop(input, 7), "supsim;", "\u{2AC8}"))
    "supsub;" <> _ -> Ok(#(list.drop(input, 7), "supsub;", "\u{2AD4}"))
    "supsup;" <> _ -> Ok(#(list.drop(input, 7), "supsup;", "\u{2AD6}"))
    "swArr;" <> _ -> Ok(#(list.drop(input, 6), "swArr;", "\u{21D9}"))
    "swarhk;" <> _ -> Ok(#(list.drop(input, 7), "swarhk;", "\u{2926}"))
    "swarr;" <> _ -> Ok(#(list.drop(input, 6), "swarr;", "\u{2199}"))
    "swarrow;" <> _ -> Ok(#(list.drop(input, 8), "swarrow;", "\u{2199}"))
    "swnwar;" <> _ -> Ok(#(list.drop(input, 7), "swnwar;", "\u{292A}"))
    "szlig;" <> _ -> Ok(#(list.drop(input, 6), "szlig;", "\u{DF}"))
    _ -> Error(Nil)
  }
}

fn match_t(entity: String, input: List(String)) {
  case entity {
    "target;" <> _ -> Ok(#(list.drop(input, 7), "target;", "\u{2316}"))
    "tau;" <> _ -> Ok(#(list.drop(input, 4), "tau;", "\u{3C4}"))
    "tbrk;" <> _ -> Ok(#(list.drop(input, 5), "tbrk;", "\u{23B4}"))
    "tcaron;" <> _ -> Ok(#(list.drop(input, 7), "tcaron;", "\u{165}"))
    "tcedil;" <> _ -> Ok(#(list.drop(input, 7), "tcedil;", "\u{163}"))
    "tcy;" <> _ -> Ok(#(list.drop(input, 4), "tcy;", "\u{442}"))
    "tdot;" <> _ -> Ok(#(list.drop(input, 5), "tdot;", "\u{20DB}"))
    "telrec;" <> _ -> Ok(#(list.drop(input, 7), "telrec;", "\u{2315}"))
    "tfr;" <> _ -> Ok(#(list.drop(input, 4), "tfr;", "\u{1D531}"))
    "there4;" <> _ -> Ok(#(list.drop(input, 7), "there4;", "\u{2234}"))
    "therefore;" <> _ -> Ok(#(list.drop(input, 10), "therefore;", "\u{2234}"))
    "theta;" <> _ -> Ok(#(list.drop(input, 6), "theta;", "\u{3B8}"))
    "thetasym;" <> _ -> Ok(#(list.drop(input, 9), "thetasym;", "\u{3D1}"))
    "thetav;" <> _ -> Ok(#(list.drop(input, 7), "thetav;", "\u{3D1}"))
    "thickapprox;" <> _ ->
      Ok(#(list.drop(input, 12), "thickapprox;", "\u{2248}"))
    "thicksim;" <> _ -> Ok(#(list.drop(input, 9), "thicksim;", "\u{223C}"))
    "thinsp;" <> _ -> Ok(#(list.drop(input, 7), "thinsp;", "\u{2009}"))
    "thkap;" <> _ -> Ok(#(list.drop(input, 6), "thkap;", "\u{2248}"))
    "thksim;" <> _ -> Ok(#(list.drop(input, 7), "thksim;", "\u{223C}"))
    "thorn;" <> _ -> Ok(#(list.drop(input, 6), "thorn;", "\u{FE}"))
    "tilde;" <> _ -> Ok(#(list.drop(input, 6), "tilde;", "\u{2DC}"))
    "times;" <> _ -> Ok(#(list.drop(input, 6), "times;", "\u{D7}"))
    "timesb;" <> _ -> Ok(#(list.drop(input, 7), "timesb;", "\u{22A0}"))
    "timesbar;" <> _ -> Ok(#(list.drop(input, 9), "timesbar;", "\u{2A31}"))
    "timesd;" <> _ -> Ok(#(list.drop(input, 7), "timesd;", "\u{2A30}"))
    "tint;" <> _ -> Ok(#(list.drop(input, 5), "tint;", "\u{222D}"))
    "toea;" <> _ -> Ok(#(list.drop(input, 5), "toea;", "\u{2928}"))
    "top;" <> _ -> Ok(#(list.drop(input, 4), "top;", "\u{22A4}"))
    "topbot;" <> _ -> Ok(#(list.drop(input, 7), "topbot;", "\u{2336}"))
    "topcir;" <> _ -> Ok(#(list.drop(input, 7), "topcir;", "\u{2AF1}"))
    "topf;" <> _ -> Ok(#(list.drop(input, 5), "topf;", "\u{1D565}"))
    "topfork;" <> _ -> Ok(#(list.drop(input, 8), "topfork;", "\u{2ADA}"))
    "tosa;" <> _ -> Ok(#(list.drop(input, 5), "tosa;", "\u{2929}"))
    "tprime;" <> _ -> Ok(#(list.drop(input, 7), "tprime;", "\u{2034}"))
    "trade;" <> _ -> Ok(#(list.drop(input, 6), "trade;", "\u{2122}"))
    "triangle;" <> _ -> Ok(#(list.drop(input, 9), "triangle;", "\u{25B5}"))
    "triangledown;" <> _ ->
      Ok(#(list.drop(input, 13), "triangledown;", "\u{25BF}"))
    "triangleleft;" <> _ ->
      Ok(#(list.drop(input, 13), "triangleleft;", "\u{25C3}"))
    "trianglelefteq;" <> _ ->
      Ok(#(list.drop(input, 15), "trianglelefteq;", "\u{22B4}"))
    "triangleq;" <> _ -> Ok(#(list.drop(input, 10), "triangleq;", "\u{225C}"))
    "triangleright;" <> _ ->
      Ok(#(list.drop(input, 14), "triangleright;", "\u{25B9}"))
    "trianglerighteq;" <> _ ->
      Ok(#(list.drop(input, 16), "trianglerighteq;", "\u{22B5}"))
    "tridot;" <> _ -> Ok(#(list.drop(input, 7), "tridot;", "\u{25EC}"))
    "trie;" <> _ -> Ok(#(list.drop(input, 5), "trie;", "\u{225C}"))
    "triminus;" <> _ -> Ok(#(list.drop(input, 9), "triminus;", "\u{2A3A}"))
    "triplus;" <> _ -> Ok(#(list.drop(input, 8), "triplus;", "\u{2A39}"))
    "trisb;" <> _ -> Ok(#(list.drop(input, 6), "trisb;", "\u{29CD}"))
    "tritime;" <> _ -> Ok(#(list.drop(input, 8), "tritime;", "\u{2A3B}"))
    "trpezium;" <> _ -> Ok(#(list.drop(input, 9), "trpezium;", "\u{23E2}"))
    "tscr;" <> _ -> Ok(#(list.drop(input, 5), "tscr;", "\u{1D4C9}"))
    "tscy;" <> _ -> Ok(#(list.drop(input, 5), "tscy;", "\u{446}"))
    "tshcy;" <> _ -> Ok(#(list.drop(input, 6), "tshcy;", "\u{45B}"))
    "tstrok;" <> _ -> Ok(#(list.drop(input, 7), "tstrok;", "\u{167}"))
    "twixt;" <> _ -> Ok(#(list.drop(input, 6), "twixt;", "\u{226C}"))
    "twoheadleftarrow;" <> _ ->
      Ok(#(list.drop(input, 17), "twoheadleftarrow;", "\u{219E}"))
    "twoheadrightarrow;" <> _ ->
      Ok(#(list.drop(input, 18), "twoheadrightarrow;", "\u{21A0}"))
    _ -> Error(Nil)
  }
}

fn match_u(entity: String, input: List(String)) {
  case entity {
    "uArr;" <> _ -> Ok(#(list.drop(input, 5), "uArr;", "\u{21D1}"))
    "uHar;" <> _ -> Ok(#(list.drop(input, 5), "uHar;", "\u{2963}"))
    "uacute;" <> _ -> Ok(#(list.drop(input, 7), "uacute;", "\u{FA}"))
    "uarr;" <> _ -> Ok(#(list.drop(input, 5), "uarr;", "\u{2191}"))
    "ubrcy;" <> _ -> Ok(#(list.drop(input, 6), "ubrcy;", "\u{45E}"))
    "ubreve;" <> _ -> Ok(#(list.drop(input, 7), "ubreve;", "\u{16D}"))
    "ucirc;" <> _ -> Ok(#(list.drop(input, 6), "ucirc;", "\u{FB}"))
    "ucy;" <> _ -> Ok(#(list.drop(input, 4), "ucy;", "\u{443}"))
    "udarr;" <> _ -> Ok(#(list.drop(input, 6), "udarr;", "\u{21C5}"))
    "udblac;" <> _ -> Ok(#(list.drop(input, 7), "udblac;", "\u{171}"))
    "udhar;" <> _ -> Ok(#(list.drop(input, 6), "udhar;", "\u{296E}"))
    "ufisht;" <> _ -> Ok(#(list.drop(input, 7), "ufisht;", "\u{297E}"))
    "ufr;" <> _ -> Ok(#(list.drop(input, 4), "ufr;", "\u{1D532}"))
    "ugrave;" <> _ -> Ok(#(list.drop(input, 7), "ugrave;", "\u{F9}"))
    "uharl;" <> _ -> Ok(#(list.drop(input, 6), "uharl;", "\u{21BF}"))
    "uharr;" <> _ -> Ok(#(list.drop(input, 6), "uharr;", "\u{21BE}"))
    "uhblk;" <> _ -> Ok(#(list.drop(input, 6), "uhblk;", "\u{2580}"))
    "ulcorn;" <> _ -> Ok(#(list.drop(input, 7), "ulcorn;", "\u{231C}"))
    "ulcorner;" <> _ -> Ok(#(list.drop(input, 9), "ulcorner;", "\u{231C}"))
    "ulcrop;" <> _ -> Ok(#(list.drop(input, 7), "ulcrop;", "\u{230F}"))
    "ultri;" <> _ -> Ok(#(list.drop(input, 6), "ultri;", "\u{25F8}"))
    "umacr;" <> _ -> Ok(#(list.drop(input, 6), "umacr;", "\u{16B}"))
    "uml;" <> _ -> Ok(#(list.drop(input, 4), "uml;", "\u{A8}"))
    "uogon;" <> _ -> Ok(#(list.drop(input, 6), "uogon;", "\u{173}"))
    "uopf;" <> _ -> Ok(#(list.drop(input, 5), "uopf;", "\u{1D566}"))
    "uparrow;" <> _ -> Ok(#(list.drop(input, 8), "uparrow;", "\u{2191}"))
    "updownarrow;" <> _ ->
      Ok(#(list.drop(input, 12), "updownarrow;", "\u{2195}"))
    "upharpoonleft;" <> _ ->
      Ok(#(list.drop(input, 14), "upharpoonleft;", "\u{21BF}"))
    "upharpoonright;" <> _ ->
      Ok(#(list.drop(input, 15), "upharpoonright;", "\u{21BE}"))
    "uplus;" <> _ -> Ok(#(list.drop(input, 6), "uplus;", "\u{228E}"))
    "upsi;" <> _ -> Ok(#(list.drop(input, 5), "upsi;", "\u{3C5}"))
    "upsih;" <> _ -> Ok(#(list.drop(input, 6), "upsih;", "\u{3D2}"))
    "upsilon;" <> _ -> Ok(#(list.drop(input, 8), "upsilon;", "\u{3C5}"))
    "upuparrows;" <> _ -> Ok(#(list.drop(input, 11), "upuparrows;", "\u{21C8}"))
    "urcorn;" <> _ -> Ok(#(list.drop(input, 7), "urcorn;", "\u{231D}"))
    "urcorner;" <> _ -> Ok(#(list.drop(input, 9), "urcorner;", "\u{231D}"))
    "urcrop;" <> _ -> Ok(#(list.drop(input, 7), "urcrop;", "\u{230E}"))
    "uring;" <> _ -> Ok(#(list.drop(input, 6), "uring;", "\u{16F}"))
    "urtri;" <> _ -> Ok(#(list.drop(input, 6), "urtri;", "\u{25F9}"))
    "uscr;" <> _ -> Ok(#(list.drop(input, 5), "uscr;", "\u{1D4CA}"))
    "utdot;" <> _ -> Ok(#(list.drop(input, 6), "utdot;", "\u{22F0}"))
    "utilde;" <> _ -> Ok(#(list.drop(input, 7), "utilde;", "\u{169}"))
    "utri;" <> _ -> Ok(#(list.drop(input, 5), "utri;", "\u{25B5}"))
    "utrif;" <> _ -> Ok(#(list.drop(input, 6), "utrif;", "\u{25B4}"))
    "uuarr;" <> _ -> Ok(#(list.drop(input, 6), "uuarr;", "\u{21C8}"))
    "uuml;" <> _ -> Ok(#(list.drop(input, 5), "uuml;", "\u{FC}"))
    "uwangle;" <> _ -> Ok(#(list.drop(input, 8), "uwangle;", "\u{29A7}"))
    _ -> Error(Nil)
  }
}

fn match_v(entity: String, input: List(String)) {
  case entity {
    "vArr;" <> _ -> Ok(#(list.drop(input, 5), "vArr;", "\u{21D5}"))
    "vBar;" <> _ -> Ok(#(list.drop(input, 5), "vBar;", "\u{2AE8}"))
    "vBarv;" <> _ -> Ok(#(list.drop(input, 6), "vBarv;", "\u{2AE9}"))
    "vDash;" <> _ -> Ok(#(list.drop(input, 6), "vDash;", "\u{22A8}"))
    "vangrt;" <> _ -> Ok(#(list.drop(input, 7), "vangrt;", "\u{299C}"))
    "varepsilon;" <> _ -> Ok(#(list.drop(input, 11), "varepsilon;", "\u{3F5}"))
    "varkappa;" <> _ -> Ok(#(list.drop(input, 9), "varkappa;", "\u{3F0}"))
    "varnothing;" <> _ -> Ok(#(list.drop(input, 11), "varnothing;", "\u{2205}"))
    "varphi;" <> _ -> Ok(#(list.drop(input, 7), "varphi;", "\u{3D5}"))
    "varpi;" <> _ -> Ok(#(list.drop(input, 6), "varpi;", "\u{3D6}"))
    "varpropto;" <> _ -> Ok(#(list.drop(input, 10), "varpropto;", "\u{221D}"))
    "varr;" <> _ -> Ok(#(list.drop(input, 5), "varr;", "\u{2195}"))
    "varrho;" <> _ -> Ok(#(list.drop(input, 7), "varrho;", "\u{3F1}"))
    "varsigma;" <> _ -> Ok(#(list.drop(input, 9), "varsigma;", "\u{3C2}"))
    "varsubsetneq;" <> _ ->
      Ok(#(list.drop(input, 13), "varsubsetneq;", "\u{228A}\u{FE00}"))
    "varsubsetneqq;" <> _ ->
      Ok(#(list.drop(input, 14), "varsubsetneqq;", "\u{2ACB}\u{FE00}"))
    "varsupsetneq;" <> _ ->
      Ok(#(list.drop(input, 13), "varsupsetneq;", "\u{228B}\u{FE00}"))
    "varsupsetneqq;" <> _ ->
      Ok(#(list.drop(input, 14), "varsupsetneqq;", "\u{2ACC}\u{FE00}"))
    "vartheta;" <> _ -> Ok(#(list.drop(input, 9), "vartheta;", "\u{3D1}"))
    "vartriangleleft;" <> _ ->
      Ok(#(list.drop(input, 16), "vartriangleleft;", "\u{22B2}"))
    "vartriangleright;" <> _ ->
      Ok(#(list.drop(input, 17), "vartriangleright;", "\u{22B3}"))
    "vcy;" <> _ -> Ok(#(list.drop(input, 4), "vcy;", "\u{432}"))
    "vdash;" <> _ -> Ok(#(list.drop(input, 6), "vdash;", "\u{22A2}"))
    "vee;" <> _ -> Ok(#(list.drop(input, 4), "vee;", "\u{2228}"))
    "veebar;" <> _ -> Ok(#(list.drop(input, 7), "veebar;", "\u{22BB}"))
    "veeeq;" <> _ -> Ok(#(list.drop(input, 6), "veeeq;", "\u{225A}"))
    "vellip;" <> _ -> Ok(#(list.drop(input, 7), "vellip;", "\u{22EE}"))
    "verbar;" <> _ -> Ok(#(list.drop(input, 7), "verbar;", "\u{7C}"))
    "vert;" <> _ -> Ok(#(list.drop(input, 5), "vert;", "\u{7C}"))
    "vfr;" <> _ -> Ok(#(list.drop(input, 4), "vfr;", "\u{1D533}"))
    "vltri;" <> _ -> Ok(#(list.drop(input, 6), "vltri;", "\u{22B2}"))
    "vnsub;" <> _ -> Ok(#(list.drop(input, 6), "vnsub;", "\u{2282}\u{20D2}"))
    "vnsup;" <> _ -> Ok(#(list.drop(input, 6), "vnsup;", "\u{2283}\u{20D2}"))
    "vopf;" <> _ -> Ok(#(list.drop(input, 5), "vopf;", "\u{1D567}"))
    "vprop;" <> _ -> Ok(#(list.drop(input, 6), "vprop;", "\u{221D}"))
    "vrtri;" <> _ -> Ok(#(list.drop(input, 6), "vrtri;", "\u{22B3}"))
    "vscr;" <> _ -> Ok(#(list.drop(input, 5), "vscr;", "\u{1D4CB}"))
    "vsubnE;" <> _ -> Ok(#(list.drop(input, 7), "vsubnE;", "\u{2ACB}\u{FE00}"))
    "vsubne;" <> _ -> Ok(#(list.drop(input, 7), "vsubne;", "\u{228A}\u{FE00}"))
    "vsupnE;" <> _ -> Ok(#(list.drop(input, 7), "vsupnE;", "\u{2ACC}\u{FE00}"))
    "vsupne;" <> _ -> Ok(#(list.drop(input, 7), "vsupne;", "\u{228B}\u{FE00}"))
    "vzigzag;" <> _ -> Ok(#(list.drop(input, 8), "vzigzag;", "\u{299A}"))
    _ -> Error(Nil)
  }
}

fn match_w(entity: String, input: List(String)) {
  case entity {
    "wcirc;" <> _ -> Ok(#(list.drop(input, 6), "wcirc;", "\u{175}"))
    "wedbar;" <> _ -> Ok(#(list.drop(input, 7), "wedbar;", "\u{2A5F}"))
    "wedge;" <> _ -> Ok(#(list.drop(input, 6), "wedge;", "\u{2227}"))
    "wedgeq;" <> _ -> Ok(#(list.drop(input, 7), "wedgeq;", "\u{2259}"))
    "weierp;" <> _ -> Ok(#(list.drop(input, 7), "weierp;", "\u{2118}"))
    "wfr;" <> _ -> Ok(#(list.drop(input, 4), "wfr;", "\u{1D534}"))
    "wopf;" <> _ -> Ok(#(list.drop(input, 5), "wopf;", "\u{1D568}"))
    "wp;" <> _ -> Ok(#(list.drop(input, 3), "wp;", "\u{2118}"))
    "wr;" <> _ -> Ok(#(list.drop(input, 3), "wr;", "\u{2240}"))
    "wreath;" <> _ -> Ok(#(list.drop(input, 7), "wreath;", "\u{2240}"))
    "wscr;" <> _ -> Ok(#(list.drop(input, 5), "wscr;", "\u{1D4CC}"))
    _ -> Error(Nil)
  }
}

fn match_x(entity: String, input: List(String)) {
  case entity {
    "xcap;" <> _ -> Ok(#(list.drop(input, 5), "xcap;", "\u{22C2}"))
    "xcirc;" <> _ -> Ok(#(list.drop(input, 6), "xcirc;", "\u{25EF}"))
    "xcup;" <> _ -> Ok(#(list.drop(input, 5), "xcup;", "\u{22C3}"))
    "xdtri;" <> _ -> Ok(#(list.drop(input, 6), "xdtri;", "\u{25BD}"))
    "xfr;" <> _ -> Ok(#(list.drop(input, 4), "xfr;", "\u{1D535}"))
    "xhArr;" <> _ -> Ok(#(list.drop(input, 6), "xhArr;", "\u{27FA}"))
    "xharr;" <> _ -> Ok(#(list.drop(input, 6), "xharr;", "\u{27F7}"))
    "xi;" <> _ -> Ok(#(list.drop(input, 3), "xi;", "\u{3BE}"))
    "xlArr;" <> _ -> Ok(#(list.drop(input, 6), "xlArr;", "\u{27F8}"))
    "xlarr;" <> _ -> Ok(#(list.drop(input, 6), "xlarr;", "\u{27F5}"))
    "xmap;" <> _ -> Ok(#(list.drop(input, 5), "xmap;", "\u{27FC}"))
    "xnis;" <> _ -> Ok(#(list.drop(input, 5), "xnis;", "\u{22FB}"))
    "xodot;" <> _ -> Ok(#(list.drop(input, 6), "xodot;", "\u{2A00}"))
    "xopf;" <> _ -> Ok(#(list.drop(input, 5), "xopf;", "\u{1D569}"))
    "xoplus;" <> _ -> Ok(#(list.drop(input, 7), "xoplus;", "\u{2A01}"))
    "xotime;" <> _ -> Ok(#(list.drop(input, 7), "xotime;", "\u{2A02}"))
    "xrArr;" <> _ -> Ok(#(list.drop(input, 6), "xrArr;", "\u{27F9}"))
    "xrarr;" <> _ -> Ok(#(list.drop(input, 6), "xrarr;", "\u{27F6}"))
    "xscr;" <> _ -> Ok(#(list.drop(input, 5), "xscr;", "\u{1D4CD}"))
    "xsqcup;" <> _ -> Ok(#(list.drop(input, 7), "xsqcup;", "\u{2A06}"))
    "xuplus;" <> _ -> Ok(#(list.drop(input, 7), "xuplus;", "\u{2A04}"))
    "xutri;" <> _ -> Ok(#(list.drop(input, 6), "xutri;", "\u{25B3}"))
    "xvee;" <> _ -> Ok(#(list.drop(input, 5), "xvee;", "\u{22C1}"))
    "xwedge;" <> _ -> Ok(#(list.drop(input, 7), "xwedge;", "\u{22C0}"))
    _ -> Error(Nil)
  }
}

fn match_y(entity: String, input: List(String)) {
  case entity {
    "yacute;" <> _ -> Ok(#(list.drop(input, 7), "yacute;", "\u{FD}"))
    "yacy;" <> _ -> Ok(#(list.drop(input, 5), "yacy;", "\u{44F}"))
    "ycirc;" <> _ -> Ok(#(list.drop(input, 6), "ycirc;", "\u{177}"))
    "ycy;" <> _ -> Ok(#(list.drop(input, 4), "ycy;", "\u{44B}"))
    "yen;" <> _ -> Ok(#(list.drop(input, 4), "yen;", "\u{A5}"))
    "yfr;" <> _ -> Ok(#(list.drop(input, 4), "yfr;", "\u{1D536}"))
    "yicy;" <> _ -> Ok(#(list.drop(input, 5), "yicy;", "\u{457}"))
    "yopf;" <> _ -> Ok(#(list.drop(input, 5), "yopf;", "\u{1D56A}"))
    "yscr;" <> _ -> Ok(#(list.drop(input, 5), "yscr;", "\u{1D4CE}"))
    "yucy;" <> _ -> Ok(#(list.drop(input, 5), "yucy;", "\u{44E}"))
    "yuml;" <> _ -> Ok(#(list.drop(input, 5), "yuml;", "\u{FF}"))
    _ -> Error(Nil)
  }
}

fn match_z(entity: String, input: List(String)) {
  case entity {
    "zacute;" <> _ -> Ok(#(list.drop(input, 7), "zacute;", "\u{17A}"))
    "zcaron;" <> _ -> Ok(#(list.drop(input, 7), "zcaron;", "\u{17E}"))
    "zcy;" <> _ -> Ok(#(list.drop(input, 4), "zcy;", "\u{437}"))
    "zdot;" <> _ -> Ok(#(list.drop(input, 5), "zdot;", "\u{17C}"))
    "zeetrf;" <> _ -> Ok(#(list.drop(input, 7), "zeetrf;", "\u{2128}"))
    "zeta;" <> _ -> Ok(#(list.drop(input, 5), "zeta;", "\u{3B6}"))
    "zfr;" <> _ -> Ok(#(list.drop(input, 4), "zfr;", "\u{1D537}"))
    "zhcy;" <> _ -> Ok(#(list.drop(input, 5), "zhcy;", "\u{436}"))
    "zigrarr;" <> _ -> Ok(#(list.drop(input, 8), "zigrarr;", "\u{21DD}"))
    "zopf;" <> _ -> Ok(#(list.drop(input, 5), "zopf;", "\u{1D56B}"))
    "zscr;" <> _ -> Ok(#(list.drop(input, 5), "zscr;", "\u{1D4CF}"))
    "zwj;" <> _ -> Ok(#(list.drop(input, 4), "zwj;", "\u{200D}"))
    "zwnj;" <> _ -> Ok(#(list.drop(input, 5), "zwnj;", "\u{200C}"))
    _ -> Error(Nil)
  }
}
